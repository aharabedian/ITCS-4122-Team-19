2023-04-27 19:11:33,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:11:33,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:11:33,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:11:33,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:11:33,288:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-27 19:12:13,258:INFO:PyCaret ClassificationExperiment
2023-04-27 19:12:13,258:INFO:Logging name: clf-default-name
2023-04-27 19:12:13,258:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:12:13,258:INFO:version 3.0.0
2023-04-27 19:12:13,258:INFO:Initializing setup()
2023-04-27 19:12:13,258:INFO:self.USI: a393
2023-04-27 19:12:13,258:INFO:self._variable_keys: {'fold_shuffle_param', 'seed', '_ml_usecase', 'memory', 'target_param', 'fold_generator', 'exp_id', 'y_train', 'fix_imbalance', 'fold_groups_param', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'html_param', '_available_plots', 'USI', 'data', 'X_train', 'n_jobs_param', 'y', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'exp_name_log'}
2023-04-27 19:12:13,258:INFO:Checking environment
2023-04-27 19:12:13,258:INFO:python_version: 3.10.6
2023-04-27 19:12:13,259:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:12:13,259:INFO:machine: x86_64
2023-04-27 19:12:13,259:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:12:13,259:INFO:Memory: svmem(total=26859122688, available=23469350912, percent=12.6, used=2968821760, free=3202011136, active=5788381184, inactive=16092979200, buffers=920199168, cached=19768090624, shared=1748992, slab=1568841728)
2023-04-27 19:12:13,261:INFO:Physical Core: 8
2023-04-27 19:12:13,261:INFO:Logical Core: 16
2023-04-27 19:12:13,261:INFO:Checking libraries
2023-04-27 19:12:13,261:INFO:System:
2023-04-27 19:12:13,261:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:12:13,262:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:12:13,262:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:12:13,262:INFO:PyCaret required dependencies:
2023-04-27 19:12:13,262:INFO:                 pip: 23.1.2
2023-04-27 19:12:13,262:INFO:          setuptools: 59.6.0
2023-04-27 19:12:13,262:INFO:             pycaret: 3.0.0
2023-04-27 19:12:13,262:INFO:             IPython: 8.12.0
2023-04-27 19:12:13,262:INFO:          ipywidgets: 8.0.6
2023-04-27 19:12:13,263:INFO:                tqdm: 4.65.0
2023-04-27 19:12:13,263:INFO:               numpy: 1.23.5
2023-04-27 19:12:13,263:INFO:              pandas: 1.5.3
2023-04-27 19:12:13,263:INFO:              jinja2: 3.1.2
2023-04-27 19:12:13,263:INFO:               scipy: 1.10.1
2023-04-27 19:12:13,263:INFO:              joblib: 1.2.0
2023-04-27 19:12:13,263:INFO:             sklearn: 1.2.2
2023-04-27 19:12:13,263:INFO:                pyod: 1.0.9
2023-04-27 19:12:13,263:INFO:            imblearn: 0.10.1
2023-04-27 19:12:13,263:INFO:   category_encoders: 2.6.0
2023-04-27 19:12:13,263:INFO:            lightgbm: 3.3.5
2023-04-27 19:12:13,263:INFO:               numba: 0.56.4
2023-04-27 19:12:13,264:INFO:            requests: 2.29.0
2023-04-27 19:12:13,264:INFO:          matplotlib: 3.7.1
2023-04-27 19:12:13,264:INFO:          scikitplot: 0.3.7
2023-04-27 19:12:13,264:INFO:         yellowbrick: 1.5
2023-04-27 19:12:13,264:INFO:              plotly: 5.14.1
2023-04-27 19:12:13,264:INFO:             kaleido: 0.2.1
2023-04-27 19:12:13,264:INFO:         statsmodels: 0.13.5
2023-04-27 19:12:13,264:INFO:              sktime: 0.17.2
2023-04-27 19:12:13,264:INFO:               tbats: 1.1.3
2023-04-27 19:12:13,264:INFO:            pmdarima: 2.0.3
2023-04-27 19:12:13,264:INFO:              psutil: 5.9.5
2023-04-27 19:12:13,264:INFO:PyCaret optional dependencies:
2023-04-27 19:12:13,295:INFO:                shap: Not installed
2023-04-27 19:12:13,295:INFO:           interpret: Not installed
2023-04-27 19:12:13,295:INFO:                umap: Not installed
2023-04-27 19:12:13,295:INFO:    pandas_profiling: Not installed
2023-04-27 19:12:13,295:INFO:  explainerdashboard: Not installed
2023-04-27 19:12:13,296:INFO:             autoviz: Not installed
2023-04-27 19:12:13,296:INFO:           fairlearn: Not installed
2023-04-27 19:12:13,296:INFO:             xgboost: Not installed
2023-04-27 19:12:13,296:INFO:            catboost: Not installed
2023-04-27 19:12:13,296:INFO:              kmodes: Not installed
2023-04-27 19:12:13,296:INFO:             mlxtend: Not installed
2023-04-27 19:12:13,296:INFO:       statsforecast: Not installed
2023-04-27 19:12:13,296:INFO:        tune_sklearn: Not installed
2023-04-27 19:12:13,296:INFO:                 ray: Not installed
2023-04-27 19:12:13,297:INFO:            hyperopt: Not installed
2023-04-27 19:12:13,297:INFO:              optuna: Not installed
2023-04-27 19:12:13,297:INFO:               skopt: Not installed
2023-04-27 19:12:13,297:INFO:              mlflow: Not installed
2023-04-27 19:12:13,297:INFO:              gradio: Not installed
2023-04-27 19:12:13,297:INFO:             fastapi: Not installed
2023-04-27 19:12:13,297:INFO:             uvicorn: Not installed
2023-04-27 19:12:13,297:INFO:              m2cgen: Not installed
2023-04-27 19:12:13,297:INFO:           evidently: Not installed
2023-04-27 19:12:13,297:INFO:               fugue: Not installed
2023-04-27 19:12:13,297:INFO:           streamlit: 1.21.0
2023-04-27 19:12:13,297:INFO:             prophet: Not installed
2023-04-27 19:12:13,297:INFO:None
2023-04-27 19:12:13,297:INFO:Set up data.
2023-04-27 19:12:13,319:INFO:Set up train/test split.
2023-04-27 19:12:13,329:INFO:Set up index.
2023-04-27 19:12:13,329:INFO:Set up folding strategy.
2023-04-27 19:12:13,330:INFO:Assigning column types.
2023-04-27 19:12:42,768:INFO:PyCaret ClassificationExperiment
2023-04-27 19:12:42,768:INFO:Logging name: clf-default-name
2023-04-27 19:12:42,769:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:12:42,770:INFO:version 3.0.0
2023-04-27 19:12:42,770:INFO:Initializing setup()
2023-04-27 19:12:42,770:INFO:self.USI: 83da
2023-04-27 19:12:42,770:INFO:self._variable_keys: {'fold_shuffle_param', 'seed', '_ml_usecase', 'memory', 'target_param', 'fold_generator', 'exp_id', 'y_train', 'fix_imbalance', 'fold_groups_param', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'html_param', '_available_plots', 'USI', 'data', 'X_train', 'n_jobs_param', 'y', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'exp_name_log'}
2023-04-27 19:12:42,770:INFO:Checking environment
2023-04-27 19:12:42,770:INFO:python_version: 3.10.6
2023-04-27 19:12:42,770:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:12:42,770:INFO:machine: x86_64
2023-04-27 19:12:42,770:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:12:42,771:INFO:Memory: svmem(total=26859122688, available=23533043712, percent=12.4, used=2905120768, free=3265511424, active=5788876800, inactive=16024682496, buffers=920358912, cached=19768131584, shared=1757184, slab=1569005568)
2023-04-27 19:12:42,772:INFO:Physical Core: 8
2023-04-27 19:12:42,772:INFO:Logical Core: 16
2023-04-27 19:12:42,772:INFO:Checking libraries
2023-04-27 19:12:42,772:INFO:System:
2023-04-27 19:12:42,772:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:12:42,772:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:12:42,772:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:12:42,773:INFO:PyCaret required dependencies:
2023-04-27 19:12:42,773:INFO:                 pip: 23.1.2
2023-04-27 19:12:42,773:INFO:          setuptools: 59.6.0
2023-04-27 19:12:42,773:INFO:             pycaret: 3.0.0
2023-04-27 19:12:42,773:INFO:             IPython: 8.12.0
2023-04-27 19:12:42,773:INFO:          ipywidgets: 8.0.6
2023-04-27 19:12:42,773:INFO:                tqdm: 4.65.0
2023-04-27 19:12:42,773:INFO:               numpy: 1.23.5
2023-04-27 19:12:42,773:INFO:              pandas: 1.5.3
2023-04-27 19:12:42,773:INFO:              jinja2: 3.1.2
2023-04-27 19:12:42,773:INFO:               scipy: 1.10.1
2023-04-27 19:12:42,774:INFO:              joblib: 1.2.0
2023-04-27 19:12:42,774:INFO:             sklearn: 1.2.2
2023-04-27 19:12:42,774:INFO:                pyod: 1.0.9
2023-04-27 19:12:42,774:INFO:            imblearn: 0.10.1
2023-04-27 19:12:42,774:INFO:   category_encoders: 2.6.0
2023-04-27 19:12:42,774:INFO:            lightgbm: 3.3.5
2023-04-27 19:12:42,774:INFO:               numba: 0.56.4
2023-04-27 19:12:42,774:INFO:            requests: 2.29.0
2023-04-27 19:12:42,774:INFO:          matplotlib: 3.7.1
2023-04-27 19:12:42,774:INFO:          scikitplot: 0.3.7
2023-04-27 19:12:42,774:INFO:         yellowbrick: 1.5
2023-04-27 19:12:42,775:INFO:              plotly: 5.14.1
2023-04-27 19:12:42,775:INFO:             kaleido: 0.2.1
2023-04-27 19:12:42,775:INFO:         statsmodels: 0.13.5
2023-04-27 19:12:42,775:INFO:              sktime: 0.17.2
2023-04-27 19:12:42,775:INFO:               tbats: 1.1.3
2023-04-27 19:12:42,775:INFO:            pmdarima: 2.0.3
2023-04-27 19:12:42,775:INFO:              psutil: 5.9.5
2023-04-27 19:12:42,775:INFO:PyCaret optional dependencies:
2023-04-27 19:12:42,775:INFO:                shap: Not installed
2023-04-27 19:12:42,775:INFO:           interpret: Not installed
2023-04-27 19:12:42,775:INFO:                umap: Not installed
2023-04-27 19:12:42,775:INFO:    pandas_profiling: Not installed
2023-04-27 19:12:42,775:INFO:  explainerdashboard: Not installed
2023-04-27 19:12:42,775:INFO:             autoviz: Not installed
2023-04-27 19:12:42,775:INFO:           fairlearn: Not installed
2023-04-27 19:12:42,776:INFO:             xgboost: Not installed
2023-04-27 19:12:42,776:INFO:            catboost: Not installed
2023-04-27 19:12:42,776:INFO:              kmodes: Not installed
2023-04-27 19:12:42,776:INFO:             mlxtend: Not installed
2023-04-27 19:12:42,776:INFO:       statsforecast: Not installed
2023-04-27 19:12:42,776:INFO:        tune_sklearn: Not installed
2023-04-27 19:12:42,776:INFO:                 ray: Not installed
2023-04-27 19:12:42,776:INFO:            hyperopt: Not installed
2023-04-27 19:12:42,776:INFO:              optuna: Not installed
2023-04-27 19:12:42,776:INFO:               skopt: Not installed
2023-04-27 19:12:42,776:INFO:              mlflow: Not installed
2023-04-27 19:12:42,776:INFO:              gradio: Not installed
2023-04-27 19:12:42,777:INFO:             fastapi: Not installed
2023-04-27 19:12:42,777:INFO:             uvicorn: Not installed
2023-04-27 19:12:42,777:INFO:              m2cgen: Not installed
2023-04-27 19:12:42,777:INFO:           evidently: Not installed
2023-04-27 19:12:42,777:INFO:               fugue: Not installed
2023-04-27 19:12:42,777:INFO:           streamlit: 1.21.0
2023-04-27 19:12:42,777:INFO:             prophet: Not installed
2023-04-27 19:12:42,777:INFO:None
2023-04-27 19:12:42,777:INFO:Set up data.
2023-04-27 19:12:42,792:INFO:Set up train/test split.
2023-04-27 19:12:42,800:INFO:Set up index.
2023-04-27 19:12:42,801:INFO:Set up folding strategy.
2023-04-27 19:12:42,801:INFO:Assigning column types.
2023-04-27 19:13:49,006:WARNING:/tmp/ipykernel_1561/546481132.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  sb.heatmap(psdas_df.drop(columns=categorical_feature_names).corr())

2023-04-27 19:13:55,914:INFO:PyCaret ClassificationExperiment
2023-04-27 19:13:55,914:INFO:Logging name: clf-default-name
2023-04-27 19:13:55,914:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:13:55,914:INFO:version 3.0.0
2023-04-27 19:13:55,915:INFO:Initializing setup()
2023-04-27 19:13:55,915:INFO:self.USI: ba15
2023-04-27 19:13:55,915:INFO:self._variable_keys: {'fold_shuffle_param', 'seed', '_ml_usecase', 'memory', 'target_param', 'fold_generator', 'exp_id', 'y_train', 'fix_imbalance', 'fold_groups_param', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'html_param', '_available_plots', 'USI', 'data', 'X_train', 'n_jobs_param', 'y', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'exp_name_log'}
2023-04-27 19:13:55,915:INFO:Checking environment
2023-04-27 19:13:55,915:INFO:python_version: 3.10.6
2023-04-27 19:13:55,915:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:13:55,915:INFO:machine: x86_64
2023-04-27 19:13:55,915:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:13:55,915:INFO:Memory: svmem(total=26859122688, available=23475634176, percent=12.6, used=2962505728, free=3207696384, active=5789302784, inactive=16086896640, buffers=920748032, cached=19768172544, shared=1757184, slab=1569366016)
2023-04-27 19:13:55,916:INFO:Physical Core: 8
2023-04-27 19:13:55,916:INFO:Logical Core: 16
2023-04-27 19:13:55,916:INFO:Checking libraries
2023-04-27 19:13:55,917:INFO:System:
2023-04-27 19:13:55,917:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:13:55,917:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:13:55,917:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:13:55,917:INFO:PyCaret required dependencies:
2023-04-27 19:13:55,917:INFO:                 pip: 23.1.2
2023-04-27 19:13:55,917:INFO:          setuptools: 59.6.0
2023-04-27 19:13:55,917:INFO:             pycaret: 3.0.0
2023-04-27 19:13:55,918:INFO:             IPython: 8.12.0
2023-04-27 19:13:55,918:INFO:          ipywidgets: 8.0.6
2023-04-27 19:13:55,918:INFO:                tqdm: 4.65.0
2023-04-27 19:13:55,918:INFO:               numpy: 1.23.5
2023-04-27 19:13:55,918:INFO:              pandas: 1.5.3
2023-04-27 19:13:55,918:INFO:              jinja2: 3.1.2
2023-04-27 19:13:55,918:INFO:               scipy: 1.10.1
2023-04-27 19:13:55,918:INFO:              joblib: 1.2.0
2023-04-27 19:13:55,918:INFO:             sklearn: 1.2.2
2023-04-27 19:13:55,918:INFO:                pyod: 1.0.9
2023-04-27 19:13:55,919:INFO:            imblearn: 0.10.1
2023-04-27 19:13:55,919:INFO:   category_encoders: 2.6.0
2023-04-27 19:13:55,919:INFO:            lightgbm: 3.3.5
2023-04-27 19:13:55,919:INFO:               numba: 0.56.4
2023-04-27 19:13:55,919:INFO:            requests: 2.29.0
2023-04-27 19:13:55,919:INFO:          matplotlib: 3.7.1
2023-04-27 19:13:55,919:INFO:          scikitplot: 0.3.7
2023-04-27 19:13:55,920:INFO:         yellowbrick: 1.5
2023-04-27 19:13:55,920:INFO:              plotly: 5.14.1
2023-04-27 19:13:55,920:INFO:             kaleido: 0.2.1
2023-04-27 19:13:55,920:INFO:         statsmodels: 0.13.5
2023-04-27 19:13:55,920:INFO:              sktime: 0.17.2
2023-04-27 19:13:55,920:INFO:               tbats: 1.1.3
2023-04-27 19:13:55,920:INFO:            pmdarima: 2.0.3
2023-04-27 19:13:55,920:INFO:              psutil: 5.9.5
2023-04-27 19:13:55,921:INFO:PyCaret optional dependencies:
2023-04-27 19:13:55,921:INFO:                shap: Not installed
2023-04-27 19:13:55,921:INFO:           interpret: Not installed
2023-04-27 19:13:55,921:INFO:                umap: Not installed
2023-04-27 19:13:55,921:INFO:    pandas_profiling: Not installed
2023-04-27 19:13:55,921:INFO:  explainerdashboard: Not installed
2023-04-27 19:13:55,921:INFO:             autoviz: Not installed
2023-04-27 19:13:55,922:INFO:           fairlearn: Not installed
2023-04-27 19:13:55,922:INFO:             xgboost: Not installed
2023-04-27 19:13:55,923:INFO:            catboost: Not installed
2023-04-27 19:13:55,925:INFO:              kmodes: Not installed
2023-04-27 19:13:55,926:INFO:             mlxtend: Not installed
2023-04-27 19:13:55,926:INFO:       statsforecast: Not installed
2023-04-27 19:13:55,926:INFO:        tune_sklearn: Not installed
2023-04-27 19:13:55,926:INFO:                 ray: Not installed
2023-04-27 19:13:55,926:INFO:            hyperopt: Not installed
2023-04-27 19:13:55,926:INFO:              optuna: Not installed
2023-04-27 19:13:55,926:INFO:               skopt: Not installed
2023-04-27 19:13:55,926:INFO:              mlflow: Not installed
2023-04-27 19:13:55,926:INFO:              gradio: Not installed
2023-04-27 19:13:55,926:INFO:             fastapi: Not installed
2023-04-27 19:13:55,927:INFO:             uvicorn: Not installed
2023-04-27 19:13:55,927:INFO:              m2cgen: Not installed
2023-04-27 19:13:55,927:INFO:           evidently: Not installed
2023-04-27 19:13:55,927:INFO:               fugue: Not installed
2023-04-27 19:13:55,927:INFO:           streamlit: 1.21.0
2023-04-27 19:13:55,927:INFO:             prophet: Not installed
2023-04-27 19:13:55,927:INFO:None
2023-04-27 19:13:55,927:INFO:Set up data.
2023-04-27 19:13:55,947:INFO:Set up train/test split.
2023-04-27 19:13:55,955:INFO:Set up index.
2023-04-27 19:13:55,956:INFO:Set up folding strategy.
2023-04-27 19:13:55,956:INFO:Assigning column types.
2023-04-27 19:14:41,936:INFO:PyCaret ClassificationExperiment
2023-04-27 19:14:41,936:INFO:Logging name: clf-default-name
2023-04-27 19:14:41,936:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:14:41,936:INFO:version 3.0.0
2023-04-27 19:14:41,936:INFO:Initializing setup()
2023-04-27 19:14:41,936:INFO:self.USI: 5680
2023-04-27 19:14:41,936:INFO:self._variable_keys: {'fold_shuffle_param', 'seed', '_ml_usecase', 'memory', 'target_param', 'fold_generator', 'exp_id', 'y_train', 'fix_imbalance', 'fold_groups_param', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'html_param', '_available_plots', 'USI', 'data', 'X_train', 'n_jobs_param', 'y', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'exp_name_log'}
2023-04-27 19:14:41,936:INFO:Checking environment
2023-04-27 19:14:41,936:INFO:python_version: 3.10.6
2023-04-27 19:14:41,937:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:14:41,937:INFO:machine: x86_64
2023-04-27 19:14:41,937:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:14:41,937:INFO:Memory: svmem(total=26859122688, available=23428730880, percent=12.8, used=3009425408, free=3160530944, active=5789548544, inactive=16130412544, buffers=920956928, cached=19768209408, shared=1761280, slab=1569607680)
2023-04-27 19:14:41,938:INFO:Physical Core: 8
2023-04-27 19:14:41,938:INFO:Logical Core: 16
2023-04-27 19:14:41,938:INFO:Checking libraries
2023-04-27 19:14:41,938:INFO:System:
2023-04-27 19:14:41,938:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:14:41,938:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:14:41,938:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:14:41,938:INFO:PyCaret required dependencies:
2023-04-27 19:14:41,939:INFO:                 pip: 23.1.2
2023-04-27 19:14:41,939:INFO:          setuptools: 59.6.0
2023-04-27 19:14:41,939:INFO:             pycaret: 3.0.0
2023-04-27 19:14:41,939:INFO:             IPython: 8.12.0
2023-04-27 19:14:41,939:INFO:          ipywidgets: 8.0.6
2023-04-27 19:14:41,939:INFO:                tqdm: 4.65.0
2023-04-27 19:14:41,939:INFO:               numpy: 1.23.5
2023-04-27 19:14:41,939:INFO:              pandas: 1.5.3
2023-04-27 19:14:41,939:INFO:              jinja2: 3.1.2
2023-04-27 19:14:41,939:INFO:               scipy: 1.10.1
2023-04-27 19:14:41,940:INFO:              joblib: 1.2.0
2023-04-27 19:14:41,940:INFO:             sklearn: 1.2.2
2023-04-27 19:14:41,940:INFO:                pyod: 1.0.9
2023-04-27 19:14:41,940:INFO:            imblearn: 0.10.1
2023-04-27 19:14:41,940:INFO:   category_encoders: 2.6.0
2023-04-27 19:14:41,940:INFO:            lightgbm: 3.3.5
2023-04-27 19:14:41,940:INFO:               numba: 0.56.4
2023-04-27 19:14:41,940:INFO:            requests: 2.29.0
2023-04-27 19:14:41,940:INFO:          matplotlib: 3.7.1
2023-04-27 19:14:41,940:INFO:          scikitplot: 0.3.7
2023-04-27 19:14:41,940:INFO:         yellowbrick: 1.5
2023-04-27 19:14:41,940:INFO:              plotly: 5.14.1
2023-04-27 19:14:41,941:INFO:             kaleido: 0.2.1
2023-04-27 19:14:41,941:INFO:         statsmodels: 0.13.5
2023-04-27 19:14:41,941:INFO:              sktime: 0.17.2
2023-04-27 19:14:41,941:INFO:               tbats: 1.1.3
2023-04-27 19:14:41,941:INFO:            pmdarima: 2.0.3
2023-04-27 19:14:41,941:INFO:              psutil: 5.9.5
2023-04-27 19:14:41,941:INFO:PyCaret optional dependencies:
2023-04-27 19:14:41,941:INFO:                shap: Not installed
2023-04-27 19:14:41,941:INFO:           interpret: Not installed
2023-04-27 19:14:41,941:INFO:                umap: Not installed
2023-04-27 19:14:41,941:INFO:    pandas_profiling: Not installed
2023-04-27 19:14:41,941:INFO:  explainerdashboard: Not installed
2023-04-27 19:14:41,942:INFO:             autoviz: Not installed
2023-04-27 19:14:41,942:INFO:           fairlearn: Not installed
2023-04-27 19:14:41,942:INFO:             xgboost: Not installed
2023-04-27 19:14:41,942:INFO:            catboost: Not installed
2023-04-27 19:14:41,942:INFO:              kmodes: Not installed
2023-04-27 19:14:41,942:INFO:             mlxtend: Not installed
2023-04-27 19:14:41,942:INFO:       statsforecast: Not installed
2023-04-27 19:14:41,942:INFO:        tune_sklearn: Not installed
2023-04-27 19:14:41,942:INFO:                 ray: Not installed
2023-04-27 19:14:41,943:INFO:            hyperopt: Not installed
2023-04-27 19:14:41,943:INFO:              optuna: Not installed
2023-04-27 19:14:41,943:INFO:               skopt: Not installed
2023-04-27 19:14:41,943:INFO:              mlflow: Not installed
2023-04-27 19:14:41,943:INFO:              gradio: Not installed
2023-04-27 19:14:41,943:INFO:             fastapi: Not installed
2023-04-27 19:14:41,943:INFO:             uvicorn: Not installed
2023-04-27 19:14:41,943:INFO:              m2cgen: Not installed
2023-04-27 19:14:41,943:INFO:           evidently: Not installed
2023-04-27 19:14:41,943:INFO:               fugue: Not installed
2023-04-27 19:14:41,943:INFO:           streamlit: 1.21.0
2023-04-27 19:14:41,943:INFO:             prophet: Not installed
2023-04-27 19:14:41,944:INFO:None
2023-04-27 19:14:41,944:INFO:Set up data.
2023-04-27 19:14:41,966:INFO:Set up train/test split.
2023-04-27 19:14:41,977:INFO:Set up index.
2023-04-27 19:14:41,977:INFO:Set up folding strategy.
2023-04-27 19:14:41,977:INFO:Assigning column types.
2023-04-27 19:14:41,982:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:14:42,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,168:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:14:42,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:14:42,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,358:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:14:42,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:42,532:INFO:Preparing preprocessing pipeline...
2023-04-27 19:14:42,534:INFO:Set up label encoding.
2023-04-27 19:14:42,534:INFO:Set up simple imputation.
2023-04-27 19:14:42,539:INFO:Set up encoding of ordinal features.
2023-04-27 19:14:42,550:INFO:Set up encoding of categorical features.
2023-04-27 19:14:42,551:INFO:Set up column name cleaning.
2023-04-27 19:14:42,885:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:14:43,062:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                    include=["Father's qualification",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=578,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:14:43,062:INFO:Creating final display dataframe.
2023-04-27 19:14:43,819:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      578
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 148)
6   Transformed train set shape              (2541, 148)
7    Transformed test set shape              (1089, 148)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     5680
2023-04-27 19:14:43,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:43,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:44,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:44,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:14:44,005:INFO:setup() successfully completed in 2.07s...............
2023-04-27 19:18:31,127:INFO:PyCaret ClassificationExperiment
2023-04-27 19:18:31,127:INFO:Logging name: clf-default-name
2023-04-27 19:18:31,127:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:18:31,127:INFO:version 3.0.0
2023-04-27 19:18:31,127:INFO:Initializing setup()
2023-04-27 19:18:31,127:INFO:self.USI: cfbb
2023-04-27 19:18:31,127:INFO:self._variable_keys: {'fold_shuffle_param', 'seed', '_ml_usecase', 'memory', 'target_param', 'fold_generator', 'exp_id', 'y_train', 'fix_imbalance', 'fold_groups_param', 'gpu_n_jobs_param', 'pipeline', 'logging_param', 'html_param', '_available_plots', 'USI', 'data', 'X_train', 'n_jobs_param', 'y', 'X_test', 'X', 'is_multiclass', 'gpu_param', 'log_plots_param', 'idx', 'y_test', 'exp_name_log'}
2023-04-27 19:18:31,127:INFO:Checking environment
2023-04-27 19:18:31,127:INFO:python_version: 3.10.6
2023-04-27 19:18:31,127:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:18:31,127:INFO:machine: x86_64
2023-04-27 19:18:31,128:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:18:31,128:INFO:Memory: svmem(total=26859122688, available=23461318656, percent=12.7, used=2976837632, free=3187777536, active=5790703616, inactive=16100687872, buffers=922083328, cached=19772424192, shared=1765376, slab=1570791424)
2023-04-27 19:18:31,128:INFO:Physical Core: 8
2023-04-27 19:18:31,129:INFO:Logical Core: 16
2023-04-27 19:18:31,129:INFO:Checking libraries
2023-04-27 19:18:31,129:INFO:System:
2023-04-27 19:18:31,129:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:18:31,129:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:18:31,129:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:18:31,129:INFO:PyCaret required dependencies:
2023-04-27 19:18:31,129:INFO:                 pip: 23.1.2
2023-04-27 19:18:31,129:INFO:          setuptools: 59.6.0
2023-04-27 19:18:31,129:INFO:             pycaret: 3.0.0
2023-04-27 19:18:31,129:INFO:             IPython: 8.12.0
2023-04-27 19:18:31,129:INFO:          ipywidgets: 8.0.6
2023-04-27 19:18:31,129:INFO:                tqdm: 4.65.0
2023-04-27 19:18:31,129:INFO:               numpy: 1.23.5
2023-04-27 19:18:31,129:INFO:              pandas: 1.5.3
2023-04-27 19:18:31,129:INFO:              jinja2: 3.1.2
2023-04-27 19:18:31,130:INFO:               scipy: 1.10.1
2023-04-27 19:18:31,130:INFO:              joblib: 1.2.0
2023-04-27 19:18:31,130:INFO:             sklearn: 1.2.2
2023-04-27 19:18:31,130:INFO:                pyod: 1.0.9
2023-04-27 19:18:31,130:INFO:            imblearn: 0.10.1
2023-04-27 19:18:31,130:INFO:   category_encoders: 2.6.0
2023-04-27 19:18:31,130:INFO:            lightgbm: 3.3.5
2023-04-27 19:18:31,130:INFO:               numba: 0.56.4
2023-04-27 19:18:31,130:INFO:            requests: 2.29.0
2023-04-27 19:18:31,130:INFO:          matplotlib: 3.7.1
2023-04-27 19:18:31,130:INFO:          scikitplot: 0.3.7
2023-04-27 19:18:31,130:INFO:         yellowbrick: 1.5
2023-04-27 19:18:31,131:INFO:              plotly: 5.14.1
2023-04-27 19:18:31,131:INFO:             kaleido: 0.2.1
2023-04-27 19:18:31,131:INFO:         statsmodels: 0.13.5
2023-04-27 19:18:31,131:INFO:              sktime: 0.17.2
2023-04-27 19:18:31,131:INFO:               tbats: 1.1.3
2023-04-27 19:18:31,131:INFO:            pmdarima: 2.0.3
2023-04-27 19:18:31,131:INFO:              psutil: 5.9.5
2023-04-27 19:18:31,131:INFO:PyCaret optional dependencies:
2023-04-27 19:18:31,132:INFO:                shap: Not installed
2023-04-27 19:18:31,132:INFO:           interpret: Not installed
2023-04-27 19:18:31,132:INFO:                umap: Not installed
2023-04-27 19:18:31,132:INFO:    pandas_profiling: Not installed
2023-04-27 19:18:31,132:INFO:  explainerdashboard: Not installed
2023-04-27 19:18:31,132:INFO:             autoviz: Not installed
2023-04-27 19:18:31,132:INFO:           fairlearn: Not installed
2023-04-27 19:18:31,132:INFO:             xgboost: Not installed
2023-04-27 19:18:31,132:INFO:            catboost: Not installed
2023-04-27 19:18:31,132:INFO:              kmodes: Not installed
2023-04-27 19:18:31,132:INFO:             mlxtend: Not installed
2023-04-27 19:18:31,132:INFO:       statsforecast: Not installed
2023-04-27 19:18:31,132:INFO:        tune_sklearn: Not installed
2023-04-27 19:18:31,132:INFO:                 ray: Not installed
2023-04-27 19:18:31,132:INFO:            hyperopt: Not installed
2023-04-27 19:18:31,133:INFO:              optuna: Not installed
2023-04-27 19:18:31,133:INFO:               skopt: Not installed
2023-04-27 19:18:31,133:INFO:              mlflow: Not installed
2023-04-27 19:18:31,133:INFO:              gradio: Not installed
2023-04-27 19:18:31,133:INFO:             fastapi: Not installed
2023-04-27 19:18:31,133:INFO:             uvicorn: Not installed
2023-04-27 19:18:31,133:INFO:              m2cgen: Not installed
2023-04-27 19:18:31,133:INFO:           evidently: Not installed
2023-04-27 19:18:31,133:INFO:               fugue: Not installed
2023-04-27 19:18:31,133:INFO:           streamlit: 1.21.0
2023-04-27 19:18:31,133:INFO:             prophet: Not installed
2023-04-27 19:18:31,133:INFO:None
2023-04-27 19:18:31,133:INFO:Set up data.
2023-04-27 19:18:31,148:INFO:Set up train/test split.
2023-04-27 19:18:31,156:INFO:Set up index.
2023-04-27 19:18:31,156:INFO:Set up folding strategy.
2023-04-27 19:18:31,157:INFO:Assigning column types.
2023-04-27 19:18:31,162:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:18:31,215:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,216:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,334:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:18:31,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:18:31,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,510:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:18:31,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:31,675:INFO:Preparing preprocessing pipeline...
2023-04-27 19:18:31,676:INFO:Set up label encoding.
2023-04-27 19:18:31,676:INFO:Set up simple imputation.
2023-04-27 19:18:31,681:INFO:Set up encoding of ordinal features.
2023-04-27 19:18:31,695:INFO:Set up encoding of categorical features.
2023-04-27 19:18:31,697:INFO:Set up column name cleaning.
2023-04-27 19:18:31,971:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:18:32,151:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=579,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:18:32,151:INFO:Creating final display dataframe.
2023-04-27 19:18:32,973:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      579
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 102)
6   Transformed train set shape              (2541, 102)
7    Transformed test set shape              (1089, 102)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     cfbb
2023-04-27 19:18:33,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:33,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:33,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:33,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:18:33,174:INFO:setup() successfully completed in 2.05s...............
2023-04-27 19:18:33,175:INFO:Initializing compare_models()
2023-04-27 19:18:33,175:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-27 19:18:33,175:INFO:Checking exceptions
2023-04-27 19:18:33,179:INFO:Preparing display monitor
2023-04-27 19:18:33,219:INFO:Initializing Logistic Regression
2023-04-27 19:18:33,219:INFO:Total runtime is 7.681051890055339e-06 minutes
2023-04-27 19:18:33,230:INFO:SubProcess create_model() called ==================================
2023-04-27 19:18:33,232:INFO:Initializing create_model()
2023-04-27 19:18:33,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:18:33,232:INFO:Checking exceptions
2023-04-27 19:18:33,232:INFO:Importing libraries
2023-04-27 19:18:33,232:INFO:Copying training dataset
2023-04-27 19:18:33,242:INFO:Defining folds
2023-04-27 19:18:33,242:INFO:Declaring metric variables
2023-04-27 19:18:33,249:INFO:Importing untrained model
2023-04-27 19:18:33,259:INFO:Logistic Regression Imported successfully
2023-04-27 19:18:33,281:INFO:Starting cross validation
2023-04-27 19:18:33,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:18:37,919:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-27 19:18:40,942:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-27 19:18:42,721:INFO:Calculating mean and std
2023-04-27 19:18:42,724:INFO:Creating metrics dataframe
2023-04-27 19:18:42,749:INFO:Uploading results into container
2023-04-27 19:18:42,751:INFO:Uploading model into container now
2023-04-27 19:18:42,752:INFO:_master_model_container: 1
2023-04-27 19:18:42,752:INFO:_display_container: 2
2023-04-27 19:18:42,752:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=579, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:18:42,753:INFO:create_model() successfully completed......................................
2023-04-27 19:18:42,991:INFO:SubProcess create_model() end ==================================
2023-04-27 19:18:42,991:INFO:Creating metrics dataframe
2023-04-27 19:18:43,002:INFO:Initializing K Neighbors Classifier
2023-04-27 19:18:43,003:INFO:Total runtime is 0.1630636175473531 minutes
2023-04-27 19:18:43,007:INFO:SubProcess create_model() called ==================================
2023-04-27 19:18:43,007:INFO:Initializing create_model()
2023-04-27 19:18:43,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:18:43,008:INFO:Checking exceptions
2023-04-27 19:18:43,008:INFO:Importing libraries
2023-04-27 19:18:43,008:INFO:Copying training dataset
2023-04-27 19:18:43,016:INFO:Defining folds
2023-04-27 19:18:43,017:INFO:Declaring metric variables
2023-04-27 19:18:43,022:INFO:Importing untrained model
2023-04-27 19:18:43,032:INFO:K Neighbors Classifier Imported successfully
2023-04-27 19:18:43,046:INFO:Starting cross validation
2023-04-27 19:18:43,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:18:56,352:INFO:Calculating mean and std
2023-04-27 19:18:56,354:INFO:Creating metrics dataframe
2023-04-27 19:18:56,380:INFO:Uploading results into container
2023-04-27 19:18:56,381:INFO:Uploading model into container now
2023-04-27 19:18:56,381:INFO:_master_model_container: 2
2023-04-27 19:18:56,381:INFO:_display_container: 2
2023-04-27 19:18:56,382:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 19:18:56,382:INFO:create_model() successfully completed......................................
2023-04-27 19:18:56,567:INFO:SubProcess create_model() end ==================================
2023-04-27 19:18:56,567:INFO:Creating metrics dataframe
2023-04-27 19:18:56,580:INFO:Initializing Naive Bayes
2023-04-27 19:18:56,580:INFO:Total runtime is 0.38935661713282266 minutes
2023-04-27 19:18:56,584:INFO:SubProcess create_model() called ==================================
2023-04-27 19:18:56,585:INFO:Initializing create_model()
2023-04-27 19:18:56,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:18:56,585:INFO:Checking exceptions
2023-04-27 19:18:56,585:INFO:Importing libraries
2023-04-27 19:18:56,585:INFO:Copying training dataset
2023-04-27 19:18:56,591:INFO:Defining folds
2023-04-27 19:18:56,592:INFO:Declaring metric variables
2023-04-27 19:18:56,596:INFO:Importing untrained model
2023-04-27 19:18:56,604:INFO:Naive Bayes Imported successfully
2023-04-27 19:18:56,615:INFO:Starting cross validation
2023-04-27 19:18:56,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:18:57,785:INFO:Calculating mean and std
2023-04-27 19:18:57,787:INFO:Creating metrics dataframe
2023-04-27 19:18:57,818:INFO:Uploading results into container
2023-04-27 19:18:57,819:INFO:Uploading model into container now
2023-04-27 19:18:57,820:INFO:_master_model_container: 3
2023-04-27 19:18:57,820:INFO:_display_container: 2
2023-04-27 19:18:57,820:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-27 19:18:57,820:INFO:create_model() successfully completed......................................
2023-04-27 19:18:58,036:INFO:SubProcess create_model() end ==================================
2023-04-27 19:18:58,036:INFO:Creating metrics dataframe
2023-04-27 19:18:58,048:INFO:Initializing Decision Tree Classifier
2023-04-27 19:18:58,048:INFO:Total runtime is 0.4138210892677307 minutes
2023-04-27 19:18:58,052:INFO:SubProcess create_model() called ==================================
2023-04-27 19:18:58,053:INFO:Initializing create_model()
2023-04-27 19:18:58,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:18:58,053:INFO:Checking exceptions
2023-04-27 19:18:58,053:INFO:Importing libraries
2023-04-27 19:18:58,053:INFO:Copying training dataset
2023-04-27 19:18:58,059:INFO:Defining folds
2023-04-27 19:18:58,059:INFO:Declaring metric variables
2023-04-27 19:18:58,063:INFO:Importing untrained model
2023-04-27 19:18:58,068:INFO:Decision Tree Classifier Imported successfully
2023-04-27 19:18:58,082:INFO:Starting cross validation
2023-04-27 19:18:58,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:18:59,268:INFO:Calculating mean and std
2023-04-27 19:18:59,270:INFO:Creating metrics dataframe
2023-04-27 19:18:59,304:INFO:Uploading results into container
2023-04-27 19:18:59,305:INFO:Uploading model into container now
2023-04-27 19:18:59,305:INFO:_master_model_container: 4
2023-04-27 19:18:59,305:INFO:_display_container: 2
2023-04-27 19:18:59,306:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=579, splitter='best')
2023-04-27 19:18:59,306:INFO:create_model() successfully completed......................................
2023-04-27 19:18:59,525:INFO:SubProcess create_model() end ==================================
2023-04-27 19:18:59,525:INFO:Creating metrics dataframe
2023-04-27 19:18:59,538:INFO:Initializing SVM - Linear Kernel
2023-04-27 19:18:59,539:INFO:Total runtime is 0.43866670926411944 minutes
2023-04-27 19:18:59,543:INFO:SubProcess create_model() called ==================================
2023-04-27 19:18:59,543:INFO:Initializing create_model()
2023-04-27 19:18:59,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:18:59,544:INFO:Checking exceptions
2023-04-27 19:18:59,544:INFO:Importing libraries
2023-04-27 19:18:59,544:INFO:Copying training dataset
2023-04-27 19:18:59,549:INFO:Defining folds
2023-04-27 19:18:59,550:INFO:Declaring metric variables
2023-04-27 19:18:59,554:INFO:Importing untrained model
2023-04-27 19:18:59,559:INFO:SVM - Linear Kernel Imported successfully
2023-04-27 19:18:59,572:INFO:Starting cross validation
2023-04-27 19:18:59,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:00,709:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,730:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,745:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,813:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,858:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,861:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,885:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,903:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,929:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,929:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:19:00,950:INFO:Calculating mean and std
2023-04-27 19:19:00,951:INFO:Creating metrics dataframe
2023-04-27 19:19:00,989:INFO:Uploading results into container
2023-04-27 19:19:00,990:INFO:Uploading model into container now
2023-04-27 19:19:00,991:INFO:_master_model_container: 5
2023-04-27 19:19:00,991:INFO:_display_container: 2
2023-04-27 19:19:00,992:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=579, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-27 19:19:00,992:INFO:create_model() successfully completed......................................
2023-04-27 19:19:01,228:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:01,228:INFO:Creating metrics dataframe
2023-04-27 19:19:01,242:INFO:Initializing Ridge Classifier
2023-04-27 19:19:01,242:INFO:Total runtime is 0.4670595208803812 minutes
2023-04-27 19:19:01,247:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:01,247:INFO:Initializing create_model()
2023-04-27 19:19:01,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:01,248:INFO:Checking exceptions
2023-04-27 19:19:01,248:INFO:Importing libraries
2023-04-27 19:19:01,248:INFO:Copying training dataset
2023-04-27 19:19:01,255:INFO:Defining folds
2023-04-27 19:19:01,256:INFO:Declaring metric variables
2023-04-27 19:19:01,263:INFO:Importing untrained model
2023-04-27 19:19:01,271:INFO:Ridge Classifier Imported successfully
2023-04-27 19:19:01,284:INFO:Starting cross validation
2023-04-27 19:19:01,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:02,543:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,566:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,710:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,739:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,741:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,752:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,787:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,791:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,795:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,893:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:19:02,908:INFO:Calculating mean and std
2023-04-27 19:19:02,910:INFO:Creating metrics dataframe
2023-04-27 19:19:02,965:INFO:Uploading results into container
2023-04-27 19:19:02,966:INFO:Uploading model into container now
2023-04-27 19:19:02,968:INFO:_master_model_container: 6
2023-04-27 19:19:02,968:INFO:_display_container: 2
2023-04-27 19:19:02,968:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=579, solver='auto',
                tol=0.0001)
2023-04-27 19:19:02,969:INFO:create_model() successfully completed......................................
2023-04-27 19:19:03,185:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:03,185:INFO:Creating metrics dataframe
2023-04-27 19:19:03,200:INFO:Initializing Random Forest Classifier
2023-04-27 19:19:03,201:INFO:Total runtime is 0.49969617923100784 minutes
2023-04-27 19:19:03,204:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:03,205:INFO:Initializing create_model()
2023-04-27 19:19:03,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:03,206:INFO:Checking exceptions
2023-04-27 19:19:03,206:INFO:Importing libraries
2023-04-27 19:19:03,206:INFO:Copying training dataset
2023-04-27 19:19:03,213:INFO:Defining folds
2023-04-27 19:19:03,214:INFO:Declaring metric variables
2023-04-27 19:19:03,219:INFO:Importing untrained model
2023-04-27 19:19:03,226:INFO:Random Forest Classifier Imported successfully
2023-04-27 19:19:03,238:INFO:Starting cross validation
2023-04-27 19:19:03,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:05,890:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:06,042:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:06,090:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:06,095:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:06,114:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:06,175:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:19:08,460:INFO:Calculating mean and std
2023-04-27 19:19:08,462:INFO:Creating metrics dataframe
2023-04-27 19:19:08,513:INFO:Uploading results into container
2023-04-27 19:19:08,513:INFO:Uploading model into container now
2023-04-27 19:19:08,514:INFO:_master_model_container: 7
2023-04-27 19:19:08,514:INFO:_display_container: 2
2023-04-27 19:19:08,514:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=579, verbose=0, warm_start=False)
2023-04-27 19:19:08,515:INFO:create_model() successfully completed......................................
2023-04-27 19:19:08,695:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:08,695:INFO:Creating metrics dataframe
2023-04-27 19:19:08,708:INFO:Initializing Quadratic Discriminant Analysis
2023-04-27 19:19:08,709:INFO:Total runtime is 0.5914987405141194 minutes
2023-04-27 19:19:08,715:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:08,715:INFO:Initializing create_model()
2023-04-27 19:19:08,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:08,716:INFO:Checking exceptions
2023-04-27 19:19:08,716:INFO:Importing libraries
2023-04-27 19:19:08,716:INFO:Copying training dataset
2023-04-27 19:19:08,722:INFO:Defining folds
2023-04-27 19:19:08,723:INFO:Declaring metric variables
2023-04-27 19:19:08,728:INFO:Importing untrained model
2023-04-27 19:19:08,734:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-27 19:19:08,746:INFO:Starting cross validation
2023-04-27 19:19:08,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:09,049:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,087:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,096:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,116:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,137:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,145:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,154:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,173:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,187:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,223:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:19:09,814:INFO:Calculating mean and std
2023-04-27 19:19:09,816:INFO:Creating metrics dataframe
2023-04-27 19:19:09,869:INFO:Uploading results into container
2023-04-27 19:19:09,870:INFO:Uploading model into container now
2023-04-27 19:19:09,871:INFO:_master_model_container: 8
2023-04-27 19:19:09,871:INFO:_display_container: 2
2023-04-27 19:19:09,871:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-27 19:19:09,871:INFO:create_model() successfully completed......................................
2023-04-27 19:19:10,051:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:10,052:INFO:Creating metrics dataframe
2023-04-27 19:19:10,065:INFO:Initializing Ada Boost Classifier
2023-04-27 19:19:10,065:INFO:Total runtime is 0.6141098539034525 minutes
2023-04-27 19:19:10,070:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:10,071:INFO:Initializing create_model()
2023-04-27 19:19:10,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:10,071:INFO:Checking exceptions
2023-04-27 19:19:10,071:INFO:Importing libraries
2023-04-27 19:19:10,071:INFO:Copying training dataset
2023-04-27 19:19:10,077:INFO:Defining folds
2023-04-27 19:19:10,077:INFO:Declaring metric variables
2023-04-27 19:19:10,084:INFO:Importing untrained model
2023-04-27 19:19:10,092:INFO:Ada Boost Classifier Imported successfully
2023-04-27 19:19:10,109:INFO:Starting cross validation
2023-04-27 19:19:10,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:12,238:INFO:Calculating mean and std
2023-04-27 19:19:12,240:INFO:Creating metrics dataframe
2023-04-27 19:19:12,305:INFO:Uploading results into container
2023-04-27 19:19:12,306:INFO:Uploading model into container now
2023-04-27 19:19:12,306:INFO:_master_model_container: 9
2023-04-27 19:19:12,307:INFO:_display_container: 2
2023-04-27 19:19:12,307:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=579)
2023-04-27 19:19:12,307:INFO:create_model() successfully completed......................................
2023-04-27 19:19:12,550:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:12,550:INFO:Creating metrics dataframe
2023-04-27 19:19:12,565:INFO:Initializing Gradient Boosting Classifier
2023-04-27 19:19:12,565:INFO:Total runtime is 0.6557779510815938 minutes
2023-04-27 19:19:12,570:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:12,570:INFO:Initializing create_model()
2023-04-27 19:19:12,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:12,570:INFO:Checking exceptions
2023-04-27 19:19:12,570:INFO:Importing libraries
2023-04-27 19:19:12,571:INFO:Copying training dataset
2023-04-27 19:19:12,576:INFO:Defining folds
2023-04-27 19:19:12,577:INFO:Declaring metric variables
2023-04-27 19:19:12,582:INFO:Importing untrained model
2023-04-27 19:19:12,588:INFO:Gradient Boosting Classifier Imported successfully
2023-04-27 19:19:12,601:INFO:Starting cross validation
2023-04-27 19:19:12,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:15,213:INFO:Calculating mean and std
2023-04-27 19:19:15,214:INFO:Creating metrics dataframe
2023-04-27 19:19:15,282:INFO:Uploading results into container
2023-04-27 19:19:15,283:INFO:Uploading model into container now
2023-04-27 19:19:15,284:INFO:_master_model_container: 10
2023-04-27 19:19:15,284:INFO:_display_container: 2
2023-04-27 19:19:15,285:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=579, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-27 19:19:15,285:INFO:create_model() successfully completed......................................
2023-04-27 19:19:15,484:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:15,484:INFO:Creating metrics dataframe
2023-04-27 19:19:15,500:INFO:Initializing Linear Discriminant Analysis
2023-04-27 19:19:15,500:INFO:Total runtime is 0.7046945532162984 minutes
2023-04-27 19:19:15,504:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:15,505:INFO:Initializing create_model()
2023-04-27 19:19:15,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:15,505:INFO:Checking exceptions
2023-04-27 19:19:15,506:INFO:Importing libraries
2023-04-27 19:19:15,506:INFO:Copying training dataset
2023-04-27 19:19:15,511:INFO:Defining folds
2023-04-27 19:19:15,512:INFO:Declaring metric variables
2023-04-27 19:19:15,517:INFO:Importing untrained model
2023-04-27 19:19:15,522:INFO:Linear Discriminant Analysis Imported successfully
2023-04-27 19:19:15,534:INFO:Starting cross validation
2023-04-27 19:19:15,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:16,543:INFO:Calculating mean and std
2023-04-27 19:19:16,545:INFO:Creating metrics dataframe
2023-04-27 19:19:16,624:INFO:Uploading results into container
2023-04-27 19:19:16,625:INFO:Uploading model into container now
2023-04-27 19:19:16,625:INFO:_master_model_container: 11
2023-04-27 19:19:16,626:INFO:_display_container: 2
2023-04-27 19:19:16,626:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-27 19:19:16,626:INFO:create_model() successfully completed......................................
2023-04-27 19:19:16,793:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:16,793:INFO:Creating metrics dataframe
2023-04-27 19:19:16,808:INFO:Initializing Extra Trees Classifier
2023-04-27 19:19:16,808:INFO:Total runtime is 0.7264861265818278 minutes
2023-04-27 19:19:16,812:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:16,813:INFO:Initializing create_model()
2023-04-27 19:19:16,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:16,813:INFO:Checking exceptions
2023-04-27 19:19:16,813:INFO:Importing libraries
2023-04-27 19:19:16,813:INFO:Copying training dataset
2023-04-27 19:19:16,819:INFO:Defining folds
2023-04-27 19:19:16,820:INFO:Declaring metric variables
2023-04-27 19:19:16,826:INFO:Importing untrained model
2023-04-27 19:19:16,832:INFO:Extra Trees Classifier Imported successfully
2023-04-27 19:19:16,843:INFO:Starting cross validation
2023-04-27 19:19:16,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:19,936:INFO:Calculating mean and std
2023-04-27 19:19:19,938:INFO:Creating metrics dataframe
2023-04-27 19:19:20,014:INFO:Uploading results into container
2023-04-27 19:19:20,015:INFO:Uploading model into container now
2023-04-27 19:19:20,016:INFO:_master_model_container: 12
2023-04-27 19:19:20,016:INFO:_display_container: 2
2023-04-27 19:19:20,016:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=579, verbose=0, warm_start=False)
2023-04-27 19:19:20,016:INFO:create_model() successfully completed......................................
2023-04-27 19:19:20,286:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:20,287:INFO:Creating metrics dataframe
2023-04-27 19:19:20,306:INFO:Initializing Light Gradient Boosting Machine
2023-04-27 19:19:20,307:INFO:Total runtime is 0.7848002036412557 minutes
2023-04-27 19:19:20,315:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:20,315:INFO:Initializing create_model()
2023-04-27 19:19:20,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:20,316:INFO:Checking exceptions
2023-04-27 19:19:20,316:INFO:Importing libraries
2023-04-27 19:19:20,316:INFO:Copying training dataset
2023-04-27 19:19:20,323:INFO:Defining folds
2023-04-27 19:19:20,323:INFO:Declaring metric variables
2023-04-27 19:19:20,340:INFO:Importing untrained model
2023-04-27 19:19:20,349:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-27 19:19:20,366:INFO:Starting cross validation
2023-04-27 19:19:20,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:22,414:INFO:Calculating mean and std
2023-04-27 19:19:22,416:INFO:Creating metrics dataframe
2023-04-27 19:19:22,492:INFO:Uploading results into container
2023-04-27 19:19:22,494:INFO:Uploading model into container now
2023-04-27 19:19:22,494:INFO:_master_model_container: 13
2023-04-27 19:19:22,494:INFO:_display_container: 2
2023-04-27 19:19:22,495:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=579, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-27 19:19:22,495:INFO:create_model() successfully completed......................................
2023-04-27 19:19:22,661:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:22,662:INFO:Creating metrics dataframe
2023-04-27 19:19:22,677:INFO:Initializing Dummy Classifier
2023-04-27 19:19:22,677:INFO:Total runtime is 0.8243040164311727 minutes
2023-04-27 19:19:22,682:INFO:SubProcess create_model() called ==================================
2023-04-27 19:19:22,682:INFO:Initializing create_model()
2023-04-27 19:19:22,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcdf0672ad0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:22,683:INFO:Checking exceptions
2023-04-27 19:19:22,683:INFO:Importing libraries
2023-04-27 19:19:22,683:INFO:Copying training dataset
2023-04-27 19:19:22,691:INFO:Defining folds
2023-04-27 19:19:22,691:INFO:Declaring metric variables
2023-04-27 19:19:22,696:INFO:Importing untrained model
2023-04-27 19:19:22,702:INFO:Dummy Classifier Imported successfully
2023-04-27 19:19:22,717:INFO:Starting cross validation
2023-04-27 19:19:22,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:19:23,879:INFO:Calculating mean and std
2023-04-27 19:19:23,880:INFO:Creating metrics dataframe
2023-04-27 19:19:23,982:INFO:Uploading results into container
2023-04-27 19:19:23,984:INFO:Uploading model into container now
2023-04-27 19:19:23,985:INFO:_master_model_container: 14
2023-04-27 19:19:23,985:INFO:_display_container: 2
2023-04-27 19:19:23,986:INFO:DummyClassifier(constant=None, random_state=579, strategy='prior')
2023-04-27 19:19:23,986:INFO:create_model() successfully completed......................................
2023-04-27 19:19:24,227:INFO:SubProcess create_model() end ==================================
2023-04-27 19:19:24,227:INFO:Creating metrics dataframe
2023-04-27 19:19:24,252:INFO:Initializing create_model()
2023-04-27 19:19:24,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcdf1139cc0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=579, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:19:24,253:INFO:Checking exceptions
2023-04-27 19:19:24,255:INFO:Importing libraries
2023-04-27 19:19:24,255:INFO:Copying training dataset
2023-04-27 19:19:24,260:INFO:Defining folds
2023-04-27 19:19:24,260:INFO:Declaring metric variables
2023-04-27 19:19:24,260:INFO:Importing untrained model
2023-04-27 19:19:24,260:INFO:Declaring custom model
2023-04-27 19:19:24,261:INFO:Random Forest Classifier Imported successfully
2023-04-27 19:19:24,264:INFO:Cross validation set to False
2023-04-27 19:19:24,264:INFO:Fitting Model
2023-04-27 19:19:25,358:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=579, verbose=0, warm_start=False)
2023-04-27 19:19:25,358:INFO:create_model() successfully completed......................................
2023-04-27 19:19:25,627:INFO:_master_model_container: 14
2023-04-27 19:19:25,627:INFO:_display_container: 2
2023-04-27 19:19:25,628:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=579, verbose=0, warm_start=False)
2023-04-27 19:19:25,628:INFO:compare_models() successfully completed......................................
2023-04-27 19:28:36,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:28:36,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:28:36,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:28:36,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 19:28:37,309:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-27 19:28:37,466:INFO:PyCaret ClassificationExperiment
2023-04-27 19:28:37,466:INFO:Logging name: clf-default-name
2023-04-27 19:28:37,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:28:37,467:INFO:version 3.0.0
2023-04-27 19:28:37,467:INFO:Initializing setup()
2023-04-27 19:28:37,467:INFO:self.USI: 4e0d
2023-04-27 19:28:37,467:INFO:self._variable_keys: {'seed', 'memory', '_available_plots', 'y_train', 'is_multiclass', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'pipeline', 'data', 'X_test', 'target_param', 'fold_generator', 'y', 'idx', '_ml_usecase', 'exp_id', 'y_test', 'html_param', 'fold_shuffle_param', 'X', 'USI'}
2023-04-27 19:28:37,467:INFO:Checking environment
2023-04-27 19:28:37,467:INFO:python_version: 3.10.6
2023-04-27 19:28:37,467:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:28:37,467:INFO:machine: x86_64
2023-04-27 19:28:37,467:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:28:37,468:INFO:Memory: svmem(total=26859122688, available=23546437632, percent=12.3, used=2891706368, free=3091308544, active=5948207104, inactive=16030679040, buffers=926248960, cached=19949858816, shared=1777664, slab=1578582016)
2023-04-27 19:28:37,469:INFO:Physical Core: 8
2023-04-27 19:28:37,469:INFO:Logical Core: 16
2023-04-27 19:28:37,469:INFO:Checking libraries
2023-04-27 19:28:37,469:INFO:System:
2023-04-27 19:28:37,469:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:28:37,469:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:28:37,469:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:28:37,469:INFO:PyCaret required dependencies:
2023-04-27 19:28:37,470:INFO:                 pip: 23.1.2
2023-04-27 19:28:37,470:INFO:          setuptools: 59.6.0
2023-04-27 19:28:37,470:INFO:             pycaret: 3.0.0
2023-04-27 19:28:37,470:INFO:             IPython: 8.12.0
2023-04-27 19:28:37,470:INFO:          ipywidgets: 8.0.6
2023-04-27 19:28:37,470:INFO:                tqdm: 4.65.0
2023-04-27 19:28:37,470:INFO:               numpy: 1.23.5
2023-04-27 19:28:37,470:INFO:              pandas: 1.5.3
2023-04-27 19:28:37,470:INFO:              jinja2: 3.1.2
2023-04-27 19:28:37,470:INFO:               scipy: 1.10.1
2023-04-27 19:28:37,470:INFO:              joblib: 1.2.0
2023-04-27 19:28:37,470:INFO:             sklearn: 1.2.2
2023-04-27 19:28:37,470:INFO:                pyod: 1.0.9
2023-04-27 19:28:37,470:INFO:            imblearn: 0.10.1
2023-04-27 19:28:37,470:INFO:   category_encoders: 2.6.0
2023-04-27 19:28:37,470:INFO:            lightgbm: 3.3.5
2023-04-27 19:28:37,471:INFO:               numba: 0.56.4
2023-04-27 19:28:37,471:INFO:            requests: 2.29.0
2023-04-27 19:28:37,471:INFO:          matplotlib: 3.7.1
2023-04-27 19:28:37,471:INFO:          scikitplot: 0.3.7
2023-04-27 19:28:37,471:INFO:         yellowbrick: 1.5
2023-04-27 19:28:37,471:INFO:              plotly: 5.14.1
2023-04-27 19:28:37,472:INFO:             kaleido: 0.2.1
2023-04-27 19:28:37,472:INFO:         statsmodels: 0.13.5
2023-04-27 19:28:37,472:INFO:              sktime: 0.17.2
2023-04-27 19:28:37,472:INFO:               tbats: 1.1.3
2023-04-27 19:28:37,472:INFO:            pmdarima: 2.0.3
2023-04-27 19:28:37,472:INFO:              psutil: 5.9.5
2023-04-27 19:28:37,473:INFO:PyCaret optional dependencies:
2023-04-27 19:28:37,499:INFO:                shap: Not installed
2023-04-27 19:28:37,499:INFO:           interpret: Not installed
2023-04-27 19:28:37,500:INFO:                umap: Not installed
2023-04-27 19:28:37,500:INFO:    pandas_profiling: Not installed
2023-04-27 19:28:37,500:INFO:  explainerdashboard: Not installed
2023-04-27 19:28:37,500:INFO:             autoviz: Not installed
2023-04-27 19:28:37,500:INFO:           fairlearn: Not installed
2023-04-27 19:28:37,500:INFO:             xgboost: Not installed
2023-04-27 19:28:37,500:INFO:            catboost: Not installed
2023-04-27 19:28:37,500:INFO:              kmodes: Not installed
2023-04-27 19:28:37,500:INFO:             mlxtend: Not installed
2023-04-27 19:28:37,500:INFO:       statsforecast: Not installed
2023-04-27 19:28:37,500:INFO:        tune_sklearn: Not installed
2023-04-27 19:28:37,500:INFO:                 ray: Not installed
2023-04-27 19:28:37,500:INFO:            hyperopt: Not installed
2023-04-27 19:28:37,500:INFO:              optuna: Not installed
2023-04-27 19:28:37,500:INFO:               skopt: Not installed
2023-04-27 19:28:37,500:INFO:              mlflow: Not installed
2023-04-27 19:28:37,500:INFO:              gradio: Not installed
2023-04-27 19:28:37,500:INFO:             fastapi: Not installed
2023-04-27 19:28:37,501:INFO:             uvicorn: Not installed
2023-04-27 19:28:37,501:INFO:              m2cgen: Not installed
2023-04-27 19:28:37,501:INFO:           evidently: Not installed
2023-04-27 19:28:37,501:INFO:               fugue: Not installed
2023-04-27 19:28:37,501:INFO:           streamlit: 1.21.0
2023-04-27 19:28:37,501:INFO:             prophet: Not installed
2023-04-27 19:28:37,501:INFO:None
2023-04-27 19:28:37,501:INFO:Set up data.
2023-04-27 19:28:37,520:INFO:Set up train/test split.
2023-04-27 19:28:37,527:INFO:Set up index.
2023-04-27 19:28:37,527:INFO:Set up folding strategy.
2023-04-27 19:28:37,528:INFO:Assigning column types.
2023-04-27 19:28:37,531:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:28:37,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,737:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:28:37,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:28:37,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:37,916:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:28:38,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:38,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:38,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:38,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:38,088:INFO:Preparing preprocessing pipeline...
2023-04-27 19:28:38,090:INFO:Set up label encoding.
2023-04-27 19:28:38,090:INFO:Set up simple imputation.
2023-04-27 19:28:38,095:INFO:Set up encoding of ordinal features.
2023-04-27 19:28:38,106:INFO:Set up encoding of categorical features.
2023-04-27 19:28:38,107:INFO:Set up column name cleaning.
2023-04-27 19:28:43,632:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:28:43,784:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=5056,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:28:43,785:INFO:Creating final display dataframe.
2023-04-27 19:28:44,637:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     5056
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 127)
6   Transformed train set shape              (2541, 127)
7    Transformed test set shape              (1089, 127)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     4e0d
2023-04-27 19:28:44,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:44,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:44,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:44,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:28:44,819:INFO:setup() successfully completed in 7.37s...............
2023-04-27 19:28:44,888:INFO:Initializing compare_models()
2023-04-27 19:28:44,888:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-27 19:28:44,889:INFO:Checking exceptions
2023-04-27 19:28:44,896:INFO:Preparing display monitor
2023-04-27 19:28:44,933:INFO:Initializing Logistic Regression
2023-04-27 19:28:44,933:INFO:Total runtime is 4.255771636962891e-06 minutes
2023-04-27 19:28:44,938:INFO:SubProcess create_model() called ==================================
2023-04-27 19:28:44,938:INFO:Initializing create_model()
2023-04-27 19:28:44,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:28:44,939:INFO:Checking exceptions
2023-04-27 19:28:44,939:INFO:Importing libraries
2023-04-27 19:28:44,939:INFO:Copying training dataset
2023-04-27 19:28:44,948:INFO:Defining folds
2023-04-27 19:28:44,948:INFO:Declaring metric variables
2023-04-27 19:28:44,955:INFO:Importing untrained model
2023-04-27 19:28:44,960:INFO:Logistic Regression Imported successfully
2023-04-27 19:28:44,976:INFO:Starting cross validation
2023-04-27 19:28:44,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:32:10,101:INFO:Calculating mean and std
2023-04-27 19:32:10,102:INFO:Creating metrics dataframe
2023-04-27 19:32:10,211:INFO:Uploading results into container
2023-04-27 19:32:10,213:INFO:Uploading model into container now
2023-04-27 19:32:10,213:INFO:_master_model_container: 1
2023-04-27 19:32:10,214:INFO:_display_container: 2
2023-04-27 19:32:10,214:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5056, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:32:10,214:INFO:create_model() successfully completed......................................
2023-04-27 19:32:10,337:INFO:SubProcess create_model() end ==================================
2023-04-27 19:32:10,337:INFO:Creating metrics dataframe
2023-04-27 19:32:10,351:INFO:Initializing K Neighbors Classifier
2023-04-27 19:32:10,351:INFO:Total runtime is 3.423632498582204 minutes
2023-04-27 19:32:10,356:INFO:SubProcess create_model() called ==================================
2023-04-27 19:32:10,357:INFO:Initializing create_model()
2023-04-27 19:32:10,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:32:10,358:INFO:Checking exceptions
2023-04-27 19:32:10,358:INFO:Importing libraries
2023-04-27 19:32:10,358:INFO:Copying training dataset
2023-04-27 19:32:10,365:INFO:Defining folds
2023-04-27 19:32:10,365:INFO:Declaring metric variables
2023-04-27 19:32:10,370:INFO:Importing untrained model
2023-04-27 19:32:10,376:INFO:K Neighbors Classifier Imported successfully
2023-04-27 19:32:10,386:INFO:Starting cross validation
2023-04-27 19:32:10,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:04,469:INFO:Calculating mean and std
2023-04-27 19:34:04,470:INFO:Creating metrics dataframe
2023-04-27 19:34:04,598:INFO:Uploading results into container
2023-04-27 19:34:04,599:INFO:Uploading model into container now
2023-04-27 19:34:04,600:INFO:_master_model_container: 2
2023-04-27 19:34:04,600:INFO:_display_container: 2
2023-04-27 19:34:04,600:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 19:34:04,600:INFO:create_model() successfully completed......................................
2023-04-27 19:34:04,715:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:04,715:INFO:Creating metrics dataframe
2023-04-27 19:34:04,728:INFO:Initializing Naive Bayes
2023-04-27 19:34:04,728:INFO:Total runtime is 5.329913858572642 minutes
2023-04-27 19:34:04,733:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:04,733:INFO:Initializing create_model()
2023-04-27 19:34:04,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:04,734:INFO:Checking exceptions
2023-04-27 19:34:04,734:INFO:Importing libraries
2023-04-27 19:34:04,734:INFO:Copying training dataset
2023-04-27 19:34:04,742:INFO:Defining folds
2023-04-27 19:34:04,743:INFO:Declaring metric variables
2023-04-27 19:34:04,748:INFO:Importing untrained model
2023-04-27 19:34:04,754:INFO:Naive Bayes Imported successfully
2023-04-27 19:34:04,768:INFO:Starting cross validation
2023-04-27 19:34:04,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:23,210:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 5.33s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-27 19:34:25,743:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 2.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-27 19:34:27,620:INFO:Calculating mean and std
2023-04-27 19:34:27,622:INFO:Creating metrics dataframe
2023-04-27 19:34:27,739:INFO:Uploading results into container
2023-04-27 19:34:27,741:INFO:Uploading model into container now
2023-04-27 19:34:27,742:INFO:_master_model_container: 3
2023-04-27 19:34:27,742:INFO:_display_container: 2
2023-04-27 19:34:27,743:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-27 19:34:27,744:INFO:create_model() successfully completed......................................
2023-04-27 19:34:27,852:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:27,852:INFO:Creating metrics dataframe
2023-04-27 19:34:27,866:INFO:Initializing Decision Tree Classifier
2023-04-27 19:34:27,867:INFO:Total runtime is 5.715562311808268 minutes
2023-04-27 19:34:27,872:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:27,873:INFO:Initializing create_model()
2023-04-27 19:34:27,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:27,873:INFO:Checking exceptions
2023-04-27 19:34:27,873:INFO:Importing libraries
2023-04-27 19:34:27,874:INFO:Copying training dataset
2023-04-27 19:34:27,884:INFO:Defining folds
2023-04-27 19:34:27,885:INFO:Declaring metric variables
2023-04-27 19:34:27,891:INFO:Importing untrained model
2023-04-27 19:34:27,898:INFO:Decision Tree Classifier Imported successfully
2023-04-27 19:34:27,910:INFO:Starting cross validation
2023-04-27 19:34:27,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:31,269:INFO:Calculating mean and std
2023-04-27 19:34:31,271:INFO:Creating metrics dataframe
2023-04-27 19:34:31,403:INFO:Uploading results into container
2023-04-27 19:34:31,404:INFO:Uploading model into container now
2023-04-27 19:34:31,405:INFO:_master_model_container: 4
2023-04-27 19:34:31,405:INFO:_display_container: 2
2023-04-27 19:34:31,405:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5056, splitter='best')
2023-04-27 19:34:31,406:INFO:create_model() successfully completed......................................
2023-04-27 19:34:31,524:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:31,524:INFO:Creating metrics dataframe
2023-04-27 19:34:31,536:INFO:Initializing SVM - Linear Kernel
2023-04-27 19:34:31,537:INFO:Total runtime is 5.776725824673971 minutes
2023-04-27 19:34:31,542:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:31,543:INFO:Initializing create_model()
2023-04-27 19:34:31,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:31,543:INFO:Checking exceptions
2023-04-27 19:34:31,543:INFO:Importing libraries
2023-04-27 19:34:31,543:INFO:Copying training dataset
2023-04-27 19:34:31,551:INFO:Defining folds
2023-04-27 19:34:31,552:INFO:Declaring metric variables
2023-04-27 19:34:31,557:INFO:Importing untrained model
2023-04-27 19:34:31,563:INFO:SVM - Linear Kernel Imported successfully
2023-04-27 19:34:31,575:INFO:Starting cross validation
2023-04-27 19:34:31,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:32,588:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:32,666:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:32,667:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:32,804:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-27 19:34:32,840:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:32,881:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:33,006:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:33,240:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:33,328:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:34,945:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:35,003:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:34:35,016:INFO:Calculating mean and std
2023-04-27 19:34:35,017:INFO:Creating metrics dataframe
2023-04-27 19:34:35,165:INFO:Uploading results into container
2023-04-27 19:34:35,167:INFO:Uploading model into container now
2023-04-27 19:34:35,167:INFO:_master_model_container: 5
2023-04-27 19:34:35,168:INFO:_display_container: 2
2023-04-27 19:34:35,168:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5056, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-27 19:34:35,169:INFO:create_model() successfully completed......................................
2023-04-27 19:34:35,280:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:35,280:INFO:Creating metrics dataframe
2023-04-27 19:34:35,292:INFO:Initializing Ridge Classifier
2023-04-27 19:34:35,292:INFO:Total runtime is 5.839319002628327 minutes
2023-04-27 19:34:35,297:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:35,297:INFO:Initializing create_model()
2023-04-27 19:34:35,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:35,298:INFO:Checking exceptions
2023-04-27 19:34:35,298:INFO:Importing libraries
2023-04-27 19:34:35,298:INFO:Copying training dataset
2023-04-27 19:34:35,305:INFO:Defining folds
2023-04-27 19:34:35,305:INFO:Declaring metric variables
2023-04-27 19:34:35,312:INFO:Importing untrained model
2023-04-27 19:34:35,318:INFO:Ridge Classifier Imported successfully
2023-04-27 19:34:35,328:INFO:Starting cross validation
2023-04-27 19:34:35,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:36,281:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,292:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,296:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,316:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,320:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,354:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,366:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,385:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,391:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,405:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:34:36,534:INFO:Calculating mean and std
2023-04-27 19:34:36,536:INFO:Creating metrics dataframe
2023-04-27 19:34:36,664:INFO:Uploading results into container
2023-04-27 19:34:36,665:INFO:Uploading model into container now
2023-04-27 19:34:36,666:INFO:_master_model_container: 6
2023-04-27 19:34:36,666:INFO:_display_container: 2
2023-04-27 19:34:36,667:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5056, solver='auto',
                tol=0.0001)
2023-04-27 19:34:36,668:INFO:create_model() successfully completed......................................
2023-04-27 19:34:36,792:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:36,792:INFO:Creating metrics dataframe
2023-04-27 19:34:36,815:INFO:Initializing Random Forest Classifier
2023-04-27 19:34:36,816:INFO:Total runtime is 5.864712341626485 minutes
2023-04-27 19:34:36,822:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:36,823:INFO:Initializing create_model()
2023-04-27 19:34:36,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:36,824:INFO:Checking exceptions
2023-04-27 19:34:36,824:INFO:Importing libraries
2023-04-27 19:34:36,825:INFO:Copying training dataset
2023-04-27 19:34:36,837:INFO:Defining folds
2023-04-27 19:34:36,838:INFO:Declaring metric variables
2023-04-27 19:34:36,844:INFO:Importing untrained model
2023-04-27 19:34:36,851:INFO:Random Forest Classifier Imported successfully
2023-04-27 19:34:36,863:INFO:Starting cross validation
2023-04-27 19:34:36,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:47,217:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:47,227:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:47,300:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:47,346:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:47,524:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:47,660:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:54,246:INFO:Calculating mean and std
2023-04-27 19:34:54,247:INFO:Creating metrics dataframe
2023-04-27 19:34:54,381:INFO:Uploading results into container
2023-04-27 19:34:54,382:INFO:Uploading model into container now
2023-04-27 19:34:54,383:INFO:_master_model_container: 7
2023-04-27 19:34:54,384:INFO:_display_container: 2
2023-04-27 19:34:54,384:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5056, verbose=0, warm_start=False)
2023-04-27 19:34:54,385:INFO:create_model() successfully completed......................................
2023-04-27 19:34:54,493:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:54,494:INFO:Creating metrics dataframe
2023-04-27 19:34:54,508:INFO:Initializing Quadratic Discriminant Analysis
2023-04-27 19:34:54,509:INFO:Total runtime is 6.159592533111573 minutes
2023-04-27 19:34:54,514:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:54,515:INFO:Initializing create_model()
2023-04-27 19:34:54,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:54,515:INFO:Checking exceptions
2023-04-27 19:34:54,515:INFO:Importing libraries
2023-04-27 19:34:54,516:INFO:Copying training dataset
2023-04-27 19:34:54,522:INFO:Defining folds
2023-04-27 19:34:54,523:INFO:Declaring metric variables
2023-04-27 19:34:54,528:INFO:Importing untrained model
2023-04-27 19:34:54,535:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-27 19:34:54,545:INFO:Starting cross validation
2023-04-27 19:34:54,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:54,884:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:54,888:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:54,918:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:54,920:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:54,929:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,017:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,183:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,247:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,256:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,304:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-27 19:34:55,934:INFO:Calculating mean and std
2023-04-27 19:34:55,936:INFO:Creating metrics dataframe
2023-04-27 19:34:56,069:INFO:Uploading results into container
2023-04-27 19:34:56,070:INFO:Uploading model into container now
2023-04-27 19:34:56,071:INFO:_master_model_container: 8
2023-04-27 19:34:56,071:INFO:_display_container: 2
2023-04-27 19:34:56,072:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-27 19:34:56,072:INFO:create_model() successfully completed......................................
2023-04-27 19:34:56,178:INFO:SubProcess create_model() end ==================================
2023-04-27 19:34:56,179:INFO:Creating metrics dataframe
2023-04-27 19:34:56,191:INFO:Initializing Ada Boost Classifier
2023-04-27 19:34:56,191:INFO:Total runtime is 6.187633748849233 minutes
2023-04-27 19:34:56,195:INFO:SubProcess create_model() called ==================================
2023-04-27 19:34:56,196:INFO:Initializing create_model()
2023-04-27 19:34:56,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:34:56,196:INFO:Checking exceptions
2023-04-27 19:34:56,197:INFO:Importing libraries
2023-04-27 19:34:56,197:INFO:Copying training dataset
2023-04-27 19:34:56,205:INFO:Defining folds
2023-04-27 19:34:56,206:INFO:Declaring metric variables
2023-04-27 19:34:56,212:INFO:Importing untrained model
2023-04-27 19:34:56,218:INFO:Ada Boost Classifier Imported successfully
2023-04-27 19:34:56,231:INFO:Starting cross validation
2023-04-27 19:34:56,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.21s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,821:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:34:59,822:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 2.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:35:00,147:INFO:Calculating mean and std
2023-04-27 19:35:00,149:INFO:Creating metrics dataframe
2023-04-27 19:35:00,301:INFO:Uploading results into container
2023-04-27 19:35:00,302:INFO:Uploading model into container now
2023-04-27 19:35:00,303:INFO:_master_model_container: 9
2023-04-27 19:35:00,303:INFO:_display_container: 2
2023-04-27 19:35:00,303:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5056)
2023-04-27 19:35:00,304:INFO:create_model() successfully completed......................................
2023-04-27 19:35:00,402:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:00,403:INFO:Creating metrics dataframe
2023-04-27 19:35:00,416:INFO:Initializing Gradient Boosting Classifier
2023-04-27 19:35:00,416:INFO:Total runtime is 6.25805405775706 minutes
2023-04-27 19:35:00,420:INFO:SubProcess create_model() called ==================================
2023-04-27 19:35:00,421:INFO:Initializing create_model()
2023-04-27 19:35:00,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:00,421:INFO:Checking exceptions
2023-04-27 19:35:00,421:INFO:Importing libraries
2023-04-27 19:35:00,421:INFO:Copying training dataset
2023-04-27 19:35:00,429:INFO:Defining folds
2023-04-27 19:35:00,430:INFO:Declaring metric variables
2023-04-27 19:35:00,435:INFO:Importing untrained model
2023-04-27 19:35:00,441:INFO:Gradient Boosting Classifier Imported successfully
2023-04-27 19:35:00,451:INFO:Starting cross validation
2023-04-27 19:35:00,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:35:01,335:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-27 19:35:02,912:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:35:02,918:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:35:02,932:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:35:02,962:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-27 19:35:03,519:INFO:Calculating mean and std
2023-04-27 19:35:03,521:INFO:Creating metrics dataframe
2023-04-27 19:35:03,696:INFO:Uploading results into container
2023-04-27 19:35:03,697:INFO:Uploading model into container now
2023-04-27 19:35:03,698:INFO:_master_model_container: 10
2023-04-27 19:35:03,699:INFO:_display_container: 2
2023-04-27 19:35:03,700:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5056, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-27 19:35:03,701:INFO:create_model() successfully completed......................................
2023-04-27 19:35:03,862:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:03,862:INFO:Creating metrics dataframe
2023-04-27 19:35:03,879:INFO:Initializing Linear Discriminant Analysis
2023-04-27 19:35:03,880:INFO:Total runtime is 6.315779296557109 minutes
2023-04-27 19:35:03,887:INFO:SubProcess create_model() called ==================================
2023-04-27 19:35:03,888:INFO:Initializing create_model()
2023-04-27 19:35:03,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:03,889:INFO:Checking exceptions
2023-04-27 19:35:03,889:INFO:Importing libraries
2023-04-27 19:35:03,889:INFO:Copying training dataset
2023-04-27 19:35:03,902:INFO:Defining folds
2023-04-27 19:35:03,903:INFO:Declaring metric variables
2023-04-27 19:35:03,910:INFO:Importing untrained model
2023-04-27 19:35:03,918:INFO:Linear Discriminant Analysis Imported successfully
2023-04-27 19:35:03,931:INFO:Starting cross validation
2023-04-27 19:35:03,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:35:05,450:INFO:Calculating mean and std
2023-04-27 19:35:05,452:INFO:Creating metrics dataframe
2023-04-27 19:35:05,626:INFO:Uploading results into container
2023-04-27 19:35:05,627:INFO:Uploading model into container now
2023-04-27 19:35:05,628:INFO:_master_model_container: 11
2023-04-27 19:35:05,628:INFO:_display_container: 2
2023-04-27 19:35:05,629:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-27 19:35:05,630:INFO:create_model() successfully completed......................................
2023-04-27 19:35:05,770:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:05,771:INFO:Creating metrics dataframe
2023-04-27 19:35:05,792:INFO:Initializing Extra Trees Classifier
2023-04-27 19:35:05,792:INFO:Total runtime is 6.347653837998708 minutes
2023-04-27 19:35:05,797:INFO:SubProcess create_model() called ==================================
2023-04-27 19:35:05,798:INFO:Initializing create_model()
2023-04-27 19:35:05,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:05,798:INFO:Checking exceptions
2023-04-27 19:35:05,799:INFO:Importing libraries
2023-04-27 19:35:05,799:INFO:Copying training dataset
2023-04-27 19:35:05,810:INFO:Defining folds
2023-04-27 19:35:05,810:INFO:Declaring metric variables
2023-04-27 19:35:05,817:INFO:Importing untrained model
2023-04-27 19:35:05,824:INFO:Extra Trees Classifier Imported successfully
2023-04-27 19:35:05,836:INFO:Starting cross validation
2023-04-27 19:35:05,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:35:40,037:INFO:Calculating mean and std
2023-04-27 19:35:40,039:INFO:Creating metrics dataframe
2023-04-27 19:35:40,184:INFO:Uploading results into container
2023-04-27 19:35:40,185:INFO:Uploading model into container now
2023-04-27 19:35:40,185:INFO:_master_model_container: 12
2023-04-27 19:35:40,186:INFO:_display_container: 2
2023-04-27 19:35:40,186:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5056, verbose=0, warm_start=False)
2023-04-27 19:35:40,187:INFO:create_model() successfully completed......................................
2023-04-27 19:35:40,276:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:40,276:INFO:Creating metrics dataframe
2023-04-27 19:35:40,289:INFO:Initializing Light Gradient Boosting Machine
2023-04-27 19:35:40,290:INFO:Total runtime is 6.922609567642212 minutes
2023-04-27 19:35:40,293:INFO:SubProcess create_model() called ==================================
2023-04-27 19:35:40,294:INFO:Initializing create_model()
2023-04-27 19:35:40,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:40,294:INFO:Checking exceptions
2023-04-27 19:35:40,294:INFO:Importing libraries
2023-04-27 19:35:40,295:INFO:Copying training dataset
2023-04-27 19:35:40,302:INFO:Defining folds
2023-04-27 19:35:40,302:INFO:Declaring metric variables
2023-04-27 19:35:40,307:INFO:Importing untrained model
2023-04-27 19:35:40,313:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-27 19:35:40,323:INFO:Starting cross validation
2023-04-27 19:35:40,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:35:41,899:INFO:Calculating mean and std
2023-04-27 19:35:41,900:INFO:Creating metrics dataframe
2023-04-27 19:35:42,073:INFO:Uploading results into container
2023-04-27 19:35:42,074:INFO:Uploading model into container now
2023-04-27 19:35:42,075:INFO:_master_model_container: 13
2023-04-27 19:35:42,075:INFO:_display_container: 2
2023-04-27 19:35:42,076:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5056, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-27 19:35:42,076:INFO:create_model() successfully completed......................................
2023-04-27 19:35:42,168:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:42,169:INFO:Creating metrics dataframe
2023-04-27 19:35:42,185:INFO:Initializing Dummy Classifier
2023-04-27 19:35:42,186:INFO:Total runtime is 6.954219404856364 minutes
2023-04-27 19:35:42,191:INFO:SubProcess create_model() called ==================================
2023-04-27 19:35:42,192:INFO:Initializing create_model()
2023-04-27 19:35:42,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5171da1060>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:42,193:INFO:Checking exceptions
2023-04-27 19:35:42,193:INFO:Importing libraries
2023-04-27 19:35:42,193:INFO:Copying training dataset
2023-04-27 19:35:42,202:INFO:Defining folds
2023-04-27 19:35:42,202:INFO:Declaring metric variables
2023-04-27 19:35:42,209:INFO:Importing untrained model
2023-04-27 19:35:42,214:INFO:Dummy Classifier Imported successfully
2023-04-27 19:35:42,224:INFO:Starting cross validation
2023-04-27 19:35:42,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:35:43,396:INFO:Calculating mean and std
2023-04-27 19:35:43,398:INFO:Creating metrics dataframe
2023-04-27 19:35:43,583:INFO:Uploading results into container
2023-04-27 19:35:43,585:INFO:Uploading model into container now
2023-04-27 19:35:43,586:INFO:_master_model_container: 14
2023-04-27 19:35:43,586:INFO:_display_container: 2
2023-04-27 19:35:43,586:INFO:DummyClassifier(constant=None, random_state=5056, strategy='prior')
2023-04-27 19:35:43,587:INFO:create_model() successfully completed......................................
2023-04-27 19:35:43,696:INFO:SubProcess create_model() end ==================================
2023-04-27 19:35:43,696:INFO:Creating metrics dataframe
2023-04-27 19:35:43,727:INFO:Initializing create_model()
2023-04-27 19:35:43,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51373c33a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5056, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:35:43,728:INFO:Checking exceptions
2023-04-27 19:35:43,731:INFO:Importing libraries
2023-04-27 19:35:43,731:INFO:Copying training dataset
2023-04-27 19:35:43,737:INFO:Defining folds
2023-04-27 19:35:43,737:INFO:Declaring metric variables
2023-04-27 19:35:43,737:INFO:Importing untrained model
2023-04-27 19:35:43,738:INFO:Declaring custom model
2023-04-27 19:35:43,738:INFO:Logistic Regression Imported successfully
2023-04-27 19:35:43,742:INFO:Cross validation set to False
2023-04-27 19:35:43,742:INFO:Fitting Model
2023-04-27 19:35:54,654:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5056, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:35:54,654:INFO:create_model() successfully completed......................................
2023-04-27 19:35:54,805:INFO:_master_model_container: 14
2023-04-27 19:35:54,805:INFO:_display_container: 2
2023-04-27 19:35:54,806:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5056, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:35:54,806:INFO:compare_models() successfully completed......................................
2023-04-27 19:39:01,272:INFO:PyCaret ClassificationExperiment
2023-04-27 19:39:01,272:INFO:Logging name: clf-default-name
2023-04-27 19:39:01,273:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:39:01,273:INFO:version 3.0.0
2023-04-27 19:39:01,273:INFO:Initializing setup()
2023-04-27 19:39:01,273:INFO:self.USI: e02c
2023-04-27 19:39:01,273:INFO:self._variable_keys: {'seed', 'memory', '_available_plots', 'y_train', 'is_multiclass', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'pipeline', 'data', 'X_test', 'target_param', 'fold_generator', 'y', 'idx', '_ml_usecase', 'exp_id', 'y_test', 'html_param', 'fold_shuffle_param', 'X', 'USI'}
2023-04-27 19:39:01,273:INFO:Checking environment
2023-04-27 19:39:01,273:INFO:python_version: 3.10.6
2023-04-27 19:39:01,273:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:39:01,273:INFO:machine: x86_64
2023-04-27 19:39:01,273:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:01,273:INFO:Memory: svmem(total=26859122688, available=21196406784, percent=21.1, used=5241618432, free=460992512, active=6014271488, inactive=18561372160, buffers=929464320, cached=20227047424, shared=1880064, slab=1602764800)
2023-04-27 19:39:01,274:INFO:Physical Core: 8
2023-04-27 19:39:01,274:INFO:Logical Core: 16
2023-04-27 19:39:01,274:INFO:Checking libraries
2023-04-27 19:39:01,274:INFO:System:
2023-04-27 19:39:01,274:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:39:01,274:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:39:01,275:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:01,275:INFO:PyCaret required dependencies:
2023-04-27 19:39:01,275:INFO:                 pip: 23.1.2
2023-04-27 19:39:01,275:INFO:          setuptools: 59.6.0
2023-04-27 19:39:01,275:INFO:             pycaret: 3.0.0
2023-04-27 19:39:01,275:INFO:             IPython: 8.12.0
2023-04-27 19:39:01,275:INFO:          ipywidgets: 8.0.6
2023-04-27 19:39:01,275:INFO:                tqdm: 4.65.0
2023-04-27 19:39:01,275:INFO:               numpy: 1.23.5
2023-04-27 19:39:01,275:INFO:              pandas: 1.5.3
2023-04-27 19:39:01,275:INFO:              jinja2: 3.1.2
2023-04-27 19:39:01,275:INFO:               scipy: 1.10.1
2023-04-27 19:39:01,276:INFO:              joblib: 1.2.0
2023-04-27 19:39:01,276:INFO:             sklearn: 1.2.2
2023-04-27 19:39:01,276:INFO:                pyod: 1.0.9
2023-04-27 19:39:01,276:INFO:            imblearn: 0.10.1
2023-04-27 19:39:01,276:INFO:   category_encoders: 2.6.0
2023-04-27 19:39:01,276:INFO:            lightgbm: 3.3.5
2023-04-27 19:39:01,276:INFO:               numba: 0.56.4
2023-04-27 19:39:01,276:INFO:            requests: 2.29.0
2023-04-27 19:39:01,277:INFO:          matplotlib: 3.7.1
2023-04-27 19:39:01,277:INFO:          scikitplot: 0.3.7
2023-04-27 19:39:01,277:INFO:         yellowbrick: 1.5
2023-04-27 19:39:01,277:INFO:              plotly: 5.14.1
2023-04-27 19:39:01,277:INFO:             kaleido: 0.2.1
2023-04-27 19:39:01,277:INFO:         statsmodels: 0.13.5
2023-04-27 19:39:01,277:INFO:              sktime: 0.17.2
2023-04-27 19:39:01,277:INFO:               tbats: 1.1.3
2023-04-27 19:39:01,277:INFO:            pmdarima: 2.0.3
2023-04-27 19:39:01,277:INFO:              psutil: 5.9.5
2023-04-27 19:39:01,278:INFO:PyCaret optional dependencies:
2023-04-27 19:39:01,278:INFO:                shap: Not installed
2023-04-27 19:39:01,278:INFO:           interpret: Not installed
2023-04-27 19:39:01,278:INFO:                umap: Not installed
2023-04-27 19:39:01,278:INFO:    pandas_profiling: Not installed
2023-04-27 19:39:01,278:INFO:  explainerdashboard: Not installed
2023-04-27 19:39:01,278:INFO:             autoviz: Not installed
2023-04-27 19:39:01,278:INFO:           fairlearn: Not installed
2023-04-27 19:39:01,278:INFO:             xgboost: Not installed
2023-04-27 19:39:01,279:INFO:            catboost: Not installed
2023-04-27 19:39:01,279:INFO:              kmodes: Not installed
2023-04-27 19:39:01,279:INFO:             mlxtend: Not installed
2023-04-27 19:39:01,279:INFO:       statsforecast: Not installed
2023-04-27 19:39:01,279:INFO:        tune_sklearn: Not installed
2023-04-27 19:39:01,279:INFO:                 ray: Not installed
2023-04-27 19:39:01,279:INFO:            hyperopt: Not installed
2023-04-27 19:39:01,279:INFO:              optuna: Not installed
2023-04-27 19:39:01,279:INFO:               skopt: Not installed
2023-04-27 19:39:01,279:INFO:              mlflow: Not installed
2023-04-27 19:39:01,279:INFO:              gradio: Not installed
2023-04-27 19:39:01,279:INFO:             fastapi: Not installed
2023-04-27 19:39:01,279:INFO:             uvicorn: Not installed
2023-04-27 19:39:01,279:INFO:              m2cgen: Not installed
2023-04-27 19:39:01,279:INFO:           evidently: Not installed
2023-04-27 19:39:01,280:INFO:               fugue: Not installed
2023-04-27 19:39:01,280:INFO:           streamlit: 1.21.0
2023-04-27 19:39:01,280:INFO:             prophet: Not installed
2023-04-27 19:39:01,280:INFO:None
2023-04-27 19:39:01,280:INFO:Set up data.
2023-04-27 19:39:01,295:INFO:Set up train/test split.
2023-04-27 19:39:01,301:INFO:Set up index.
2023-04-27 19:39:01,301:INFO:Set up folding strategy.
2023-04-27 19:39:01,301:INFO:Assigning column types.
2023-04-27 19:39:01,305:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:39:01,353:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,434:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,468:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:39:01,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:01,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,626:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:39:01,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:01,800:INFO:Preparing preprocessing pipeline...
2023-04-27 19:39:01,801:INFO:Set up label encoding.
2023-04-27 19:39:01,801:INFO:Set up simple imputation.
2023-04-27 19:39:01,802:INFO:Set up column name cleaning.
2023-04-27 19:39:01,836:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:39:01,844:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Marital status',
                                             'Application mode',
                                             'Application order', 'Course',
                                             'Daytime/evening attendance',
                                             'Previous qualification',
                                             'Nacionality',
                                             "...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:39:01,844:INFO:Creating final display dataframe.
2023-04-27 19:39:01,969:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     3848
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape               (3630, 35)
6   Transformed train set shape               (2541, 35)
7    Transformed test set shape               (1089, 35)
8              Numeric features                       34
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     e02c
2023-04-27 19:39:02,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:02,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:02,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:02,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:02,157:INFO:setup() successfully completed in 0.91s...............
2023-04-27 19:39:11,216:INFO:PyCaret ClassificationExperiment
2023-04-27 19:39:11,216:INFO:Logging name: clf-default-name
2023-04-27 19:39:11,216:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:39:11,216:INFO:version 3.0.0
2023-04-27 19:39:11,216:INFO:Initializing setup()
2023-04-27 19:39:11,216:INFO:self.USI: 05f8
2023-04-27 19:39:11,216:INFO:self._variable_keys: {'seed', 'memory', '_available_plots', 'y_train', 'is_multiclass', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'pipeline', 'data', 'X_test', 'target_param', 'fold_generator', 'y', 'idx', '_ml_usecase', 'exp_id', 'y_test', 'html_param', 'fold_shuffle_param', 'X', 'USI'}
2023-04-27 19:39:11,217:INFO:Checking environment
2023-04-27 19:39:11,217:INFO:python_version: 3.10.6
2023-04-27 19:39:11,217:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:39:11,217:INFO:machine: x86_64
2023-04-27 19:39:11,217:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:11,217:INFO:Memory: svmem(total=26859122688, available=21201068032, percent=21.1, used=5236973568, free=465571840, active=6014332928, inactive=18554097664, buffers=929513472, cached=20227063808, shared=1880064, slab=1602838528)
2023-04-27 19:39:11,218:INFO:Physical Core: 8
2023-04-27 19:39:11,218:INFO:Logical Core: 16
2023-04-27 19:39:11,218:INFO:Checking libraries
2023-04-27 19:39:11,218:INFO:System:
2023-04-27 19:39:11,218:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:39:11,218:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:39:11,218:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:11,218:INFO:PyCaret required dependencies:
2023-04-27 19:39:11,219:INFO:                 pip: 23.1.2
2023-04-27 19:39:11,219:INFO:          setuptools: 59.6.0
2023-04-27 19:39:11,219:INFO:             pycaret: 3.0.0
2023-04-27 19:39:11,219:INFO:             IPython: 8.12.0
2023-04-27 19:39:11,219:INFO:          ipywidgets: 8.0.6
2023-04-27 19:39:11,219:INFO:                tqdm: 4.65.0
2023-04-27 19:39:11,219:INFO:               numpy: 1.23.5
2023-04-27 19:39:11,219:INFO:              pandas: 1.5.3
2023-04-27 19:39:11,219:INFO:              jinja2: 3.1.2
2023-04-27 19:39:11,219:INFO:               scipy: 1.10.1
2023-04-27 19:39:11,219:INFO:              joblib: 1.2.0
2023-04-27 19:39:11,219:INFO:             sklearn: 1.2.2
2023-04-27 19:39:11,219:INFO:                pyod: 1.0.9
2023-04-27 19:39:11,220:INFO:            imblearn: 0.10.1
2023-04-27 19:39:11,220:INFO:   category_encoders: 2.6.0
2023-04-27 19:39:11,220:INFO:            lightgbm: 3.3.5
2023-04-27 19:39:11,220:INFO:               numba: 0.56.4
2023-04-27 19:39:11,220:INFO:            requests: 2.29.0
2023-04-27 19:39:11,220:INFO:          matplotlib: 3.7.1
2023-04-27 19:39:11,220:INFO:          scikitplot: 0.3.7
2023-04-27 19:39:11,220:INFO:         yellowbrick: 1.5
2023-04-27 19:39:11,220:INFO:              plotly: 5.14.1
2023-04-27 19:39:11,220:INFO:             kaleido: 0.2.1
2023-04-27 19:39:11,220:INFO:         statsmodels: 0.13.5
2023-04-27 19:39:11,220:INFO:              sktime: 0.17.2
2023-04-27 19:39:11,220:INFO:               tbats: 1.1.3
2023-04-27 19:39:11,221:INFO:            pmdarima: 2.0.3
2023-04-27 19:39:11,221:INFO:              psutil: 5.9.5
2023-04-27 19:39:11,221:INFO:PyCaret optional dependencies:
2023-04-27 19:39:11,221:INFO:                shap: Not installed
2023-04-27 19:39:11,221:INFO:           interpret: Not installed
2023-04-27 19:39:11,221:INFO:                umap: Not installed
2023-04-27 19:39:11,221:INFO:    pandas_profiling: Not installed
2023-04-27 19:39:11,222:INFO:  explainerdashboard: Not installed
2023-04-27 19:39:11,222:INFO:             autoviz: Not installed
2023-04-27 19:39:11,222:INFO:           fairlearn: Not installed
2023-04-27 19:39:11,222:INFO:             xgboost: Not installed
2023-04-27 19:39:11,222:INFO:            catboost: Not installed
2023-04-27 19:39:11,222:INFO:              kmodes: Not installed
2023-04-27 19:39:11,222:INFO:             mlxtend: Not installed
2023-04-27 19:39:11,222:INFO:       statsforecast: Not installed
2023-04-27 19:39:11,222:INFO:        tune_sklearn: Not installed
2023-04-27 19:39:11,222:INFO:                 ray: Not installed
2023-04-27 19:39:11,222:INFO:            hyperopt: Not installed
2023-04-27 19:39:11,223:INFO:              optuna: Not installed
2023-04-27 19:39:11,223:INFO:               skopt: Not installed
2023-04-27 19:39:11,223:INFO:              mlflow: Not installed
2023-04-27 19:39:11,223:INFO:              gradio: Not installed
2023-04-27 19:39:11,223:INFO:             fastapi: Not installed
2023-04-27 19:39:11,223:INFO:             uvicorn: Not installed
2023-04-27 19:39:11,223:INFO:              m2cgen: Not installed
2023-04-27 19:39:11,223:INFO:           evidently: Not installed
2023-04-27 19:39:11,224:INFO:               fugue: Not installed
2023-04-27 19:39:11,224:INFO:           streamlit: 1.21.0
2023-04-27 19:39:11,224:INFO:             prophet: Not installed
2023-04-27 19:39:11,224:INFO:None
2023-04-27 19:39:11,224:INFO:Set up data.
2023-04-27 19:39:11,240:INFO:Set up train/test split.
2023-04-27 19:39:11,248:INFO:Set up index.
2023-04-27 19:39:11,248:INFO:Set up folding strategy.
2023-04-27 19:39:11,248:INFO:Assigning column types.
2023-04-27 19:39:11,252:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:39:11,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,424:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:39:11,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:11,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,603:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:39:11,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:11,772:INFO:Preparing preprocessing pipeline...
2023-04-27 19:39:11,773:INFO:Set up label encoding.
2023-04-27 19:39:11,773:INFO:Set up simple imputation.
2023-04-27 19:39:11,774:INFO:Set up column name cleaning.
2023-04-27 19:39:11,807:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:39:11,813:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Marital status',
                                             'Application mode',
                                             'Application order', 'Course',
                                             'Daytime/evening attendance',
                                             'Previous qualification',
                                             'Nacionality',
                                             "...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:39:11,813:INFO:Creating final display dataframe.
2023-04-27 19:39:11,983:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     5006
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape               (3630, 35)
6   Transformed train set shape               (2541, 35)
7    Transformed test set shape               (1089, 35)
8              Numeric features                       34
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     05f8
2023-04-27 19:39:12,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:12,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:12,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:12,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:12,171:INFO:setup() successfully completed in 0.99s...............
2023-04-27 19:39:26,391:INFO:PyCaret ClassificationExperiment
2023-04-27 19:39:26,392:INFO:Logging name: clf-default-name
2023-04-27 19:39:26,392:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 19:39:26,392:INFO:version 3.0.0
2023-04-27 19:39:26,392:INFO:Initializing setup()
2023-04-27 19:39:26,392:INFO:self.USI: c222
2023-04-27 19:39:26,392:INFO:self._variable_keys: {'seed', 'memory', '_available_plots', 'y_train', 'is_multiclass', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'pipeline', 'data', 'X_test', 'target_param', 'fold_generator', 'y', 'idx', '_ml_usecase', 'exp_id', 'y_test', 'html_param', 'fold_shuffle_param', 'X', 'USI'}
2023-04-27 19:39:26,392:INFO:Checking environment
2023-04-27 19:39:26,392:INFO:python_version: 3.10.6
2023-04-27 19:39:26,392:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 19:39:26,392:INFO:machine: x86_64
2023-04-27 19:39:26,394:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:26,395:INFO:Memory: svmem(total=26859122688, available=21191249920, percent=21.1, used=5246787584, free=455684096, active=6014377984, inactive=18564276224, buffers=929562624, cached=20227088384, shared=1880064, slab=1602908160)
2023-04-27 19:39:26,396:INFO:Physical Core: 8
2023-04-27 19:39:26,397:INFO:Logical Core: 16
2023-04-27 19:39:26,397:INFO:Checking libraries
2023-04-27 19:39:26,397:INFO:System:
2023-04-27 19:39:26,397:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 19:39:26,397:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 19:39:26,397:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 19:39:26,398:INFO:PyCaret required dependencies:
2023-04-27 19:39:26,398:INFO:                 pip: 23.1.2
2023-04-27 19:39:26,398:INFO:          setuptools: 59.6.0
2023-04-27 19:39:26,398:INFO:             pycaret: 3.0.0
2023-04-27 19:39:26,398:INFO:             IPython: 8.12.0
2023-04-27 19:39:26,399:INFO:          ipywidgets: 8.0.6
2023-04-27 19:39:26,399:INFO:                tqdm: 4.65.0
2023-04-27 19:39:26,399:INFO:               numpy: 1.23.5
2023-04-27 19:39:26,399:INFO:              pandas: 1.5.3
2023-04-27 19:39:26,399:INFO:              jinja2: 3.1.2
2023-04-27 19:39:26,399:INFO:               scipy: 1.10.1
2023-04-27 19:39:26,399:INFO:              joblib: 1.2.0
2023-04-27 19:39:26,399:INFO:             sklearn: 1.2.2
2023-04-27 19:39:26,400:INFO:                pyod: 1.0.9
2023-04-27 19:39:26,400:INFO:            imblearn: 0.10.1
2023-04-27 19:39:26,400:INFO:   category_encoders: 2.6.0
2023-04-27 19:39:26,400:INFO:            lightgbm: 3.3.5
2023-04-27 19:39:26,400:INFO:               numba: 0.56.4
2023-04-27 19:39:26,400:INFO:            requests: 2.29.0
2023-04-27 19:39:26,400:INFO:          matplotlib: 3.7.1
2023-04-27 19:39:26,400:INFO:          scikitplot: 0.3.7
2023-04-27 19:39:26,400:INFO:         yellowbrick: 1.5
2023-04-27 19:39:26,400:INFO:              plotly: 5.14.1
2023-04-27 19:39:26,400:INFO:             kaleido: 0.2.1
2023-04-27 19:39:26,401:INFO:         statsmodels: 0.13.5
2023-04-27 19:39:26,401:INFO:              sktime: 0.17.2
2023-04-27 19:39:26,401:INFO:               tbats: 1.1.3
2023-04-27 19:39:26,401:INFO:            pmdarima: 2.0.3
2023-04-27 19:39:26,401:INFO:              psutil: 5.9.5
2023-04-27 19:39:26,401:INFO:PyCaret optional dependencies:
2023-04-27 19:39:26,401:INFO:                shap: Not installed
2023-04-27 19:39:26,401:INFO:           interpret: Not installed
2023-04-27 19:39:26,401:INFO:                umap: Not installed
2023-04-27 19:39:26,401:INFO:    pandas_profiling: Not installed
2023-04-27 19:39:26,401:INFO:  explainerdashboard: Not installed
2023-04-27 19:39:26,401:INFO:             autoviz: Not installed
2023-04-27 19:39:26,401:INFO:           fairlearn: Not installed
2023-04-27 19:39:26,401:INFO:             xgboost: Not installed
2023-04-27 19:39:26,401:INFO:            catboost: Not installed
2023-04-27 19:39:26,401:INFO:              kmodes: Not installed
2023-04-27 19:39:26,401:INFO:             mlxtend: Not installed
2023-04-27 19:39:26,401:INFO:       statsforecast: Not installed
2023-04-27 19:39:26,402:INFO:        tune_sklearn: Not installed
2023-04-27 19:39:26,402:INFO:                 ray: Not installed
2023-04-27 19:39:26,402:INFO:            hyperopt: Not installed
2023-04-27 19:39:26,402:INFO:              optuna: Not installed
2023-04-27 19:39:26,402:INFO:               skopt: Not installed
2023-04-27 19:39:26,402:INFO:              mlflow: Not installed
2023-04-27 19:39:26,402:INFO:              gradio: Not installed
2023-04-27 19:39:26,402:INFO:             fastapi: Not installed
2023-04-27 19:39:26,402:INFO:             uvicorn: Not installed
2023-04-27 19:39:26,402:INFO:              m2cgen: Not installed
2023-04-27 19:39:26,402:INFO:           evidently: Not installed
2023-04-27 19:39:26,402:INFO:               fugue: Not installed
2023-04-27 19:39:26,402:INFO:           streamlit: 1.21.0
2023-04-27 19:39:26,402:INFO:             prophet: Not installed
2023-04-27 19:39:26,402:INFO:None
2023-04-27 19:39:26,403:INFO:Set up data.
2023-04-27 19:39:26,419:INFO:Set up train/test split.
2023-04-27 19:39:26,427:INFO:Set up index.
2023-04-27 19:39:26,428:INFO:Set up folding strategy.
2023-04-27 19:39:26,428:INFO:Assigning column types.
2023-04-27 19:39:26,432:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 19:39:26,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,487:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,602:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 19:39:26,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 19:39:26,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,793:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 19:39:26,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:26,982:INFO:Preparing preprocessing pipeline...
2023-04-27 19:39:26,984:INFO:Set up label encoding.
2023-04-27 19:39:26,984:INFO:Set up simple imputation.
2023-04-27 19:39:26,985:INFO:Set up column name cleaning.
2023-04-27 19:39:27,029:INFO:Finished creating preprocessing pipeline.
2023-04-27 19:39:27,036:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Marital status',
                                             'Application mode',
                                             'Application order', 'Course',
                                             'Daytime/evening attendance',
                                             'Previous qualification',
                                             'Nacionality',
                                             "...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 19:39:27,037:INFO:Creating final display dataframe.
2023-04-27 19:39:27,173:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     7404
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape               (3630, 35)
6   Transformed train set shape               (2541, 35)
7    Transformed test set shape               (1089, 35)
8              Numeric features                       34
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     c222
2023-04-27 19:39:27,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:27,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:27,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:27,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 19:39:27,383:INFO:setup() successfully completed in 1.02s...............
2023-04-27 19:39:49,551:INFO:Initializing compare_models()
2023-04-27 19:39:49,552:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-27 19:39:49,553:INFO:Checking exceptions
2023-04-27 19:39:49,558:INFO:Preparing display monitor
2023-04-27 19:39:49,589:INFO:Initializing Logistic Regression
2023-04-27 19:39:49,590:INFO:Total runtime is 7.2320302327473956e-06 minutes
2023-04-27 19:39:49,595:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:49,595:INFO:Initializing create_model()
2023-04-27 19:39:49,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:49,596:INFO:Checking exceptions
2023-04-27 19:39:49,596:INFO:Importing libraries
2023-04-27 19:39:49,596:INFO:Copying training dataset
2023-04-27 19:39:49,601:INFO:Defining folds
2023-04-27 19:39:49,601:INFO:Declaring metric variables
2023-04-27 19:39:49,606:INFO:Importing untrained model
2023-04-27 19:39:49,613:INFO:Logistic Regression Imported successfully
2023-04-27 19:39:49,624:INFO:Starting cross validation
2023-04-27 19:39:49,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:50,542:INFO:Calculating mean and std
2023-04-27 19:39:50,543:INFO:Creating metrics dataframe
2023-04-27 19:39:50,772:INFO:Uploading results into container
2023-04-27 19:39:50,774:INFO:Uploading model into container now
2023-04-27 19:39:50,775:INFO:_master_model_container: 1
2023-04-27 19:39:50,775:INFO:_display_container: 2
2023-04-27 19:39:50,776:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:39:50,776:INFO:create_model() successfully completed......................................
2023-04-27 19:39:50,932:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:50,932:INFO:Creating metrics dataframe
2023-04-27 19:39:50,942:INFO:Initializing K Neighbors Classifier
2023-04-27 19:39:50,942:INFO:Total runtime is 0.022544594605763753 minutes
2023-04-27 19:39:50,946:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:50,947:INFO:Initializing create_model()
2023-04-27 19:39:50,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:50,947:INFO:Checking exceptions
2023-04-27 19:39:50,947:INFO:Importing libraries
2023-04-27 19:39:50,947:INFO:Copying training dataset
2023-04-27 19:39:50,956:INFO:Defining folds
2023-04-27 19:39:50,957:INFO:Declaring metric variables
2023-04-27 19:39:50,962:INFO:Importing untrained model
2023-04-27 19:39:50,969:INFO:K Neighbors Classifier Imported successfully
2023-04-27 19:39:50,977:INFO:Starting cross validation
2023-04-27 19:39:50,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:51,536:INFO:Calculating mean and std
2023-04-27 19:39:51,538:INFO:Creating metrics dataframe
2023-04-27 19:39:51,779:INFO:Uploading results into container
2023-04-27 19:39:51,783:INFO:Uploading model into container now
2023-04-27 19:39:51,783:INFO:_master_model_container: 2
2023-04-27 19:39:51,784:INFO:_display_container: 2
2023-04-27 19:39:51,785:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 19:39:51,785:INFO:create_model() successfully completed......................................
2023-04-27 19:39:51,913:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:51,913:INFO:Creating metrics dataframe
2023-04-27 19:39:51,930:INFO:Initializing Naive Bayes
2023-04-27 19:39:51,931:INFO:Total runtime is 0.039030309518178305 minutes
2023-04-27 19:39:51,935:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:51,936:INFO:Initializing create_model()
2023-04-27 19:39:51,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:51,936:INFO:Checking exceptions
2023-04-27 19:39:51,936:INFO:Importing libraries
2023-04-27 19:39:51,936:INFO:Copying training dataset
2023-04-27 19:39:51,946:INFO:Defining folds
2023-04-27 19:39:51,947:INFO:Declaring metric variables
2023-04-27 19:39:51,952:INFO:Importing untrained model
2023-04-27 19:39:51,958:INFO:Naive Bayes Imported successfully
2023-04-27 19:39:51,972:INFO:Starting cross validation
2023-04-27 19:39:51,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:52,484:INFO:Calculating mean and std
2023-04-27 19:39:52,485:INFO:Creating metrics dataframe
2023-04-27 19:39:52,681:INFO:Uploading results into container
2023-04-27 19:39:52,682:INFO:Uploading model into container now
2023-04-27 19:39:52,683:INFO:_master_model_container: 3
2023-04-27 19:39:52,683:INFO:_display_container: 2
2023-04-27 19:39:52,683:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-27 19:39:52,683:INFO:create_model() successfully completed......................................
2023-04-27 19:39:52,841:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:52,841:INFO:Creating metrics dataframe
2023-04-27 19:39:52,858:INFO:Initializing Decision Tree Classifier
2023-04-27 19:39:52,859:INFO:Total runtime is 0.05449021259943644 minutes
2023-04-27 19:39:52,869:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:52,870:INFO:Initializing create_model()
2023-04-27 19:39:52,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:52,871:INFO:Checking exceptions
2023-04-27 19:39:52,872:INFO:Importing libraries
2023-04-27 19:39:52,872:INFO:Copying training dataset
2023-04-27 19:39:52,886:INFO:Defining folds
2023-04-27 19:39:52,887:INFO:Declaring metric variables
2023-04-27 19:39:52,897:INFO:Importing untrained model
2023-04-27 19:39:52,906:INFO:Decision Tree Classifier Imported successfully
2023-04-27 19:39:52,926:INFO:Starting cross validation
2023-04-27 19:39:52,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:53,502:INFO:Calculating mean and std
2023-04-27 19:39:53,505:INFO:Creating metrics dataframe
2023-04-27 19:39:53,721:INFO:Uploading results into container
2023-04-27 19:39:53,722:INFO:Uploading model into container now
2023-04-27 19:39:53,724:INFO:_master_model_container: 4
2023-04-27 19:39:53,724:INFO:_display_container: 2
2023-04-27 19:39:53,725:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7404, splitter='best')
2023-04-27 19:39:53,726:INFO:create_model() successfully completed......................................
2023-04-27 19:39:53,879:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:53,880:INFO:Creating metrics dataframe
2023-04-27 19:39:53,897:INFO:Initializing SVM - Linear Kernel
2023-04-27 19:39:53,898:INFO:Total runtime is 0.07181104024251302 minutes
2023-04-27 19:39:53,908:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:53,909:INFO:Initializing create_model()
2023-04-27 19:39:53,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:53,910:INFO:Checking exceptions
2023-04-27 19:39:53,911:INFO:Importing libraries
2023-04-27 19:39:53,911:INFO:Copying training dataset
2023-04-27 19:39:53,923:INFO:Defining folds
2023-04-27 19:39:53,923:INFO:Declaring metric variables
2023-04-27 19:39:53,931:INFO:Importing untrained model
2023-04-27 19:39:53,940:INFO:SVM - Linear Kernel Imported successfully
2023-04-27 19:39:53,951:INFO:Starting cross validation
2023-04-27 19:39:53,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:54,135:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,145:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,145:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,152:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,166:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,168:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,180:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,191:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,202:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,203:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 19:39:54,462:INFO:Calculating mean and std
2023-04-27 19:39:54,464:INFO:Creating metrics dataframe
2023-04-27 19:39:54,689:INFO:Uploading results into container
2023-04-27 19:39:54,691:INFO:Uploading model into container now
2023-04-27 19:39:54,691:INFO:_master_model_container: 5
2023-04-27 19:39:54,691:INFO:_display_container: 2
2023-04-27 19:39:54,692:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-27 19:39:54,692:INFO:create_model() successfully completed......................................
2023-04-27 19:39:54,816:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:54,816:INFO:Creating metrics dataframe
2023-04-27 19:39:54,829:INFO:Initializing Ridge Classifier
2023-04-27 19:39:54,829:INFO:Total runtime is 0.08733584880828857 minutes
2023-04-27 19:39:54,835:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:54,836:INFO:Initializing create_model()
2023-04-27 19:39:54,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:54,836:INFO:Checking exceptions
2023-04-27 19:39:54,836:INFO:Importing libraries
2023-04-27 19:39:54,836:INFO:Copying training dataset
2023-04-27 19:39:54,842:INFO:Defining folds
2023-04-27 19:39:54,842:INFO:Declaring metric variables
2023-04-27 19:39:54,846:INFO:Importing untrained model
2023-04-27 19:39:54,852:INFO:Ridge Classifier Imported successfully
2023-04-27 19:39:54,864:INFO:Starting cross validation
2023-04-27 19:39:54,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:54,990:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:54,999:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,001:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,004:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,011:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,012:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,013:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,027:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,028:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,033:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 19:39:55,309:INFO:Calculating mean and std
2023-04-27 19:39:55,311:INFO:Creating metrics dataframe
2023-04-27 19:39:55,520:INFO:Uploading results into container
2023-04-27 19:39:55,521:INFO:Uploading model into container now
2023-04-27 19:39:55,522:INFO:_master_model_container: 6
2023-04-27 19:39:55,522:INFO:_display_container: 2
2023-04-27 19:39:55,523:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7404, solver='auto',
                tol=0.0001)
2023-04-27 19:39:55,523:INFO:create_model() successfully completed......................................
2023-04-27 19:39:55,665:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:55,665:INFO:Creating metrics dataframe
2023-04-27 19:39:55,682:INFO:Initializing Random Forest Classifier
2023-04-27 19:39:55,683:INFO:Total runtime is 0.10155891974767048 minutes
2023-04-27 19:39:55,691:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:55,692:INFO:Initializing create_model()
2023-04-27 19:39:55,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:55,692:INFO:Checking exceptions
2023-04-27 19:39:55,693:INFO:Importing libraries
2023-04-27 19:39:55,693:INFO:Copying training dataset
2023-04-27 19:39:55,703:INFO:Defining folds
2023-04-27 19:39:55,704:INFO:Declaring metric variables
2023-04-27 19:39:55,713:INFO:Importing untrained model
2023-04-27 19:39:55,720:INFO:Random Forest Classifier Imported successfully
2023-04-27 19:39:55,737:INFO:Starting cross validation
2023-04-27 19:39:55,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:58,054:INFO:Calculating mean and std
2023-04-27 19:39:58,055:INFO:Creating metrics dataframe
2023-04-27 19:39:58,239:INFO:Uploading results into container
2023-04-27 19:39:58,240:INFO:Uploading model into container now
2023-04-27 19:39:58,241:INFO:_master_model_container: 7
2023-04-27 19:39:58,241:INFO:_display_container: 2
2023-04-27 19:39:58,241:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7404, verbose=0, warm_start=False)
2023-04-27 19:39:58,242:INFO:create_model() successfully completed......................................
2023-04-27 19:39:58,353:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:58,353:INFO:Creating metrics dataframe
2023-04-27 19:39:58,365:INFO:Initializing Quadratic Discriminant Analysis
2023-04-27 19:39:58,365:INFO:Total runtime is 0.14626449346542358 minutes
2023-04-27 19:39:58,370:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:58,371:INFO:Initializing create_model()
2023-04-27 19:39:58,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:58,371:INFO:Checking exceptions
2023-04-27 19:39:58,371:INFO:Importing libraries
2023-04-27 19:39:58,372:INFO:Copying training dataset
2023-04-27 19:39:58,381:INFO:Defining folds
2023-04-27 19:39:58,382:INFO:Declaring metric variables
2023-04-27 19:39:58,389:INFO:Importing untrained model
2023-04-27 19:39:58,397:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-27 19:39:58,408:INFO:Starting cross validation
2023-04-27 19:39:58,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:39:59,024:INFO:Calculating mean and std
2023-04-27 19:39:59,026:INFO:Creating metrics dataframe
2023-04-27 19:39:59,236:INFO:Uploading results into container
2023-04-27 19:39:59,237:INFO:Uploading model into container now
2023-04-27 19:39:59,238:INFO:_master_model_container: 8
2023-04-27 19:39:59,238:INFO:_display_container: 2
2023-04-27 19:39:59,238:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-27 19:39:59,239:INFO:create_model() successfully completed......................................
2023-04-27 19:39:59,354:INFO:SubProcess create_model() end ==================================
2023-04-27 19:39:59,355:INFO:Creating metrics dataframe
2023-04-27 19:39:59,367:INFO:Initializing Ada Boost Classifier
2023-04-27 19:39:59,368:INFO:Total runtime is 0.16297484636306764 minutes
2023-04-27 19:39:59,373:INFO:SubProcess create_model() called ==================================
2023-04-27 19:39:59,374:INFO:Initializing create_model()
2023-04-27 19:39:59,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:39:59,374:INFO:Checking exceptions
2023-04-27 19:39:59,374:INFO:Importing libraries
2023-04-27 19:39:59,374:INFO:Copying training dataset
2023-04-27 19:39:59,382:INFO:Defining folds
2023-04-27 19:39:59,383:INFO:Declaring metric variables
2023-04-27 19:39:59,388:INFO:Importing untrained model
2023-04-27 19:39:59,394:INFO:Ada Boost Classifier Imported successfully
2023-04-27 19:39:59,406:INFO:Starting cross validation
2023-04-27 19:39:59,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:40:00,525:INFO:Calculating mean and std
2023-04-27 19:40:00,526:INFO:Creating metrics dataframe
2023-04-27 19:40:00,766:INFO:Uploading results into container
2023-04-27 19:40:00,767:INFO:Uploading model into container now
2023-04-27 19:40:00,768:INFO:_master_model_container: 9
2023-04-27 19:40:00,768:INFO:_display_container: 2
2023-04-27 19:40:00,768:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7404)
2023-04-27 19:40:00,769:INFO:create_model() successfully completed......................................
2023-04-27 19:40:00,884:INFO:SubProcess create_model() end ==================================
2023-04-27 19:40:00,884:INFO:Creating metrics dataframe
2023-04-27 19:40:00,898:INFO:Initializing Gradient Boosting Classifier
2023-04-27 19:40:00,898:INFO:Total runtime is 0.1884820342063904 minutes
2023-04-27 19:40:00,903:INFO:SubProcess create_model() called ==================================
2023-04-27 19:40:00,904:INFO:Initializing create_model()
2023-04-27 19:40:00,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:40:00,905:INFO:Checking exceptions
2023-04-27 19:40:00,905:INFO:Importing libraries
2023-04-27 19:40:00,905:INFO:Copying training dataset
2023-04-27 19:40:00,914:INFO:Defining folds
2023-04-27 19:40:00,914:INFO:Declaring metric variables
2023-04-27 19:40:00,920:INFO:Importing untrained model
2023-04-27 19:40:00,925:INFO:Gradient Boosting Classifier Imported successfully
2023-04-27 19:40:00,936:INFO:Starting cross validation
2023-04-27 19:40:00,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:40:02,395:INFO:Calculating mean and std
2023-04-27 19:40:02,397:INFO:Creating metrics dataframe
2023-04-27 19:40:02,592:INFO:Uploading results into container
2023-04-27 19:40:02,593:INFO:Uploading model into container now
2023-04-27 19:40:02,594:INFO:_master_model_container: 10
2023-04-27 19:40:02,594:INFO:_display_container: 2
2023-04-27 19:40:02,595:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-27 19:40:02,595:INFO:create_model() successfully completed......................................
2023-04-27 19:40:02,707:INFO:SubProcess create_model() end ==================================
2023-04-27 19:40:02,707:INFO:Creating metrics dataframe
2023-04-27 19:40:02,720:INFO:Initializing Linear Discriminant Analysis
2023-04-27 19:40:02,721:INFO:Total runtime is 0.21885813474655152 minutes
2023-04-27 19:40:02,726:INFO:SubProcess create_model() called ==================================
2023-04-27 19:40:02,727:INFO:Initializing create_model()
2023-04-27 19:40:02,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:40:02,727:INFO:Checking exceptions
2023-04-27 19:40:02,727:INFO:Importing libraries
2023-04-27 19:40:02,728:INFO:Copying training dataset
2023-04-27 19:40:02,736:INFO:Defining folds
2023-04-27 19:40:02,736:INFO:Declaring metric variables
2023-04-27 19:40:02,741:INFO:Importing untrained model
2023-04-27 19:40:02,747:INFO:Linear Discriminant Analysis Imported successfully
2023-04-27 19:40:02,757:INFO:Starting cross validation
2023-04-27 19:40:02,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:40:03,274:INFO:Calculating mean and std
2023-04-27 19:40:03,275:INFO:Creating metrics dataframe
2023-04-27 19:40:03,454:INFO:Uploading results into container
2023-04-27 19:40:03,456:INFO:Uploading model into container now
2023-04-27 19:40:03,457:INFO:_master_model_container: 11
2023-04-27 19:40:03,458:INFO:_display_container: 2
2023-04-27 19:40:03,459:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-27 19:40:03,459:INFO:create_model() successfully completed......................................
2023-04-27 19:40:03,560:INFO:SubProcess create_model() end ==================================
2023-04-27 19:40:03,560:INFO:Creating metrics dataframe
2023-04-27 19:40:03,573:INFO:Initializing Extra Trees Classifier
2023-04-27 19:40:03,573:INFO:Total runtime is 0.23306454022725423 minutes
2023-04-27 19:40:03,577:INFO:SubProcess create_model() called ==================================
2023-04-27 19:40:03,578:INFO:Initializing create_model()
2023-04-27 19:40:03,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:40:03,578:INFO:Checking exceptions
2023-04-27 19:40:03,578:INFO:Importing libraries
2023-04-27 19:40:03,578:INFO:Copying training dataset
2023-04-27 19:40:03,585:INFO:Defining folds
2023-04-27 19:40:03,586:INFO:Declaring metric variables
2023-04-27 19:40:03,593:INFO:Importing untrained model
2023-04-27 19:40:03,599:INFO:Extra Trees Classifier Imported successfully
2023-04-27 19:40:03,610:INFO:Starting cross validation
2023-04-27 19:40:03,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:41:43,543:INFO:Calculating mean and std
2023-04-27 19:41:43,545:INFO:Creating metrics dataframe
2023-04-27 19:41:43,745:INFO:Uploading results into container
2023-04-27 19:41:43,747:INFO:Uploading model into container now
2023-04-27 19:41:43,747:INFO:_master_model_container: 12
2023-04-27 19:41:43,747:INFO:_display_container: 2
2023-04-27 19:41:43,749:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7404, verbose=0, warm_start=False)
2023-04-27 19:41:43,749:INFO:create_model() successfully completed......................................
2023-04-27 19:41:43,858:INFO:SubProcess create_model() end ==================================
2023-04-27 19:41:43,858:INFO:Creating metrics dataframe
2023-04-27 19:41:43,878:INFO:Initializing Light Gradient Boosting Machine
2023-04-27 19:41:43,878:INFO:Total runtime is 1.9048157493273417 minutes
2023-04-27 19:41:43,884:INFO:SubProcess create_model() called ==================================
2023-04-27 19:41:43,886:INFO:Initializing create_model()
2023-04-27 19:41:43,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:41:43,887:INFO:Checking exceptions
2023-04-27 19:41:43,887:INFO:Importing libraries
2023-04-27 19:41:43,888:INFO:Copying training dataset
2023-04-27 19:41:43,896:INFO:Defining folds
2023-04-27 19:41:43,897:INFO:Declaring metric variables
2023-04-27 19:41:43,902:INFO:Importing untrained model
2023-04-27 19:41:43,909:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-27 19:41:43,921:INFO:Starting cross validation
2023-04-27 19:41:43,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:41:44,659:INFO:Calculating mean and std
2023-04-27 19:41:44,661:INFO:Creating metrics dataframe
2023-04-27 19:41:44,884:INFO:Uploading results into container
2023-04-27 19:41:44,885:INFO:Uploading model into container now
2023-04-27 19:41:44,886:INFO:_master_model_container: 13
2023-04-27 19:41:44,886:INFO:_display_container: 2
2023-04-27 19:41:44,887:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7404, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-27 19:41:44,887:INFO:create_model() successfully completed......................................
2023-04-27 19:41:44,984:INFO:SubProcess create_model() end ==================================
2023-04-27 19:41:44,984:INFO:Creating metrics dataframe
2023-04-27 19:41:44,997:INFO:Initializing Dummy Classifier
2023-04-27 19:41:44,997:INFO:Total runtime is 1.9234621167182921 minutes
2023-04-27 19:41:45,001:INFO:SubProcess create_model() called ==================================
2023-04-27 19:41:45,001:INFO:Initializing create_model()
2023-04-27 19:41:45,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f5137137550>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:41:45,001:INFO:Checking exceptions
2023-04-27 19:41:45,002:INFO:Importing libraries
2023-04-27 19:41:45,002:INFO:Copying training dataset
2023-04-27 19:41:45,008:INFO:Defining folds
2023-04-27 19:41:45,008:INFO:Declaring metric variables
2023-04-27 19:41:45,015:INFO:Importing untrained model
2023-04-27 19:41:45,021:INFO:Dummy Classifier Imported successfully
2023-04-27 19:41:45,032:INFO:Starting cross validation
2023-04-27 19:41:45,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 19:41:45,497:INFO:Calculating mean and std
2023-04-27 19:41:45,498:INFO:Creating metrics dataframe
2023-04-27 19:41:45,700:INFO:Uploading results into container
2023-04-27 19:41:45,701:INFO:Uploading model into container now
2023-04-27 19:41:45,701:INFO:_master_model_container: 14
2023-04-27 19:41:45,701:INFO:_display_container: 2
2023-04-27 19:41:45,702:INFO:DummyClassifier(constant=None, random_state=7404, strategy='prior')
2023-04-27 19:41:45,702:INFO:create_model() successfully completed......................................
2023-04-27 19:41:45,795:INFO:SubProcess create_model() end ==================================
2023-04-27 19:41:45,795:INFO:Creating metrics dataframe
2023-04-27 19:41:45,822:INFO:Initializing create_model()
2023-04-27 19:41:45,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 19:41:45,822:INFO:Checking exceptions
2023-04-27 19:41:45,826:INFO:Importing libraries
2023-04-27 19:41:45,826:INFO:Copying training dataset
2023-04-27 19:41:45,832:INFO:Defining folds
2023-04-27 19:41:45,833:INFO:Declaring metric variables
2023-04-27 19:41:45,833:INFO:Importing untrained model
2023-04-27 19:41:45,833:INFO:Declaring custom model
2023-04-27 19:41:45,834:INFO:Logistic Regression Imported successfully
2023-04-27 19:41:45,835:INFO:Cross validation set to False
2023-04-27 19:41:45,835:INFO:Fitting Model
2023-04-27 19:41:47,230:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:41:47,230:INFO:create_model() successfully completed......................................
2023-04-27 19:41:47,362:INFO:_master_model_container: 14
2023-04-27 19:41:47,362:INFO:_display_container: 2
2023-04-27 19:41:47,363:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 19:41:47,363:INFO:compare_models() successfully completed......................................
2023-04-27 20:00:03,337:INFO:Initializing create_model()
2023-04-27 20:00:03,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51366e6290>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 20:00:03,338:INFO:Checking exceptions
2023-04-27 20:00:03,360:INFO:Importing libraries
2023-04-27 20:00:03,361:INFO:Copying training dataset
2023-04-27 20:00:03,369:INFO:Defining folds
2023-04-27 20:00:03,369:INFO:Declaring metric variables
2023-04-27 20:00:03,374:INFO:Importing untrained model
2023-04-27 20:00:03,380:INFO:Decision Tree Classifier Imported successfully
2023-04-27 20:00:03,392:INFO:Starting cross validation
2023-04-27 20:00:03,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 20:00:39,948:INFO:Calculating mean and std
2023-04-27 20:00:39,950:INFO:Creating metrics dataframe
2023-04-27 20:00:39,962:INFO:Finalizing model
2023-04-27 20:00:40,119:INFO:Uploading results into container
2023-04-27 20:00:40,122:INFO:Uploading model into container now
2023-04-27 20:00:40,145:INFO:_master_model_container: 15
2023-04-27 20:00:40,145:INFO:_display_container: 3
2023-04-27 20:00:40,145:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7404, splitter='best')
2023-04-27 20:00:40,146:INFO:create_model() successfully completed......................................
2023-04-27 20:01:15,197:INFO:PyCaret ClassificationExperiment
2023-04-27 20:01:15,197:INFO:Logging name: clf-default-name
2023-04-27 20:01:15,197:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 20:01:15,198:INFO:version 3.0.0
2023-04-27 20:01:15,198:INFO:Initializing setup()
2023-04-27 20:01:15,198:INFO:self.USI: 9906
2023-04-27 20:01:15,198:INFO:self._variable_keys: {'seed', 'memory', '_available_plots', 'y_train', 'is_multiclass', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'fold_groups_param', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'n_jobs_param', 'pipeline', 'data', 'X_test', 'target_param', 'fold_generator', 'y', 'idx', '_ml_usecase', 'exp_id', 'y_test', 'html_param', 'fold_shuffle_param', 'X', 'USI'}
2023-04-27 20:01:15,198:INFO:Checking environment
2023-04-27 20:01:15,198:INFO:python_version: 3.10.6
2023-04-27 20:01:15,198:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-27 20:01:15,198:INFO:machine: x86_64
2023-04-27 20:01:15,198:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 20:01:15,199:INFO:Memory: svmem(total=26859122688, available=22282186752, percent=17.0, used=4155826176, free=1409273856, active=6029221888, inactive=17596522496, buffers=934961152, cached=20359061504, shared=1892352, slab=1609670656)
2023-04-27 20:01:15,199:INFO:Physical Core: 8
2023-04-27 20:01:15,200:INFO:Logical Core: 16
2023-04-27 20:01:15,200:INFO:Checking libraries
2023-04-27 20:01:15,200:INFO:System:
2023-04-27 20:01:15,200:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-27 20:01:15,200:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-27 20:01:15,200:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-27 20:01:15,200:INFO:PyCaret required dependencies:
2023-04-27 20:01:15,200:INFO:                 pip: 23.1.2
2023-04-27 20:01:15,200:INFO:          setuptools: 59.6.0
2023-04-27 20:01:15,200:INFO:             pycaret: 3.0.0
2023-04-27 20:01:15,201:INFO:             IPython: 8.12.0
2023-04-27 20:01:15,201:INFO:          ipywidgets: 8.0.6
2023-04-27 20:01:15,201:INFO:                tqdm: 4.65.0
2023-04-27 20:01:15,201:INFO:               numpy: 1.23.5
2023-04-27 20:01:15,201:INFO:              pandas: 1.5.3
2023-04-27 20:01:15,201:INFO:              jinja2: 3.1.2
2023-04-27 20:01:15,201:INFO:               scipy: 1.10.1
2023-04-27 20:01:15,201:INFO:              joblib: 1.2.0
2023-04-27 20:01:15,201:INFO:             sklearn: 1.2.2
2023-04-27 20:01:15,201:INFO:                pyod: 1.0.9
2023-04-27 20:01:15,201:INFO:            imblearn: 0.10.1
2023-04-27 20:01:15,202:INFO:   category_encoders: 2.6.0
2023-04-27 20:01:15,202:INFO:            lightgbm: 3.3.5
2023-04-27 20:01:15,202:INFO:               numba: 0.56.4
2023-04-27 20:01:15,202:INFO:            requests: 2.29.0
2023-04-27 20:01:15,202:INFO:          matplotlib: 3.7.1
2023-04-27 20:01:15,202:INFO:          scikitplot: 0.3.7
2023-04-27 20:01:15,202:INFO:         yellowbrick: 1.5
2023-04-27 20:01:15,202:INFO:              plotly: 5.14.1
2023-04-27 20:01:15,202:INFO:             kaleido: 0.2.1
2023-04-27 20:01:15,202:INFO:         statsmodels: 0.13.5
2023-04-27 20:01:15,202:INFO:              sktime: 0.17.2
2023-04-27 20:01:15,202:INFO:               tbats: 1.1.3
2023-04-27 20:01:15,203:INFO:            pmdarima: 2.0.3
2023-04-27 20:01:15,203:INFO:              psutil: 5.9.5
2023-04-27 20:01:15,203:INFO:PyCaret optional dependencies:
2023-04-27 20:01:15,203:INFO:                shap: Not installed
2023-04-27 20:01:15,203:INFO:           interpret: Not installed
2023-04-27 20:01:15,203:INFO:                umap: Not installed
2023-04-27 20:01:15,203:INFO:    pandas_profiling: Not installed
2023-04-27 20:01:15,203:INFO:  explainerdashboard: Not installed
2023-04-27 20:01:15,203:INFO:             autoviz: Not installed
2023-04-27 20:01:15,203:INFO:           fairlearn: Not installed
2023-04-27 20:01:15,203:INFO:             xgboost: Not installed
2023-04-27 20:01:15,204:INFO:            catboost: Not installed
2023-04-27 20:01:15,204:INFO:              kmodes: Not installed
2023-04-27 20:01:15,204:INFO:             mlxtend: Not installed
2023-04-27 20:01:15,204:INFO:       statsforecast: Not installed
2023-04-27 20:01:15,204:INFO:        tune_sklearn: Not installed
2023-04-27 20:01:15,204:INFO:                 ray: Not installed
2023-04-27 20:01:15,204:INFO:            hyperopt: Not installed
2023-04-27 20:01:15,204:INFO:              optuna: Not installed
2023-04-27 20:01:15,204:INFO:               skopt: Not installed
2023-04-27 20:01:15,204:INFO:              mlflow: Not installed
2023-04-27 20:01:15,204:INFO:              gradio: Not installed
2023-04-27 20:01:15,205:INFO:             fastapi: Not installed
2023-04-27 20:01:15,205:INFO:             uvicorn: Not installed
2023-04-27 20:01:15,205:INFO:              m2cgen: Not installed
2023-04-27 20:01:15,205:INFO:           evidently: Not installed
2023-04-27 20:01:15,205:INFO:               fugue: Not installed
2023-04-27 20:01:15,205:INFO:           streamlit: 1.21.0
2023-04-27 20:01:15,205:INFO:             prophet: Not installed
2023-04-27 20:01:15,205:INFO:None
2023-04-27 20:01:15,205:INFO:Set up data.
2023-04-27 20:01:15,224:INFO:Set up train/test split.
2023-04-27 20:01:15,234:INFO:Set up index.
2023-04-27 20:01:15,234:INFO:Set up folding strategy.
2023-04-27 20:01:15,234:INFO:Assigning column types.
2023-04-27 20:01:15,239:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 20:01:15,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,421:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 20:01:15,476:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 20:01:15,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,603:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 20:01:15,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:15,795:INFO:Preparing preprocessing pipeline...
2023-04-27 20:01:15,796:INFO:Set up label encoding.
2023-04-27 20:01:15,796:INFO:Set up simple imputation.
2023-04-27 20:01:15,802:INFO:Set up encoding of ordinal features.
2023-04-27 20:01:15,815:INFO:Set up encoding of categorical features.
2023-04-27 20:01:15,817:INFO:Set up column name cleaning.
2023-04-27 20:01:17,944:INFO:Finished creating preprocessing pipeline.
2023-04-27 20:01:18,108:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4572,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-27 20:01:18,108:INFO:Creating final display dataframe.
2023-04-27 20:01:20,099:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     4572
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 102)
6   Transformed train set shape              (2541, 102)
7    Transformed test set shape              (1089, 102)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     9906
2023-04-27 20:01:20,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:20,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:20,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:20,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 20:01:20,295:INFO:setup() successfully completed in 5.15s...............
2023-04-27 20:01:37,089:INFO:Initializing create_model()
2023-04-27 20:01:37,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f51368f7c40>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 20:01:37,089:INFO:Checking exceptions
2023-04-27 20:01:37,107:INFO:Importing libraries
2023-04-27 20:01:37,107:INFO:Copying training dataset
2023-04-27 20:01:37,113:INFO:Defining folds
2023-04-27 20:01:37,114:INFO:Declaring metric variables
2023-04-27 20:01:37,118:INFO:Importing untrained model
2023-04-27 20:01:37,124:INFO:Decision Tree Classifier Imported successfully
2023-04-27 20:01:37,141:INFO:Starting cross validation
2023-04-27 20:01:37,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 19:01:26,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:01:26,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:01:26,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:01:26,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:01:26,850:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-28 19:01:41,815:INFO:PyCaret ClassificationExperiment
2023-04-28 19:01:41,815:INFO:Logging name: clf-default-name
2023-04-28 19:01:41,815:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 19:01:41,816:INFO:version 3.0.0
2023-04-28 19:01:41,816:INFO:Initializing setup()
2023-04-28 19:01:41,816:INFO:self.USI: 31c6
2023-04-28 19:01:41,816:INFO:self._variable_keys: {'fold_shuffle_param', 'data', 'gpu_param', 'fold_generator', 'y', 'logging_param', 'idx', 'X', 'fold_groups_param', 'USI', 'y_test', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'y_train', 'html_param', 'log_plots_param', 'target_param', 'exp_id', 'memory', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'X_train', '_ml_usecase', 'n_jobs_param', 'is_multiclass'}
2023-04-28 19:01:41,816:INFO:Checking environment
2023-04-28 19:01:41,816:INFO:python_version: 3.10.6
2023-04-28 19:01:41,816:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 19:01:41,816:INFO:machine: x86_64
2023-04-28 19:01:41,816:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:01:41,816:INFO:Memory: svmem(total=26859122688, available=23671730176, percent=11.9, used=2766495744, free=6117154816, active=4237570048, inactive=15136468992, buffers=786784256, cached=17188687872, shared=1708032, slab=1181532160)
2023-04-28 19:01:41,818:INFO:Physical Core: 8
2023-04-28 19:01:41,818:INFO:Logical Core: 16
2023-04-28 19:01:41,818:INFO:Checking libraries
2023-04-28 19:01:41,818:INFO:System:
2023-04-28 19:01:41,818:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 19:01:41,818:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 19:01:41,819:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:01:41,819:INFO:PyCaret required dependencies:
2023-04-28 19:01:41,819:INFO:                 pip: 23.1.2
2023-04-28 19:01:41,819:INFO:          setuptools: 59.6.0
2023-04-28 19:01:41,819:INFO:             pycaret: 3.0.0
2023-04-28 19:01:41,819:INFO:             IPython: 8.12.0
2023-04-28 19:01:41,819:INFO:          ipywidgets: 8.0.6
2023-04-28 19:01:41,819:INFO:                tqdm: 4.65.0
2023-04-28 19:01:41,819:INFO:               numpy: 1.23.5
2023-04-28 19:01:41,819:INFO:              pandas: 1.5.3
2023-04-28 19:01:41,819:INFO:              jinja2: 3.1.2
2023-04-28 19:01:41,819:INFO:               scipy: 1.10.1
2023-04-28 19:01:41,820:INFO:              joblib: 1.2.0
2023-04-28 19:01:41,820:INFO:             sklearn: 1.2.2
2023-04-28 19:01:41,820:INFO:                pyod: 1.0.9
2023-04-28 19:01:41,820:INFO:            imblearn: 0.10.1
2023-04-28 19:01:41,820:INFO:   category_encoders: 2.6.0
2023-04-28 19:01:41,820:INFO:            lightgbm: 3.3.5
2023-04-28 19:01:41,820:INFO:               numba: 0.56.4
2023-04-28 19:01:41,820:INFO:            requests: 2.29.0
2023-04-28 19:01:41,820:INFO:          matplotlib: 3.7.1
2023-04-28 19:01:41,820:INFO:          scikitplot: 0.3.7
2023-04-28 19:01:41,820:INFO:         yellowbrick: 1.5
2023-04-28 19:01:41,820:INFO:              plotly: 5.14.1
2023-04-28 19:01:41,820:INFO:             kaleido: 0.2.1
2023-04-28 19:01:41,820:INFO:         statsmodels: 0.13.5
2023-04-28 19:01:41,820:INFO:              sktime: 0.17.2
2023-04-28 19:01:41,820:INFO:               tbats: 1.1.3
2023-04-28 19:01:41,820:INFO:            pmdarima: 2.0.3
2023-04-28 19:01:41,820:INFO:              psutil: 5.9.5
2023-04-28 19:01:41,820:INFO:PyCaret optional dependencies:
2023-04-28 19:01:41,844:INFO:                shap: Not installed
2023-04-28 19:01:41,844:INFO:           interpret: Not installed
2023-04-28 19:01:41,844:INFO:                umap: Not installed
2023-04-28 19:01:41,844:INFO:    pandas_profiling: Not installed
2023-04-28 19:01:41,844:INFO:  explainerdashboard: Not installed
2023-04-28 19:01:41,845:INFO:             autoviz: Not installed
2023-04-28 19:01:41,845:INFO:           fairlearn: Not installed
2023-04-28 19:01:41,845:INFO:             xgboost: Not installed
2023-04-28 19:01:41,845:INFO:            catboost: Not installed
2023-04-28 19:01:41,845:INFO:              kmodes: Not installed
2023-04-28 19:01:41,845:INFO:             mlxtend: Not installed
2023-04-28 19:01:41,845:INFO:       statsforecast: Not installed
2023-04-28 19:01:41,845:INFO:        tune_sklearn: Not installed
2023-04-28 19:01:41,845:INFO:                 ray: Not installed
2023-04-28 19:01:41,845:INFO:            hyperopt: Not installed
2023-04-28 19:01:41,845:INFO:              optuna: Not installed
2023-04-28 19:01:41,845:INFO:               skopt: Not installed
2023-04-28 19:01:41,846:INFO:              mlflow: Not installed
2023-04-28 19:01:41,846:INFO:              gradio: Not installed
2023-04-28 19:01:41,846:INFO:             fastapi: Not installed
2023-04-28 19:01:41,846:INFO:             uvicorn: Not installed
2023-04-28 19:01:41,846:INFO:              m2cgen: Not installed
2023-04-28 19:01:41,846:INFO:           evidently: Not installed
2023-04-28 19:01:41,846:INFO:               fugue: Not installed
2023-04-28 19:01:41,846:INFO:           streamlit: 1.21.0
2023-04-28 19:01:41,846:INFO:             prophet: Not installed
2023-04-28 19:01:41,846:INFO:None
2023-04-28 19:01:41,846:INFO:Set up data.
2023-04-28 19:01:41,865:INFO:Set up train/test split.
2023-04-28 19:01:41,875:INFO:Set up index.
2023-04-28 19:01:41,875:INFO:Set up folding strategy.
2023-04-28 19:01:41,875:INFO:Assigning column types.
2023-04-28 19:01:41,879:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 19:01:41,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:01:41,932:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:01:41,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:41,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:01:42,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:01:42,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,083:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 19:01:42,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:01:42,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:01:42,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,258:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 19:01:42,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:42,425:INFO:Preparing preprocessing pipeline...
2023-04-28 19:01:42,428:INFO:Set up label encoding.
2023-04-28 19:01:42,428:INFO:Set up simple imputation.
2023-04-28 19:01:42,436:INFO:Set up encoding of ordinal features.
2023-04-28 19:01:42,447:INFO:Set up encoding of categorical features.
2023-04-28 19:01:42,448:INFO:Set up column name cleaning.
2023-04-28 19:01:42,773:INFO:Finished creating preprocessing pipeline.
2023-04-28 19:01:42,958:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=1258,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 19:01:42,959:INFO:Creating final display dataframe.
2023-04-28 19:01:43,735:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     1258
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 104)
6   Transformed train set shape              (2541, 104)
7    Transformed test set shape              (1089, 104)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     31c6
2023-04-28 19:01:43,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:43,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:43,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:43,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:01:43,942:INFO:setup() successfully completed in 2.22s...............
2023-04-28 19:02:19,072:INFO:Initializing create_model()
2023-04-28 19:02:19,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 19:02:19,074:INFO:Checking exceptions
2023-04-28 19:02:19,096:INFO:Importing libraries
2023-04-28 19:02:19,097:INFO:Copying training dataset
2023-04-28 19:02:19,104:INFO:Defining folds
2023-04-28 19:02:19,105:INFO:Declaring metric variables
2023-04-28 19:02:19,109:INFO:Importing untrained model
2023-04-28 19:02:19,114:INFO:Decision Tree Classifier Imported successfully
2023-04-28 19:02:19,126:INFO:Starting cross validation
2023-04-28 19:02:19,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 19:02:24,517:INFO:Calculating mean and std
2023-04-28 19:02:24,519:INFO:Creating metrics dataframe
2023-04-28 19:02:24,529:INFO:Finalizing model
2023-04-28 19:02:25,046:INFO:Uploading results into container
2023-04-28 19:02:25,049:INFO:Uploading model into container now
2023-04-28 19:02:25,076:INFO:_master_model_container: 1
2023-04-28 19:02:25,077:INFO:_display_container: 2
2023-04-28 19:02:25,080:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best')
2023-04-28 19:02:25,080:INFO:create_model() successfully completed......................................
2023-04-28 19:06:34,415:INFO:Initializing plot_model()
2023-04-28 19:06:34,416:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, system=True)
2023-04-28 19:06:34,417:INFO:Checking exceptions
2023-04-28 19:06:34,427:INFO:Preloading libraries
2023-04-28 19:06:34,428:INFO:Copying training dataset
2023-04-28 19:06:34,428:INFO:Plot type: auc
2023-04-28 19:06:34,575:INFO:Fitting Model
2023-04-28 19:06:34,577:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:06:34,577:INFO:Scoring test/hold-out set
2023-04-28 19:06:34,869:INFO:Visual Rendered Successfully
2023-04-28 19:06:35,020:INFO:plot_model() successfully completed......................................
2023-04-28 19:08:45,629:INFO:Initializing plot_model()
2023-04-28 19:08:45,630:INFO:plot_model(plot=tree, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, system=True)
2023-04-28 19:08:45,631:INFO:Checking exceptions
2023-04-28 19:08:45,638:INFO:Preloading libraries
2023-04-28 19:08:45,639:INFO:Copying training dataset
2023-04-28 19:08:45,639:INFO:Plot type: tree
2023-04-28 19:08:45,668:INFO:Plotting decision trees
2023-04-28 19:08:45,702:INFO:Plotting tree 0
2023-04-28 19:09:09,632:INFO:Initializing plot_model()
2023-04-28 19:09:09,633:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, system=True)
2023-04-28 19:09:09,633:INFO:Checking exceptions
2023-04-28 19:09:09,642:INFO:Preloading libraries
2023-04-28 19:09:09,644:INFO:Copying training dataset
2023-04-28 19:09:09,644:INFO:Plot type: auc
2023-04-28 19:09:09,767:INFO:Fitting Model
2023-04-28 19:09:09,768:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:09:09,768:INFO:Scoring test/hold-out set
2023-04-28 19:09:10,044:INFO:Visual Rendered Successfully
2023-04-28 19:09:10,264:INFO:plot_model() successfully completed......................................
2023-04-28 19:09:50,385:INFO:Initializing plot_model()
2023-04-28 19:09:50,386:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, system=True)
2023-04-28 19:09:50,387:INFO:Checking exceptions
2023-04-28 19:09:50,394:INFO:Preloading libraries
2023-04-28 19:09:50,395:INFO:Copying training dataset
2023-04-28 19:09:50,395:INFO:Plot type: confusion_matrix
2023-04-28 19:09:50,537:INFO:Fitting Model
2023-04-28 19:09:50,538:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:09:50,538:INFO:Scoring test/hold-out set
2023-04-28 19:09:50,693:INFO:Visual Rendered Successfully
2023-04-28 19:09:50,879:INFO:plot_model() successfully completed......................................
2023-04-28 19:10:08,357:INFO:Initializing plot_model()
2023-04-28 19:10:08,358:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1258, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc3fa43f190>, system=True)
2023-04-28 19:10:08,358:INFO:Checking exceptions
2023-04-28 19:10:08,364:INFO:Preloading libraries
2023-04-28 19:10:08,365:INFO:Copying training dataset
2023-04-28 19:10:08,365:INFO:Plot type: confusion_matrix
2023-04-28 19:10:08,491:INFO:Fitting Model
2023-04-28 19:10:08,492:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:10:08,492:INFO:Scoring test/hold-out set
2023-04-28 19:10:08,622:INFO:Visual Rendered Successfully
2023-04-28 19:10:08,831:INFO:plot_model() successfully completed......................................
2023-04-28 19:10:27,196:WARNING:/tmp/ipykernel_632/546481132.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  sb.heatmap(psdas_df.drop(columns=categorical_feature_names).corr())

2023-04-28 19:10:28,225:INFO:PyCaret ClassificationExperiment
2023-04-28 19:10:28,225:INFO:Logging name: clf-default-name
2023-04-28 19:10:28,225:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 19:10:28,225:INFO:version 3.0.0
2023-04-28 19:10:28,225:INFO:Initializing setup()
2023-04-28 19:10:28,225:INFO:self.USI: eb29
2023-04-28 19:10:28,225:INFO:self._variable_keys: {'fold_shuffle_param', 'data', 'gpu_param', 'fold_generator', 'y', 'logging_param', 'idx', 'X', 'fold_groups_param', 'USI', 'y_test', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'y_train', 'html_param', 'log_plots_param', 'target_param', 'exp_id', 'memory', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'X_train', '_ml_usecase', 'n_jobs_param', 'is_multiclass'}
2023-04-28 19:10:28,225:INFO:Checking environment
2023-04-28 19:10:28,225:INFO:python_version: 3.10.6
2023-04-28 19:10:28,225:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 19:10:28,226:INFO:machine: x86_64
2023-04-28 19:10:28,226:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:10:28,226:INFO:Memory: svmem(total=26859122688, available=23387525120, percent=12.9, used=3050569728, free=5815132160, active=4350779392, inactive=15320326144, buffers=790216704, cached=17203204096, shared=1781760, slab=1183805440)
2023-04-28 19:10:28,227:INFO:Physical Core: 8
2023-04-28 19:10:28,227:INFO:Logical Core: 16
2023-04-28 19:10:28,227:INFO:Checking libraries
2023-04-28 19:10:28,227:INFO:System:
2023-04-28 19:10:28,227:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 19:10:28,227:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 19:10:28,227:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:10:28,227:INFO:PyCaret required dependencies:
2023-04-28 19:10:28,228:INFO:                 pip: 23.1.2
2023-04-28 19:10:28,228:INFO:          setuptools: 59.6.0
2023-04-28 19:10:28,228:INFO:             pycaret: 3.0.0
2023-04-28 19:10:28,228:INFO:             IPython: 8.12.0
2023-04-28 19:10:28,228:INFO:          ipywidgets: 8.0.6
2023-04-28 19:10:28,228:INFO:                tqdm: 4.65.0
2023-04-28 19:10:28,228:INFO:               numpy: 1.23.5
2023-04-28 19:10:28,228:INFO:              pandas: 1.5.3
2023-04-28 19:10:28,228:INFO:              jinja2: 3.1.2
2023-04-28 19:10:28,228:INFO:               scipy: 1.10.1
2023-04-28 19:10:28,228:INFO:              joblib: 1.2.0
2023-04-28 19:10:28,228:INFO:             sklearn: 1.2.2
2023-04-28 19:10:28,229:INFO:                pyod: 1.0.9
2023-04-28 19:10:28,229:INFO:            imblearn: 0.10.1
2023-04-28 19:10:28,229:INFO:   category_encoders: 2.6.0
2023-04-28 19:10:28,229:INFO:            lightgbm: 3.3.5
2023-04-28 19:10:28,229:INFO:               numba: 0.56.4
2023-04-28 19:10:28,229:INFO:            requests: 2.29.0
2023-04-28 19:10:28,229:INFO:          matplotlib: 3.7.1
2023-04-28 19:10:28,229:INFO:          scikitplot: 0.3.7
2023-04-28 19:10:28,229:INFO:         yellowbrick: 1.5
2023-04-28 19:10:28,229:INFO:              plotly: 5.14.1
2023-04-28 19:10:28,229:INFO:             kaleido: 0.2.1
2023-04-28 19:10:28,229:INFO:         statsmodels: 0.13.5
2023-04-28 19:10:28,230:INFO:              sktime: 0.17.2
2023-04-28 19:10:28,230:INFO:               tbats: 1.1.3
2023-04-28 19:10:28,230:INFO:            pmdarima: 2.0.3
2023-04-28 19:10:28,230:INFO:              psutil: 5.9.5
2023-04-28 19:10:28,230:INFO:PyCaret optional dependencies:
2023-04-28 19:10:28,230:INFO:                shap: Not installed
2023-04-28 19:10:28,230:INFO:           interpret: Not installed
2023-04-28 19:10:28,230:INFO:                umap: Not installed
2023-04-28 19:10:28,230:INFO:    pandas_profiling: Not installed
2023-04-28 19:10:28,230:INFO:  explainerdashboard: Not installed
2023-04-28 19:10:28,230:INFO:             autoviz: Not installed
2023-04-28 19:10:28,230:INFO:           fairlearn: Not installed
2023-04-28 19:10:28,230:INFO:             xgboost: Not installed
2023-04-28 19:10:28,231:INFO:            catboost: Not installed
2023-04-28 19:10:28,231:INFO:              kmodes: Not installed
2023-04-28 19:10:28,231:INFO:             mlxtend: Not installed
2023-04-28 19:10:28,231:INFO:       statsforecast: Not installed
2023-04-28 19:10:28,231:INFO:        tune_sklearn: Not installed
2023-04-28 19:10:28,231:INFO:                 ray: Not installed
2023-04-28 19:10:28,231:INFO:            hyperopt: Not installed
2023-04-28 19:10:28,231:INFO:              optuna: Not installed
2023-04-28 19:10:28,231:INFO:               skopt: Not installed
2023-04-28 19:10:28,231:INFO:              mlflow: Not installed
2023-04-28 19:10:28,231:INFO:              gradio: Not installed
2023-04-28 19:10:28,231:INFO:             fastapi: Not installed
2023-04-28 19:10:28,232:INFO:             uvicorn: Not installed
2023-04-28 19:10:28,232:INFO:              m2cgen: Not installed
2023-04-28 19:10:28,232:INFO:           evidently: Not installed
2023-04-28 19:10:28,232:INFO:               fugue: Not installed
2023-04-28 19:10:28,232:INFO:           streamlit: 1.21.0
2023-04-28 19:10:28,232:INFO:             prophet: Not installed
2023-04-28 19:10:28,232:INFO:None
2023-04-28 19:10:28,232:INFO:Set up data.
2023-04-28 19:10:28,249:INFO:Set up train/test split.
2023-04-28 19:10:28,256:INFO:Set up index.
2023-04-28 19:10:28,256:INFO:Set up folding strategy.
2023-04-28 19:10:28,256:INFO:Assigning column types.
2023-04-28 19:10:28,260:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 19:10:28,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,317:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,451:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 19:10:28,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:10:28,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,651:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 19:10:28,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:28,833:INFO:Preparing preprocessing pipeline...
2023-04-28 19:10:28,834:INFO:Set up label encoding.
2023-04-28 19:10:28,834:INFO:Set up simple imputation.
2023-04-28 19:10:28,839:INFO:Set up encoding of ordinal features.
2023-04-28 19:10:28,850:INFO:Set up encoding of categorical features.
2023-04-28 19:10:28,851:INFO:Set up column name cleaning.
2023-04-28 19:10:29,124:INFO:Finished creating preprocessing pipeline.
2023-04-28 19:10:29,279:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=2480,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 19:10:29,279:INFO:Creating final display dataframe.
2023-04-28 19:10:29,883:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     2480
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 104)
6   Transformed train set shape              (2541, 104)
7    Transformed test set shape              (1089, 104)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     eb29
2023-04-28 19:10:29,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:29,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:30,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:30,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:10:30,061:INFO:setup() successfully completed in 1.87s...............
2023-04-28 19:10:30,151:INFO:Initializing create_model()
2023-04-28 19:10:30,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc41e4a6560>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 19:10:30,152:INFO:Checking exceptions
2023-04-28 19:10:30,172:INFO:Importing libraries
2023-04-28 19:10:30,173:INFO:Copying training dataset
2023-04-28 19:10:30,181:INFO:Defining folds
2023-04-28 19:10:30,181:INFO:Declaring metric variables
2023-04-28 19:10:30,189:INFO:Importing untrained model
2023-04-28 19:10:30,196:INFO:Decision Tree Classifier Imported successfully
2023-04-28 19:10:30,214:INFO:Starting cross validation
2023-04-28 19:10:30,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 19:10:35,206:INFO:Calculating mean and std
2023-04-28 19:10:35,208:INFO:Creating metrics dataframe
2023-04-28 19:10:35,219:INFO:Finalizing model
2023-04-28 19:10:35,680:INFO:Uploading results into container
2023-04-28 19:10:35,682:INFO:Uploading model into container now
2023-04-28 19:10:35,702:INFO:_master_model_container: 1
2023-04-28 19:10:35,703:INFO:_display_container: 2
2023-04-28 19:10:35,704:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2480, splitter='best')
2023-04-28 19:10:35,704:INFO:create_model() successfully completed......................................
2023-04-28 19:10:36,010:INFO:Initializing plot_model()
2023-04-28 19:10:36,011:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2480, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc41e4a6560>, system=True)
2023-04-28 19:10:36,012:INFO:Checking exceptions
2023-04-28 19:10:36,022:INFO:Preloading libraries
2023-04-28 19:10:36,023:INFO:Copying training dataset
2023-04-28 19:10:36,023:INFO:Plot type: confusion_matrix
2023-04-28 19:10:36,467:INFO:Fitting Model
2023-04-28 19:10:36,467:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:10:36,468:INFO:Scoring test/hold-out set
2023-04-28 19:10:36,658:INFO:Visual Rendered Successfully
2023-04-28 19:10:36,910:INFO:plot_model() successfully completed......................................
2023-04-28 19:12:17,745:INFO:PyCaret ClassificationExperiment
2023-04-28 19:12:17,745:INFO:Logging name: clf-default-name
2023-04-28 19:12:17,745:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 19:12:17,745:INFO:version 3.0.0
2023-04-28 19:12:17,745:INFO:Initializing setup()
2023-04-28 19:12:17,745:INFO:self.USI: 71db
2023-04-28 19:12:17,745:INFO:self._variable_keys: {'fold_shuffle_param', 'data', 'gpu_param', 'fold_generator', 'y', 'logging_param', 'idx', 'X', 'fold_groups_param', 'USI', 'y_test', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'y_train', 'html_param', 'log_plots_param', 'target_param', 'exp_id', 'memory', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'X_train', '_ml_usecase', 'n_jobs_param', 'is_multiclass'}
2023-04-28 19:12:17,746:INFO:Checking environment
2023-04-28 19:12:17,746:INFO:python_version: 3.10.6
2023-04-28 19:12:17,746:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 19:12:17,746:INFO:machine: x86_64
2023-04-28 19:12:17,746:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:12:17,746:INFO:Memory: svmem(total=26859122688, available=22016180224, percent=18.0, used=4421959680, free=4436033536, active=4353736704, inactive=16680402944, buffers=790990848, cached=17210138624, shared=1859584, slab=1190514688)
2023-04-28 19:12:17,747:INFO:Physical Core: 8
2023-04-28 19:12:17,747:INFO:Logical Core: 16
2023-04-28 19:12:17,747:INFO:Checking libraries
2023-04-28 19:12:17,747:INFO:System:
2023-04-28 19:12:17,747:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 19:12:17,747:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 19:12:17,747:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:12:17,748:INFO:PyCaret required dependencies:
2023-04-28 19:12:17,748:INFO:                 pip: 23.1.2
2023-04-28 19:12:17,748:INFO:          setuptools: 59.6.0
2023-04-28 19:12:17,748:INFO:             pycaret: 3.0.0
2023-04-28 19:12:17,748:INFO:             IPython: 8.12.0
2023-04-28 19:12:17,748:INFO:          ipywidgets: 8.0.6
2023-04-28 19:12:17,748:INFO:                tqdm: 4.65.0
2023-04-28 19:12:17,748:INFO:               numpy: 1.23.5
2023-04-28 19:12:17,748:INFO:              pandas: 1.5.3
2023-04-28 19:12:17,748:INFO:              jinja2: 3.1.2
2023-04-28 19:12:17,748:INFO:               scipy: 1.10.1
2023-04-28 19:12:17,748:INFO:              joblib: 1.2.0
2023-04-28 19:12:17,749:INFO:             sklearn: 1.2.2
2023-04-28 19:12:17,749:INFO:                pyod: 1.0.9
2023-04-28 19:12:17,749:INFO:            imblearn: 0.10.1
2023-04-28 19:12:17,749:INFO:   category_encoders: 2.6.0
2023-04-28 19:12:17,749:INFO:            lightgbm: 3.3.5
2023-04-28 19:12:17,749:INFO:               numba: 0.56.4
2023-04-28 19:12:17,749:INFO:            requests: 2.29.0
2023-04-28 19:12:17,749:INFO:          matplotlib: 3.7.1
2023-04-28 19:12:17,749:INFO:          scikitplot: 0.3.7
2023-04-28 19:12:17,749:INFO:         yellowbrick: 1.5
2023-04-28 19:12:17,749:INFO:              plotly: 5.14.1
2023-04-28 19:12:17,749:INFO:             kaleido: 0.2.1
2023-04-28 19:12:17,750:INFO:         statsmodels: 0.13.5
2023-04-28 19:12:17,750:INFO:              sktime: 0.17.2
2023-04-28 19:12:17,750:INFO:               tbats: 1.1.3
2023-04-28 19:12:17,750:INFO:            pmdarima: 2.0.3
2023-04-28 19:12:17,750:INFO:              psutil: 5.9.5
2023-04-28 19:12:17,750:INFO:PyCaret optional dependencies:
2023-04-28 19:12:17,750:INFO:                shap: Not installed
2023-04-28 19:12:17,750:INFO:           interpret: Not installed
2023-04-28 19:12:17,750:INFO:                umap: Not installed
2023-04-28 19:12:17,750:INFO:    pandas_profiling: Not installed
2023-04-28 19:12:17,750:INFO:  explainerdashboard: Not installed
2023-04-28 19:12:17,751:INFO:             autoviz: Not installed
2023-04-28 19:12:17,751:INFO:           fairlearn: Not installed
2023-04-28 19:12:17,751:INFO:             xgboost: Not installed
2023-04-28 19:12:17,751:INFO:            catboost: Not installed
2023-04-28 19:12:17,751:INFO:              kmodes: Not installed
2023-04-28 19:12:17,751:INFO:             mlxtend: Not installed
2023-04-28 19:12:17,751:INFO:       statsforecast: Not installed
2023-04-28 19:12:17,751:INFO:        tune_sklearn: Not installed
2023-04-28 19:12:17,751:INFO:                 ray: Not installed
2023-04-28 19:12:17,751:INFO:            hyperopt: Not installed
2023-04-28 19:12:17,751:INFO:              optuna: Not installed
2023-04-28 19:12:17,751:INFO:               skopt: Not installed
2023-04-28 19:12:17,751:INFO:              mlflow: Not installed
2023-04-28 19:12:17,752:INFO:              gradio: Not installed
2023-04-28 19:12:17,752:INFO:             fastapi: Not installed
2023-04-28 19:12:17,752:INFO:             uvicorn: Not installed
2023-04-28 19:12:17,752:INFO:              m2cgen: Not installed
2023-04-28 19:12:17,752:INFO:           evidently: Not installed
2023-04-28 19:12:17,752:INFO:               fugue: Not installed
2023-04-28 19:12:17,752:INFO:           streamlit: 1.21.0
2023-04-28 19:12:17,752:INFO:             prophet: Not installed
2023-04-28 19:12:17,752:INFO:None
2023-04-28 19:12:17,752:INFO:Set up data.
2023-04-28 19:12:17,767:INFO:Set up train/test split.
2023-04-28 19:12:17,774:INFO:Set up index.
2023-04-28 19:12:17,774:INFO:Set up folding strategy.
2023-04-28 19:12:17,775:INFO:Assigning column types.
2023-04-28 19:12:17,780:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 19:12:17,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:12:17,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:12:17,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:17,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:17,920:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:12:17,921:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:12:17,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:17,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:17,966:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 19:12:18,030:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:12:18,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:12:18,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,147:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 19:12:18,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:18,312:INFO:Preparing preprocessing pipeline...
2023-04-28 19:12:18,314:INFO:Set up label encoding.
2023-04-28 19:12:18,314:INFO:Set up simple imputation.
2023-04-28 19:12:18,318:INFO:Set up encoding of ordinal features.
2023-04-28 19:12:18,329:INFO:Set up encoding of categorical features.
2023-04-28 19:12:18,330:INFO:Set up column name cleaning.
2023-04-28 19:12:18,591:INFO:Finished creating preprocessing pipeline.
2023-04-28 19:12:18,745:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=1911,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 19:12:18,746:INFO:Creating final display dataframe.
2023-04-28 19:12:19,515:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     1911
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 35)
5        Transformed data shape              (3630, 102)
6   Transformed train set shape              (2541, 102)
7    Transformed test set shape              (1089, 102)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       17
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     71db
2023-04-28 19:12:19,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:19,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:19,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:19,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:12:19,726:INFO:setup() successfully completed in 2.02s...............
2023-04-28 19:12:19,789:INFO:Initializing create_model()
2023-04-28 19:12:19,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc41bfd80d0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 19:12:19,790:INFO:Checking exceptions
2023-04-28 19:12:19,809:INFO:Importing libraries
2023-04-28 19:12:19,810:INFO:Copying training dataset
2023-04-28 19:12:19,818:INFO:Defining folds
2023-04-28 19:12:19,818:INFO:Declaring metric variables
2023-04-28 19:12:19,825:INFO:Importing untrained model
2023-04-28 19:12:19,831:INFO:Decision Tree Classifier Imported successfully
2023-04-28 19:12:19,847:INFO:Starting cross validation
2023-04-28 19:12:19,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 19:12:23,106:INFO:Calculating mean and std
2023-04-28 19:12:23,108:INFO:Creating metrics dataframe
2023-04-28 19:12:23,120:INFO:Finalizing model
2023-04-28 19:12:23,600:INFO:Uploading results into container
2023-04-28 19:12:23,602:INFO:Uploading model into container now
2023-04-28 19:12:23,617:INFO:_master_model_container: 1
2023-04-28 19:12:23,618:INFO:_display_container: 2
2023-04-28 19:12:23,619:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1911, splitter='best')
2023-04-28 19:12:23,619:INFO:create_model() successfully completed......................................
2023-04-28 19:12:23,929:INFO:Initializing plot_model()
2023-04-28 19:12:23,929:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1911, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fc41bfd80d0>, system=True)
2023-04-28 19:12:23,930:INFO:Checking exceptions
2023-04-28 19:12:23,939:INFO:Preloading libraries
2023-04-28 19:12:23,940:INFO:Copying training dataset
2023-04-28 19:12:23,940:INFO:Plot type: confusion_matrix
2023-04-28 19:12:24,057:INFO:Fitting Model
2023-04-28 19:12:24,057:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:12:24,057:INFO:Scoring test/hold-out set
2023-04-28 19:12:24,207:INFO:Visual Rendered Successfully
2023-04-28 19:12:24,399:INFO:plot_model() successfully completed......................................
2023-04-28 19:13:07,003:INFO:Initializing save_model()
2023-04-28 19:13:07,003:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1911, splitter='best'), model_name=saved_dt_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             "Mother's occupation",
                                             "Father's occupation"],
                                    transformer=LeaveOneOutEncoder(cols=[],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=1911,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-28 19:13:07,003:INFO:Adding model into prep_pipe
2023-04-28 19:13:07,023:INFO:saved_dt_model.pkl saved in current working directory
2023-04-28 19:13:07,156:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=1911, splitter='best'))],
         verbose=False)
2023-04-28 19:13:07,156:INFO:save_model() successfully completed......................................
2023-04-28 19:26:36,405:INFO:PyCaret ClassificationExperiment
2023-04-28 19:26:36,405:INFO:Logging name: clf-default-name
2023-04-28 19:26:36,405:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 19:26:36,405:INFO:version 3.0.0
2023-04-28 19:26:36,405:INFO:Initializing setup()
2023-04-28 19:26:36,405:INFO:self.USI: 265a
2023-04-28 19:26:36,406:INFO:self._variable_keys: {'fold_shuffle_param', 'data', 'gpu_param', 'fold_generator', 'y', 'logging_param', 'idx', 'X', 'fold_groups_param', 'USI', 'y_test', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'y_train', 'html_param', 'log_plots_param', 'target_param', 'exp_id', 'memory', 'exp_name_log', 'seed', '_available_plots', 'X_test', 'X_train', '_ml_usecase', 'n_jobs_param', 'is_multiclass'}
2023-04-28 19:26:36,406:INFO:Checking environment
2023-04-28 19:26:36,406:INFO:python_version: 3.10.6
2023-04-28 19:26:36,406:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 19:26:36,406:INFO:machine: x86_64
2023-04-28 19:26:36,406:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:26:36,406:INFO:Memory: svmem(total=26859122688, available=22714757120, percent=15.4, used=3723288576, free=5118935040, active=4396937216, inactive=15931183104, buffers=796233728, cached=17220665344, shared=1888256, slab=1187991552)
2023-04-28 19:26:36,407:INFO:Physical Core: 8
2023-04-28 19:26:36,407:INFO:Logical Core: 16
2023-04-28 19:26:36,407:INFO:Checking libraries
2023-04-28 19:26:36,407:INFO:System:
2023-04-28 19:26:36,407:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 19:26:36,408:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 19:26:36,408:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:26:36,408:INFO:PyCaret required dependencies:
2023-04-28 19:26:36,408:INFO:                 pip: 23.1.2
2023-04-28 19:26:36,408:INFO:          setuptools: 59.6.0
2023-04-28 19:26:36,408:INFO:             pycaret: 3.0.0
2023-04-28 19:26:36,408:INFO:             IPython: 8.12.0
2023-04-28 19:26:36,408:INFO:          ipywidgets: 8.0.6
2023-04-28 19:26:36,408:INFO:                tqdm: 4.65.0
2023-04-28 19:26:36,408:INFO:               numpy: 1.23.5
2023-04-28 19:26:36,408:INFO:              pandas: 1.5.3
2023-04-28 19:26:36,408:INFO:              jinja2: 3.1.2
2023-04-28 19:26:36,409:INFO:               scipy: 1.10.1
2023-04-28 19:26:36,409:INFO:              joblib: 1.2.0
2023-04-28 19:26:36,409:INFO:             sklearn: 1.2.2
2023-04-28 19:26:36,409:INFO:                pyod: 1.0.9
2023-04-28 19:26:36,409:INFO:            imblearn: 0.10.1
2023-04-28 19:26:36,409:INFO:   category_encoders: 2.6.0
2023-04-28 19:26:36,409:INFO:            lightgbm: 3.3.5
2023-04-28 19:26:36,409:INFO:               numba: 0.56.4
2023-04-28 19:26:36,409:INFO:            requests: 2.29.0
2023-04-28 19:26:36,409:INFO:          matplotlib: 3.7.1
2023-04-28 19:26:36,409:INFO:          scikitplot: 0.3.7
2023-04-28 19:26:36,410:INFO:         yellowbrick: 1.5
2023-04-28 19:26:36,410:INFO:              plotly: 5.14.1
2023-04-28 19:26:36,410:INFO:             kaleido: 0.2.1
2023-04-28 19:26:36,410:INFO:         statsmodels: 0.13.5
2023-04-28 19:26:36,410:INFO:              sktime: 0.17.2
2023-04-28 19:26:36,410:INFO:               tbats: 1.1.3
2023-04-28 19:26:36,410:INFO:            pmdarima: 2.0.3
2023-04-28 19:26:36,410:INFO:              psutil: 5.9.5
2023-04-28 19:26:36,410:INFO:PyCaret optional dependencies:
2023-04-28 19:26:36,410:INFO:                shap: Not installed
2023-04-28 19:26:36,410:INFO:           interpret: Not installed
2023-04-28 19:26:36,410:INFO:                umap: Not installed
2023-04-28 19:26:36,410:INFO:    pandas_profiling: Not installed
2023-04-28 19:26:36,411:INFO:  explainerdashboard: Not installed
2023-04-28 19:26:36,411:INFO:             autoviz: Not installed
2023-04-28 19:26:36,411:INFO:           fairlearn: Not installed
2023-04-28 19:26:36,411:INFO:             xgboost: Not installed
2023-04-28 19:26:36,411:INFO:            catboost: Not installed
2023-04-28 19:26:36,411:INFO:              kmodes: Not installed
2023-04-28 19:26:36,411:INFO:             mlxtend: Not installed
2023-04-28 19:26:36,411:INFO:       statsforecast: Not installed
2023-04-28 19:26:36,411:INFO:        tune_sklearn: Not installed
2023-04-28 19:26:36,411:INFO:                 ray: Not installed
2023-04-28 19:26:36,411:INFO:            hyperopt: Not installed
2023-04-28 19:26:36,412:INFO:              optuna: Not installed
2023-04-28 19:26:36,412:INFO:               skopt: Not installed
2023-04-28 19:26:36,412:INFO:              mlflow: Not installed
2023-04-28 19:26:36,412:INFO:              gradio: Not installed
2023-04-28 19:26:36,412:INFO:             fastapi: Not installed
2023-04-28 19:26:36,412:INFO:             uvicorn: Not installed
2023-04-28 19:26:36,412:INFO:              m2cgen: Not installed
2023-04-28 19:26:36,412:INFO:           evidently: Not installed
2023-04-28 19:26:36,412:INFO:               fugue: Not installed
2023-04-28 19:26:36,412:INFO:           streamlit: 1.21.0
2023-04-28 19:26:36,412:INFO:             prophet: Not installed
2023-04-28 19:26:36,412:INFO:None
2023-04-28 19:26:36,412:INFO:Set up data.
2023-04-28 19:26:36,425:INFO:Set up train/test split.
2023-04-28 19:26:36,432:INFO:Set up index.
2023-04-28 19:26:36,433:INFO:Set up folding strategy.
2023-04-28 19:26:36,433:INFO:Assigning column types.
2023-04-28 19:28:35,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:28:35,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:28:35,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:28:35,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 19:28:35,872:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-28 19:28:43,337:INFO:PyCaret ClassificationExperiment
2023-04-28 19:28:43,337:INFO:Logging name: clf-default-name
2023-04-28 19:28:43,337:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 19:28:43,337:INFO:version 3.0.0
2023-04-28 19:28:43,338:INFO:Initializing setup()
2023-04-28 19:28:43,338:INFO:self.USI: 5307
2023-04-28 19:28:43,338:INFO:self._variable_keys: {'logging_param', 'target_param', 'X', 'is_multiclass', 'n_jobs_param', 'memory', 'exp_name_log', '_available_plots', 'gpu_n_jobs_param', 'gpu_param', 'html_param', 'fix_imbalance', 'y_test', 'X_train', 'y_train', 'X_test', 'data', 'fold_groups_param', 'seed', '_ml_usecase', 'fold_shuffle_param', 'exp_id', 'idx', 'pipeline', 'USI', 'fold_generator', 'y', 'log_plots_param'}
2023-04-28 19:28:43,338:INFO:Checking environment
2023-04-28 19:28:43,338:INFO:python_version: 3.10.6
2023-04-28 19:28:43,338:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 19:28:43,338:INFO:machine: x86_64
2023-04-28 19:28:43,338:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:28:43,338:INFO:Memory: svmem(total=26859122688, available=22856966144, percent=14.9, used=3581083648, free=5259243520, active=4431482880, inactive=15759499264, buffers=796946432, cached=17221849088, shared=1875968, slab=1187811328)
2023-04-28 19:28:43,339:INFO:Physical Core: 8
2023-04-28 19:28:43,339:INFO:Logical Core: 16
2023-04-28 19:28:43,339:INFO:Checking libraries
2023-04-28 19:28:43,339:INFO:System:
2023-04-28 19:28:43,340:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 19:28:43,340:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 19:28:43,340:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 19:28:43,340:INFO:PyCaret required dependencies:
2023-04-28 19:28:43,340:INFO:                 pip: 23.1.2
2023-04-28 19:28:43,340:INFO:          setuptools: 59.6.0
2023-04-28 19:28:43,340:INFO:             pycaret: 3.0.0
2023-04-28 19:28:43,340:INFO:             IPython: 8.12.0
2023-04-28 19:28:43,340:INFO:          ipywidgets: 8.0.6
2023-04-28 19:28:43,340:INFO:                tqdm: 4.65.0
2023-04-28 19:28:43,340:INFO:               numpy: 1.23.5
2023-04-28 19:28:43,340:INFO:              pandas: 1.5.3
2023-04-28 19:28:43,341:INFO:              jinja2: 3.1.2
2023-04-28 19:28:43,341:INFO:               scipy: 1.10.1
2023-04-28 19:28:43,341:INFO:              joblib: 1.2.0
2023-04-28 19:28:43,341:INFO:             sklearn: 1.2.2
2023-04-28 19:28:43,341:INFO:                pyod: 1.0.9
2023-04-28 19:28:43,341:INFO:            imblearn: 0.10.1
2023-04-28 19:28:43,341:INFO:   category_encoders: 2.6.0
2023-04-28 19:28:43,341:INFO:            lightgbm: 3.3.5
2023-04-28 19:28:43,341:INFO:               numba: 0.56.4
2023-04-28 19:28:43,341:INFO:            requests: 2.29.0
2023-04-28 19:28:43,341:INFO:          matplotlib: 3.7.1
2023-04-28 19:28:43,341:INFO:          scikitplot: 0.3.7
2023-04-28 19:28:43,341:INFO:         yellowbrick: 1.5
2023-04-28 19:28:43,342:INFO:              plotly: 5.14.1
2023-04-28 19:28:43,342:INFO:             kaleido: 0.2.1
2023-04-28 19:28:43,342:INFO:         statsmodels: 0.13.5
2023-04-28 19:28:43,342:INFO:              sktime: 0.17.2
2023-04-28 19:28:43,342:INFO:               tbats: 1.1.3
2023-04-28 19:28:43,342:INFO:            pmdarima: 2.0.3
2023-04-28 19:28:43,342:INFO:              psutil: 5.9.5
2023-04-28 19:28:43,342:INFO:PyCaret optional dependencies:
2023-04-28 19:28:43,376:INFO:                shap: Not installed
2023-04-28 19:28:43,376:INFO:           interpret: Not installed
2023-04-28 19:28:43,376:INFO:                umap: Not installed
2023-04-28 19:28:43,376:INFO:    pandas_profiling: Not installed
2023-04-28 19:28:43,376:INFO:  explainerdashboard: Not installed
2023-04-28 19:28:43,376:INFO:             autoviz: Not installed
2023-04-28 19:28:43,376:INFO:           fairlearn: Not installed
2023-04-28 19:28:43,377:INFO:             xgboost: Not installed
2023-04-28 19:28:43,377:INFO:            catboost: Not installed
2023-04-28 19:28:43,377:INFO:              kmodes: Not installed
2023-04-28 19:28:43,377:INFO:             mlxtend: Not installed
2023-04-28 19:28:43,377:INFO:       statsforecast: Not installed
2023-04-28 19:28:43,377:INFO:        tune_sklearn: Not installed
2023-04-28 19:28:43,377:INFO:                 ray: Not installed
2023-04-28 19:28:43,377:INFO:            hyperopt: Not installed
2023-04-28 19:28:43,377:INFO:              optuna: Not installed
2023-04-28 19:28:43,377:INFO:               skopt: Not installed
2023-04-28 19:28:43,377:INFO:              mlflow: Not installed
2023-04-28 19:28:43,378:INFO:              gradio: Not installed
2023-04-28 19:28:43,378:INFO:             fastapi: Not installed
2023-04-28 19:28:43,378:INFO:             uvicorn: Not installed
2023-04-28 19:28:43,378:INFO:              m2cgen: Not installed
2023-04-28 19:28:43,378:INFO:           evidently: Not installed
2023-04-28 19:28:43,378:INFO:               fugue: Not installed
2023-04-28 19:28:43,378:INFO:           streamlit: 1.21.0
2023-04-28 19:28:43,378:INFO:             prophet: Not installed
2023-04-28 19:28:43,379:INFO:None
2023-04-28 19:28:43,379:INFO:Set up data.
2023-04-28 19:28:43,392:INFO:Set up train/test split.
2023-04-28 19:28:43,403:INFO:Set up index.
2023-04-28 19:28:43,403:INFO:Set up folding strategy.
2023-04-28 19:28:43,403:INFO:Assigning column types.
2023-04-28 19:28:43,410:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 19:28:43,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,555:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,556:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 19:28:43,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 19:28:43,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,753:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 19:28:43,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:43,926:INFO:Preparing preprocessing pipeline...
2023-04-28 19:28:43,927:INFO:Set up label encoding.
2023-04-28 19:28:43,927:INFO:Set up simple imputation.
2023-04-28 19:28:43,931:INFO:Set up encoding of ordinal features.
2023-04-28 19:28:43,942:INFO:Set up encoding of categorical features.
2023-04-28 19:28:43,943:INFO:Set up column name cleaning.
2023-04-28 19:28:44,157:INFO:Finished creating preprocessing pipeline.
2023-04-28 19:28:44,299:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 19:28:44,299:INFO:Creating final display dataframe.
2023-04-28 19:28:44,722:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     3616
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 29)
5        Transformed data shape               (3630, 65)
6   Transformed train set shape               (2541, 65)
7    Transformed test set shape               (1089, 65)
8              Ordinal features                        8
9              Numeric features                       17
10         Categorical features                       11
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     5307
2023-04-28 19:28:44,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:44,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:44,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:44,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 19:28:44,896:INFO:setup() successfully completed in 1.61s...............
2023-04-28 19:28:47,544:INFO:Initializing create_model()
2023-04-28 19:28:47,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e0e4e410>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 19:28:47,545:INFO:Checking exceptions
2023-04-28 19:28:47,568:INFO:Importing libraries
2023-04-28 19:28:47,568:INFO:Copying training dataset
2023-04-28 19:28:47,574:INFO:Defining folds
2023-04-28 19:28:47,574:INFO:Declaring metric variables
2023-04-28 19:28:47,578:INFO:Importing untrained model
2023-04-28 19:28:47,583:INFO:Decision Tree Classifier Imported successfully
2023-04-28 19:28:47,593:INFO:Starting cross validation
2023-04-28 19:28:47,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 19:28:52,230:INFO:Calculating mean and std
2023-04-28 19:28:52,233:INFO:Creating metrics dataframe
2023-04-28 19:28:52,245:INFO:Finalizing model
2023-04-28 19:28:52,732:INFO:Uploading results into container
2023-04-28 19:28:52,734:INFO:Uploading model into container now
2023-04-28 19:28:52,752:INFO:_master_model_container: 1
2023-04-28 19:28:52,753:INFO:_display_container: 2
2023-04-28 19:28:52,753:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3616, splitter='best')
2023-04-28 19:28:52,754:INFO:create_model() successfully completed......................................
2023-04-28 19:28:54,458:INFO:Initializing plot_model()
2023-04-28 19:28:54,458:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3616, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e0e4e410>, system=True)
2023-04-28 19:28:54,459:INFO:Checking exceptions
2023-04-28 19:28:54,467:INFO:Preloading libraries
2023-04-28 19:28:54,468:INFO:Copying training dataset
2023-04-28 19:28:54,468:INFO:Plot type: confusion_matrix
2023-04-28 19:28:54,864:INFO:Fitting Model
2023-04-28 19:28:54,865:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 19:28:54,865:INFO:Scoring test/hold-out set
2023-04-28 19:28:55,055:INFO:Visual Rendered Successfully
2023-04-28 19:28:55,239:INFO:plot_model() successfully completed......................................
2023-04-28 19:28:58,626:INFO:Initializing save_model()
2023-04-28 19:28:58,627:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3616, splitter='best'), model_name=saved_dt_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-28 19:28:58,627:INFO:Adding model into prep_pipe
2023-04-28 19:28:58,641:INFO:saved_dt_model.pkl saved in current working directory
2023-04-28 19:28:58,794:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Application order',
                                             'Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(credited)',
                                             'Curricular units 1st sem '
                                             '(enrolled)',
                                             'Curricular units 1st s...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=3616, splitter='best'))],
         verbose=False)
2023-04-28 19:28:58,794:INFO:save_model() successfully completed......................................
2023-04-28 20:04:43,211:WARNING:/tmp/ipykernel_6072/1144512015.py:7: RuntimeWarning: invalid value encountered in double_scalars
  print(psdas_df['Curricular units 1st sem (grade)'][idx]/psdas_df['Curricular units 1st sem (approved)'][idx])

2023-04-28 20:22:36,797:INFO:PyCaret ClassificationExperiment
2023-04-28 20:22:36,797:INFO:Logging name: clf-default-name
2023-04-28 20:22:36,797:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 20:22:36,797:INFO:version 3.0.0
2023-04-28 20:22:36,797:INFO:Initializing setup()
2023-04-28 20:22:36,797:INFO:self.USI: e65e
2023-04-28 20:22:36,798:INFO:self._variable_keys: {'logging_param', 'target_param', 'X', 'is_multiclass', 'n_jobs_param', 'memory', 'exp_name_log', '_available_plots', 'gpu_n_jobs_param', 'gpu_param', 'html_param', 'fix_imbalance', 'y_test', 'X_train', 'y_train', 'X_test', 'data', 'fold_groups_param', 'seed', '_ml_usecase', 'fold_shuffle_param', 'exp_id', 'idx', 'pipeline', 'USI', 'fold_generator', 'y', 'log_plots_param'}
2023-04-28 20:22:36,798:INFO:Checking environment
2023-04-28 20:22:36,798:INFO:python_version: 3.10.6
2023-04-28 20:22:36,798:INFO:python_build: ('main', 'Mar 10 2023 10:55:28')
2023-04-28 20:22:36,799:INFO:machine: x86_64
2023-04-28 20:22:36,799:INFO:platform: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 20:22:36,800:INFO:Memory: svmem(total=26859122688, available=22698045440, percent=15.5, used=3739611136, free=5064495104, active=4481576960, inactive=15899078656, buffers=813256704, cached=17241759744, shared=2277376, slab=1195020288)
2023-04-28 20:22:36,802:INFO:Physical Core: 8
2023-04-28 20:22:36,803:INFO:Logical Core: 16
2023-04-28 20:22:36,803:INFO:Checking libraries
2023-04-28 20:22:36,803:INFO:System:
2023-04-28 20:22:36,803:INFO:    python: 3.10.6 (main, Mar 10 2023, 10:55:28) [GCC 11.3.0]
2023-04-28 20:22:36,803:INFO:executable: /workspaces/ITCS-4122-Team-19/.venv/bin/python
2023-04-28 20:22:36,803:INFO:   machine: Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
2023-04-28 20:22:36,803:INFO:PyCaret required dependencies:
2023-04-28 20:22:36,804:INFO:                 pip: 23.1.2
2023-04-28 20:22:36,804:INFO:          setuptools: 59.6.0
2023-04-28 20:22:36,804:INFO:             pycaret: 3.0.0
2023-04-28 20:22:36,805:INFO:             IPython: 8.12.0
2023-04-28 20:22:36,805:INFO:          ipywidgets: 8.0.6
2023-04-28 20:22:36,805:INFO:                tqdm: 4.65.0
2023-04-28 20:22:36,805:INFO:               numpy: 1.23.5
2023-04-28 20:22:36,805:INFO:              pandas: 1.5.3
2023-04-28 20:22:36,805:INFO:              jinja2: 3.1.2
2023-04-28 20:22:36,805:INFO:               scipy: 1.10.1
2023-04-28 20:22:36,805:INFO:              joblib: 1.2.0
2023-04-28 20:22:36,805:INFO:             sklearn: 1.2.2
2023-04-28 20:22:36,805:INFO:                pyod: 1.0.9
2023-04-28 20:22:36,805:INFO:            imblearn: 0.10.1
2023-04-28 20:22:36,805:INFO:   category_encoders: 2.6.0
2023-04-28 20:22:36,805:INFO:            lightgbm: 3.3.5
2023-04-28 20:22:36,806:INFO:               numba: 0.56.4
2023-04-28 20:22:36,806:INFO:            requests: 2.29.0
2023-04-28 20:22:36,806:INFO:          matplotlib: 3.7.1
2023-04-28 20:22:36,806:INFO:          scikitplot: 0.3.7
2023-04-28 20:22:36,806:INFO:         yellowbrick: 1.5
2023-04-28 20:22:36,806:INFO:              plotly: 5.14.1
2023-04-28 20:22:36,806:INFO:             kaleido: 0.2.1
2023-04-28 20:22:36,806:INFO:         statsmodels: 0.13.5
2023-04-28 20:22:36,806:INFO:              sktime: 0.17.2
2023-04-28 20:22:36,806:INFO:               tbats: 1.1.3
2023-04-28 20:22:36,806:INFO:            pmdarima: 2.0.3
2023-04-28 20:22:36,806:INFO:              psutil: 5.9.5
2023-04-28 20:22:36,806:INFO:PyCaret optional dependencies:
2023-04-28 20:22:36,807:INFO:                shap: Not installed
2023-04-28 20:22:36,807:INFO:           interpret: Not installed
2023-04-28 20:22:36,807:INFO:                umap: Not installed
2023-04-28 20:22:36,807:INFO:    pandas_profiling: Not installed
2023-04-28 20:22:36,807:INFO:  explainerdashboard: Not installed
2023-04-28 20:22:36,807:INFO:             autoviz: Not installed
2023-04-28 20:22:36,807:INFO:           fairlearn: Not installed
2023-04-28 20:22:36,807:INFO:             xgboost: Not installed
2023-04-28 20:22:36,807:INFO:            catboost: Not installed
2023-04-28 20:22:36,807:INFO:              kmodes: Not installed
2023-04-28 20:22:36,808:INFO:             mlxtend: Not installed
2023-04-28 20:22:36,808:INFO:       statsforecast: Not installed
2023-04-28 20:22:36,808:INFO:        tune_sklearn: Not installed
2023-04-28 20:22:36,808:INFO:                 ray: Not installed
2023-04-28 20:22:36,808:INFO:            hyperopt: Not installed
2023-04-28 20:22:36,808:INFO:              optuna: Not installed
2023-04-28 20:22:36,808:INFO:               skopt: Not installed
2023-04-28 20:22:36,808:INFO:              mlflow: Not installed
2023-04-28 20:22:36,808:INFO:              gradio: Not installed
2023-04-28 20:22:36,808:INFO:             fastapi: Not installed
2023-04-28 20:22:36,808:INFO:             uvicorn: Not installed
2023-04-28 20:22:36,808:INFO:              m2cgen: Not installed
2023-04-28 20:22:36,809:INFO:           evidently: Not installed
2023-04-28 20:22:36,809:INFO:               fugue: Not installed
2023-04-28 20:22:36,809:INFO:           streamlit: 1.21.0
2023-04-28 20:22:36,809:INFO:             prophet: Not installed
2023-04-28 20:22:36,809:INFO:None
2023-04-28 20:22:36,809:INFO:Set up data.
2023-04-28 20:22:36,829:INFO:Set up train/test split.
2023-04-28 20:22:36,843:INFO:Set up index.
2023-04-28 20:22:36,843:INFO:Set up folding strategy.
2023-04-28 20:22:36,844:INFO:Assigning column types.
2023-04-28 20:22:36,849:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 20:22:36,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 20:22:36,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:22:36,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:36,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 20:22:37,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:22:37,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,031:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 20:22:37,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:22:37,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:22:37,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,194:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 20:22:37,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:37,357:INFO:Preparing preprocessing pipeline...
2023-04-28 20:22:37,359:INFO:Set up label encoding.
2023-04-28 20:22:37,360:INFO:Set up simple imputation.
2023-04-28 20:22:37,366:INFO:Set up encoding of ordinal features.
2023-04-28 20:22:37,376:INFO:Set up encoding of categorical features.
2023-04-28 20:22:37,377:INFO:Set up column name cleaning.
2023-04-28 20:22:37,642:INFO:Finished creating preprocessing pipeline.
2023-04-28 20:22:37,773:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 20:22:37,773:INFO:Creating final display dataframe.
2023-04-28 20:22:38,188:INFO:Setup _display_container:                     Description                    Value
0                    Session id                      505
1                        Target                   Target
2                   Target type                   Binary
3                Target mapping  Dropout: 0, Graduate: 1
4           Original data shape               (3630, 18)
5        Transformed data shape               (3630, 54)
6   Transformed train set shape               (2541, 54)
7    Transformed test set shape               (1089, 54)
8              Ordinal features                        8
9              Numeric features                        6
10         Categorical features                       11
11                   Preprocess                     True
12              Imputation type                   simple
13           Numeric imputation                     mean
14       Categorical imputation                     mode
15     Maximum one-hot encoding                       25
16              Encoding method                     None
17               Fold Generator          StratifiedKFold
18                  Fold Number                       10
19                     CPU Jobs                       -1
20                      Use GPU                    False
21               Log Experiment                    False
22              Experiment Name         clf-default-name
23                          USI                     e65e
2023-04-28 20:22:38,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:38,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:38,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:38,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:22:38,392:INFO:setup() successfully completed in 1.77s...............
2023-04-28 20:22:39,741:INFO:Initializing create_model()
2023-04-28 20:22:39,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:22:39,742:INFO:Checking exceptions
2023-04-28 20:22:39,774:INFO:Importing libraries
2023-04-28 20:22:39,774:INFO:Copying training dataset
2023-04-28 20:22:39,782:INFO:Defining folds
2023-04-28 20:22:39,783:INFO:Declaring metric variables
2023-04-28 20:22:39,789:INFO:Importing untrained model
2023-04-28 20:22:39,794:INFO:Decision Tree Classifier Imported successfully
2023-04-28 20:22:39,809:INFO:Starting cross validation
2023-04-28 20:22:39,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:22:44,851:INFO:Calculating mean and std
2023-04-28 20:22:44,854:INFO:Creating metrics dataframe
2023-04-28 20:22:44,871:INFO:Finalizing model
2023-04-28 20:22:45,409:INFO:Uploading results into container
2023-04-28 20:22:45,410:INFO:Uploading model into container now
2023-04-28 20:22:45,430:INFO:_master_model_container: 1
2023-04-28 20:22:45,431:INFO:_display_container: 2
2023-04-28 20:22:45,432:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best')
2023-04-28 20:22:45,433:INFO:create_model() successfully completed......................................
2023-04-28 20:22:48,784:INFO:Initializing plot_model()
2023-04-28 20:22:48,785:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, system=True)
2023-04-28 20:22:48,785:INFO:Checking exceptions
2023-04-28 20:22:48,796:INFO:Preloading libraries
2023-04-28 20:22:48,797:INFO:Copying training dataset
2023-04-28 20:22:48,797:INFO:Plot type: confusion_matrix
2023-04-28 20:22:49,305:INFO:Fitting Model
2023-04-28 20:22:49,305:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-04-28 20:22:49,305:INFO:Scoring test/hold-out set
2023-04-28 20:22:49,521:INFO:Visual Rendered Successfully
2023-04-28 20:22:49,743:INFO:plot_model() successfully completed......................................
2023-04-28 20:22:52,393:INFO:Initializing save_model()
2023-04-28 20:22:52,393:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), model_name=saved_dt_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-28 20:22:52,393:INFO:Adding model into prep_pipe
2023-04-28 20:22:52,408:INFO:saved_dt_model.pkl saved in current working directory
2023-04-28 20:22:52,540:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:22:52,540:INFO:save_model() successfully completed......................................
2023-04-28 20:28:33,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:28:33,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:28:33,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:28:33,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:28:33,892:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-28 20:35:04,987:INFO:Initializing load_model()
2023-04-28 20:35:04,988:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:13,330:INFO:Initializing load_model()
2023-04-28 20:38:13,330:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:15,930:INFO:Initializing load_model()
2023-04-28 20:38:15,930:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:18,317:INFO:Initializing load_model()
2023-04-28 20:38:18,317:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:20,459:INFO:Initializing load_model()
2023-04-28 20:38:20,459:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:21,565:INFO:Initializing load_model()
2023-04-28 20:38:21,565:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:28,289:INFO:Initializing load_model()
2023-04-28 20:38:28,290:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:29,524:INFO:Initializing load_model()
2023-04-28 20:38:29,525:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:30,615:INFO:Initializing load_model()
2023-04-28 20:38:30,617:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:32,573:INFO:Initializing load_model()
2023-04-28 20:38:32,573:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:38:53,785:INFO:Initializing load_model()
2023-04-28 20:38:53,786:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:40:49,625:INFO:Initializing finalize_model()
2023-04-28 20:40:49,626:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-04-28 20:40:49,627:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best')
2023-04-28 20:40:49,633:INFO:Initializing create_model()
2023-04-28 20:40:49,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-04-28 20:40:49,633:INFO:Checking exceptions
2023-04-28 20:40:49,636:INFO:Importing libraries
2023-04-28 20:40:49,637:INFO:Copying training dataset
2023-04-28 20:40:49,637:INFO:Defining folds
2023-04-28 20:40:49,637:INFO:Declaring metric variables
2023-04-28 20:40:49,637:INFO:Importing untrained model
2023-04-28 20:40:49,638:INFO:Declaring custom model
2023-04-28 20:40:49,638:INFO:Decision Tree Classifier Imported successfully
2023-04-28 20:40:49,641:INFO:Cross validation set to False
2023-04-28 20:40:49,641:INFO:Fitting Model
2023-04-28 20:40:50,006:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:40:50,006:INFO:create_model() successfully completed......................................
2023-04-28 20:40:50,180:INFO:_master_model_container: 1
2023-04-28 20:40:50,180:INFO:_display_container: 2
2023-04-28 20:40:50,326:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:40:50,326:INFO:finalize_model() successfully completed......................................
2023-04-28 20:40:50,730:INFO:Initializing save_model()
2023-04-28 20:40:50,731:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), model_name=saved_dt_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-28 20:40:50,731:INFO:Adding model into prep_pipe
2023-04-28 20:40:50,749:INFO:saved_dt_model.pkl saved in current working directory
2023-04-28 20:40:50,914:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:40:50,915:INFO:save_model() successfully completed......................................
2023-04-28 20:41:09,044:INFO:Initializing load_model()
2023-04-28 20:41:09,044:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:09,943:INFO:Initializing load_model()
2023-04-28 20:41:09,943:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:11,408:INFO:Initializing load_model()
2023-04-28 20:41:11,409:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:12,503:INFO:Initializing load_model()
2023-04-28 20:41:12,503:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:13,988:INFO:Initializing load_model()
2023-04-28 20:41:13,989:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:15,096:INFO:Initializing load_model()
2023-04-28 20:41:15,096:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:41:16,635:INFO:Initializing load_model()
2023-04-28 20:41:16,635:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:43:55,281:INFO:Initializing finalize_model()
2023-04-28 20:43:55,281:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-04-28 20:43:55,282:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best')
2023-04-28 20:43:55,286:INFO:Initializing create_model()
2023-04-28 20:43:55,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-04-28 20:43:55,286:INFO:Checking exceptions
2023-04-28 20:43:55,289:INFO:Importing libraries
2023-04-28 20:43:55,289:INFO:Copying training dataset
2023-04-28 20:43:55,290:INFO:Defining folds
2023-04-28 20:43:55,290:INFO:Declaring metric variables
2023-04-28 20:43:55,291:INFO:Importing untrained model
2023-04-28 20:43:55,291:INFO:Declaring custom model
2023-04-28 20:43:55,292:INFO:Decision Tree Classifier Imported successfully
2023-04-28 20:43:55,294:INFO:Cross validation set to False
2023-04-28 20:43:55,294:INFO:Fitting Model
2023-04-28 20:43:55,710:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:43:55,710:INFO:create_model() successfully completed......................................
2023-04-28 20:43:55,894:INFO:_master_model_container: 1
2023-04-28 20:43:55,894:INFO:_display_container: 2
2023-04-28 20:43:56,035:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:43:56,035:INFO:finalize_model() successfully completed......................................
2023-04-28 20:44:04,421:INFO:Initializing finalize_model()
2023-04-28 20:44:04,422:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-04-28 20:44:04,422:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best')
2023-04-28 20:44:04,432:INFO:Initializing create_model()
2023-04-28 20:44:04,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f54e01f8460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-04-28 20:44:04,434:INFO:Checking exceptions
2023-04-28 20:44:04,437:INFO:Importing libraries
2023-04-28 20:44:04,437:INFO:Copying training dataset
2023-04-28 20:44:04,438:INFO:Defining folds
2023-04-28 20:44:04,438:INFO:Declaring metric variables
2023-04-28 20:44:04,439:INFO:Importing untrained model
2023-04-28 20:44:04,439:INFO:Declaring custom model
2023-04-28 20:44:04,440:INFO:Decision Tree Classifier Imported successfully
2023-04-28 20:44:04,443:INFO:Cross validation set to False
2023-04-28 20:44:04,443:INFO:Fitting Model
2023-04-28 20:44:04,825:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:44:04,825:INFO:create_model() successfully completed......................................
2023-04-28 20:44:05,026:INFO:_master_model_container: 1
2023-04-28 20:44:05,026:INFO:_display_container: 2
2023-04-28 20:44:05,173:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:44:05,173:INFO:finalize_model() successfully completed......................................
2023-04-28 20:44:05,540:INFO:Initializing save_model()
2023-04-28 20:44:05,541:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=505, splitter='best'), model_name=saved_dt_model, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-28 20:44:05,541:INFO:Adding model into prep_pipe
2023-04-28 20:44:05,556:INFO:saved_dt_model.pkl saved in current working directory
2023-04-28 20:44:05,705:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=505, splitter='best'))],
         verbose=False)
2023-04-28 20:44:05,705:INFO:save_model() successfully completed......................................
2023-04-28 20:44:21,353:INFO:Initializing load_model()
2023-04-28 20:44:21,354:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:45:55,983:INFO:Initializing load_model()
2023-04-28 20:45:55,984:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:46:01,956:INFO:Initializing load_model()
2023-04-28 20:46:01,956:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:46:11,387:INFO:Initializing load_model()
2023-04-28 20:46:11,389:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:06,588:INFO:Initializing load_model()
2023-04-28 20:47:06,589:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:06,824:INFO:Initializing predict_model()
2023-04-28 20:47:06,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:47:06,825:INFO:Checking exceptions
2023-04-28 20:47:06,825:INFO:Preloading libraries
2023-04-28 20:47:06,826:INFO:Set up data.
2023-04-28 20:47:06,834:INFO:Set up index.
2023-04-28 20:47:22,444:INFO:Initializing load_model()
2023-04-28 20:47:22,445:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:22,648:INFO:Initializing predict_model()
2023-04-28 20:47:22,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b030550>)
2023-04-28 20:47:22,649:INFO:Checking exceptions
2023-04-28 20:47:22,650:INFO:Preloading libraries
2023-04-28 20:47:22,650:INFO:Set up data.
2023-04-28 20:47:22,658:INFO:Set up index.
2023-04-28 20:47:43,307:INFO:Initializing load_model()
2023-04-28 20:47:43,309:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:43,571:INFO:Initializing predict_model()
2023-04-28 20:47:43,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9ab0>)
2023-04-28 20:47:43,571:INFO:Checking exceptions
2023-04-28 20:47:43,572:INFO:Preloading libraries
2023-04-28 20:47:43,572:INFO:Set up data.
2023-04-28 20:47:43,580:INFO:Set up index.
2023-04-28 20:47:47,701:INFO:Initializing load_model()
2023-04-28 20:47:47,703:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:47,967:INFO:Initializing predict_model()
2023-04-28 20:47:47,967:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9bd0>)
2023-04-28 20:47:47,968:INFO:Checking exceptions
2023-04-28 20:47:47,969:INFO:Preloading libraries
2023-04-28 20:47:47,970:INFO:Set up data.
2023-04-28 20:47:47,979:INFO:Set up index.
2023-04-28 20:47:50,971:INFO:Initializing load_model()
2023-04-28 20:47:50,973:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:47:51,554:INFO:Initializing predict_model()
2023-04-28 20:47:51,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0b2a70>)
2023-04-28 20:47:51,555:INFO:Checking exceptions
2023-04-28 20:47:51,556:INFO:Preloading libraries
2023-04-28 20:47:51,556:INFO:Set up data.
2023-04-28 20:47:51,569:INFO:Set up index.
2023-04-28 20:48:17,782:INFO:Initializing load_model()
2023-04-28 20:48:17,783:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:48:18,001:INFO:Initializing predict_model()
2023-04-28 20:48:18,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124310>)
2023-04-28 20:48:18,003:INFO:Checking exceptions
2023-04-28 20:48:18,003:INFO:Preloading libraries
2023-04-28 20:48:18,004:INFO:Set up data.
2023-04-28 20:48:18,014:INFO:Set up index.
2023-04-28 20:49:03,445:INFO:Initializing load_model()
2023-04-28 20:49:03,446:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:04,087:INFO:Initializing predict_model()
2023-04-28 20:49:04,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9ab0>)
2023-04-28 20:49:04,088:INFO:Checking exceptions
2023-04-28 20:49:04,088:INFO:Preloading libraries
2023-04-28 20:49:04,089:INFO:Set up data.
2023-04-28 20:49:04,095:INFO:Set up index.
2023-04-28 20:49:35,974:INFO:Initializing load_model()
2023-04-28 20:49:35,976:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:36,629:INFO:Initializing predict_model()
2023-04-28 20:49:36,629:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032c20>)
2023-04-28 20:49:36,630:INFO:Checking exceptions
2023-04-28 20:49:36,630:INFO:Preloading libraries
2023-04-28 20:49:36,630:INFO:Set up data.
2023-04-28 20:49:36,637:INFO:Set up index.
2023-04-28 20:49:46,776:INFO:Initializing load_model()
2023-04-28 20:49:46,777:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:47,379:INFO:Initializing predict_model()
2023-04-28 20:49:47,379:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032830>)
2023-04-28 20:49:47,380:INFO:Checking exceptions
2023-04-28 20:49:47,381:INFO:Preloading libraries
2023-04-28 20:49:47,381:INFO:Set up data.
2023-04-28 20:49:47,388:INFO:Set up index.
2023-04-28 20:49:51,901:INFO:Initializing load_model()
2023-04-28 20:49:51,902:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:52,166:INFO:Initializing predict_model()
2023-04-28 20:49:52,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe5800f2e60>)
2023-04-28 20:49:52,167:INFO:Checking exceptions
2023-04-28 20:49:52,168:INFO:Preloading libraries
2023-04-28 20:49:52,168:INFO:Set up data.
2023-04-28 20:49:52,176:INFO:Set up index.
2023-04-28 20:49:56,494:INFO:Initializing load_model()
2023-04-28 20:49:56,495:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:56,703:INFO:Initializing predict_model()
2023-04-28 20:49:56,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:49:56,704:INFO:Checking exceptions
2023-04-28 20:49:56,704:INFO:Preloading libraries
2023-04-28 20:49:56,704:INFO:Set up data.
2023-04-28 20:49:56,711:INFO:Set up index.
2023-04-28 20:49:57,038:INFO:Initializing load_model()
2023-04-28 20:49:57,039:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:57,262:INFO:Initializing predict_model()
2023-04-28 20:49:57,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032050>)
2023-04-28 20:49:57,263:INFO:Checking exceptions
2023-04-28 20:49:57,264:INFO:Preloading libraries
2023-04-28 20:49:57,264:INFO:Set up data.
2023-04-28 20:49:57,272:INFO:Set up index.
2023-04-28 20:49:57,734:INFO:Initializing load_model()
2023-04-28 20:49:57,736:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:57,967:INFO:Initializing predict_model()
2023-04-28 20:49:57,968:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032dd0>)
2023-04-28 20:49:57,968:INFO:Checking exceptions
2023-04-28 20:49:57,968:INFO:Preloading libraries
2023-04-28 20:49:57,969:INFO:Set up data.
2023-04-28 20:49:57,976:INFO:Set up index.
2023-04-28 20:49:58,010:INFO:Initializing load_model()
2023-04-28 20:49:58,011:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:58,273:INFO:Initializing predict_model()
2023-04-28 20:49:58,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032440>)
2023-04-28 20:49:58,276:INFO:Checking exceptions
2023-04-28 20:49:58,277:INFO:Preloading libraries
2023-04-28 20:49:58,277:INFO:Set up data.
2023-04-28 20:49:58,288:INFO:Set up index.
2023-04-28 20:49:58,369:INFO:Initializing load_model()
2023-04-28 20:49:58,370:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:49:58,672:INFO:Initializing predict_model()
2023-04-28 20:49:58,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0327a0>)
2023-04-28 20:49:58,677:INFO:Checking exceptions
2023-04-28 20:49:58,683:INFO:Preloading libraries
2023-04-28 20:49:58,700:INFO:Set up data.
2023-04-28 20:49:58,714:INFO:Set up index.
2023-04-28 20:49:59,382:WARNING:/workspaces/ITCS-4122-Team-19/.venv/lib/python3.10/site-packages/pycaret/internal/pipeline.py:271: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_full_transform(

2023-04-28 20:50:12,239:INFO:Initializing load_model()
2023-04-28 20:50:12,239:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:12,482:INFO:Initializing predict_model()
2023-04-28 20:50:12,483:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b033400>)
2023-04-28 20:50:12,483:INFO:Checking exceptions
2023-04-28 20:50:12,483:INFO:Preloading libraries
2023-04-28 20:50:12,484:INFO:Set up data.
2023-04-28 20:50:12,490:INFO:Set up index.
2023-04-28 20:50:15,872:INFO:Initializing load_model()
2023-04-28 20:50:15,873:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:16,141:INFO:Initializing predict_model()
2023-04-28 20:50:16,141:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd8ca0>)
2023-04-28 20:50:16,141:INFO:Checking exceptions
2023-04-28 20:50:16,142:INFO:Preloading libraries
2023-04-28 20:50:16,142:INFO:Set up data.
2023-04-28 20:50:16,149:INFO:Set up index.
2023-04-28 20:50:21,120:INFO:Initializing load_model()
2023-04-28 20:50:21,121:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:21,386:INFO:Initializing predict_model()
2023-04-28 20:50:21,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032950>)
2023-04-28 20:50:21,387:INFO:Checking exceptions
2023-04-28 20:50:21,387:INFO:Preloading libraries
2023-04-28 20:50:21,387:INFO:Set up data.
2023-04-28 20:50:21,395:INFO:Set up index.
2023-04-28 20:50:52,370:INFO:Initializing load_model()
2023-04-28 20:50:52,370:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:52,596:INFO:Initializing predict_model()
2023-04-28 20:50:52,596:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd8ca0>)
2023-04-28 20:50:52,596:INFO:Checking exceptions
2023-04-28 20:50:52,597:INFO:Preloading libraries
2023-04-28 20:50:52,597:INFO:Set up data.
2023-04-28 20:50:52,606:INFO:Set up index.
2023-04-28 20:50:54,806:INFO:Initializing load_model()
2023-04-28 20:50:54,807:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:55,024:INFO:Initializing predict_model()
2023-04-28 20:50:55,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b030940>)
2023-04-28 20:50:55,025:INFO:Checking exceptions
2023-04-28 20:50:55,025:INFO:Preloading libraries
2023-04-28 20:50:55,025:INFO:Set up data.
2023-04-28 20:50:55,032:INFO:Set up index.
2023-04-28 20:50:57,296:INFO:Initializing load_model()
2023-04-28 20:50:57,296:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:57,520:INFO:Initializing predict_model()
2023-04-28 20:50:57,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:50:57,521:INFO:Checking exceptions
2023-04-28 20:50:57,521:INFO:Preloading libraries
2023-04-28 20:50:57,522:INFO:Set up data.
2023-04-28 20:50:57,529:INFO:Set up index.
2023-04-28 20:50:58,521:INFO:Initializing load_model()
2023-04-28 20:50:58,522:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:50:58,770:INFO:Initializing predict_model()
2023-04-28 20:50:58,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:50:58,771:INFO:Checking exceptions
2023-04-28 20:50:58,771:INFO:Preloading libraries
2023-04-28 20:50:58,771:INFO:Set up data.
2023-04-28 20:50:58,778:INFO:Set up index.
2023-04-28 20:51:00,201:INFO:Initializing load_model()
2023-04-28 20:51:00,201:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:00,452:INFO:Initializing predict_model()
2023-04-28 20:51:00,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9b40>)
2023-04-28 20:51:00,453:INFO:Checking exceptions
2023-04-28 20:51:00,454:INFO:Preloading libraries
2023-04-28 20:51:00,454:INFO:Set up data.
2023-04-28 20:51:00,461:INFO:Set up index.
2023-04-28 20:51:03,732:INFO:Initializing load_model()
2023-04-28 20:51:03,732:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:03,938:INFO:Initializing predict_model()
2023-04-28 20:51:03,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:51:03,939:INFO:Checking exceptions
2023-04-28 20:51:03,939:INFO:Preloading libraries
2023-04-28 20:51:03,939:INFO:Set up data.
2023-04-28 20:51:03,946:INFO:Set up index.
2023-04-28 20:51:05,680:INFO:Initializing load_model()
2023-04-28 20:51:05,682:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:05,898:INFO:Initializing predict_model()
2023-04-28 20:51:05,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0b2a70>)
2023-04-28 20:51:05,898:INFO:Checking exceptions
2023-04-28 20:51:05,899:INFO:Preloading libraries
2023-04-28 20:51:05,899:INFO:Set up data.
2023-04-28 20:51:05,905:INFO:Set up index.
2023-04-28 20:51:08,033:INFO:Initializing load_model()
2023-04-28 20:51:08,034:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:08,300:INFO:Initializing predict_model()
2023-04-28 20:51:08,300:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe5800f2e60>)
2023-04-28 20:51:08,300:INFO:Checking exceptions
2023-04-28 20:51:08,300:INFO:Preloading libraries
2023-04-28 20:51:08,301:INFO:Set up data.
2023-04-28 20:51:08,307:INFO:Set up index.
2023-04-28 20:51:10,837:INFO:Initializing load_model()
2023-04-28 20:51:10,838:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:11,052:INFO:Initializing predict_model()
2023-04-28 20:51:11,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032950>)
2023-04-28 20:51:11,053:INFO:Checking exceptions
2023-04-28 20:51:11,053:INFO:Preloading libraries
2023-04-28 20:51:11,054:INFO:Set up data.
2023-04-28 20:51:11,060:INFO:Set up index.
2023-04-28 20:51:12,710:INFO:Initializing load_model()
2023-04-28 20:51:12,710:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:12,924:INFO:Initializing predict_model()
2023-04-28 20:51:12,925:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe5800f2e60>)
2023-04-28 20:51:12,925:INFO:Checking exceptions
2023-04-28 20:51:12,925:INFO:Preloading libraries
2023-04-28 20:51:12,926:INFO:Set up data.
2023-04-28 20:51:12,932:INFO:Set up index.
2023-04-28 20:51:13,269:INFO:Initializing load_model()
2023-04-28 20:51:13,269:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:13,490:INFO:Initializing predict_model()
2023-04-28 20:51:13,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9120>)
2023-04-28 20:51:13,491:INFO:Checking exceptions
2023-04-28 20:51:13,492:INFO:Preloading libraries
2023-04-28 20:51:13,492:INFO:Set up data.
2023-04-28 20:51:13,498:INFO:Set up index.
2023-04-28 20:51:14,853:INFO:Initializing load_model()
2023-04-28 20:51:14,855:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:15,102:INFO:Initializing predict_model()
2023-04-28 20:51:15,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:51:15,103:INFO:Checking exceptions
2023-04-28 20:51:15,103:INFO:Preloading libraries
2023-04-28 20:51:15,103:INFO:Set up data.
2023-04-28 20:51:15,110:INFO:Set up index.
2023-04-28 20:51:15,221:INFO:Initializing load_model()
2023-04-28 20:51:15,221:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:15,634:INFO:Initializing load_model()
2023-04-28 20:51:15,645:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:15,694:INFO:Initializing predict_model()
2023-04-28 20:51:15,694:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b033f40>)
2023-04-28 20:51:15,695:INFO:Checking exceptions
2023-04-28 20:51:15,695:INFO:Preloading libraries
2023-04-28 20:51:15,697:INFO:Set up data.
2023-04-28 20:51:15,718:INFO:Set up index.
2023-04-28 20:51:15,997:INFO:Initializing predict_model()
2023-04-28 20:51:16,004:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b032c20>)
2023-04-28 20:51:16,004:INFO:Checking exceptions
2023-04-28 20:51:16,007:INFO:Preloading libraries
2023-04-28 20:51:16,009:INFO:Set up data.
2023-04-28 20:51:16,016:INFO:Set up index.
2023-04-28 20:51:17,479:INFO:Initializing load_model()
2023-04-28 20:51:17,480:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:17,740:INFO:Initializing predict_model()
2023-04-28 20:51:17,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afdb5b0>)
2023-04-28 20:51:17,742:INFO:Checking exceptions
2023-04-28 20:51:17,742:INFO:Preloading libraries
2023-04-28 20:51:17,743:INFO:Set up data.
2023-04-28 20:51:17,750:INFO:Set up index.
2023-04-28 20:51:20,621:INFO:Initializing load_model()
2023-04-28 20:51:20,621:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:20,847:INFO:Initializing predict_model()
2023-04-28 20:51:20,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0301f0>)
2023-04-28 20:51:20,848:INFO:Checking exceptions
2023-04-28 20:51:20,848:INFO:Preloading libraries
2023-04-28 20:51:20,849:INFO:Set up data.
2023-04-28 20:51:20,859:INFO:Set up index.
2023-04-28 20:51:23,810:INFO:Initializing load_model()
2023-04-28 20:51:23,811:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:24,043:INFO:Initializing predict_model()
2023-04-28 20:51:24,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:51:24,044:INFO:Checking exceptions
2023-04-28 20:51:24,044:INFO:Preloading libraries
2023-04-28 20:51:24,044:INFO:Set up data.
2023-04-28 20:51:24,051:INFO:Set up index.
2023-04-28 20:51:25,788:INFO:Initializing load_model()
2023-04-28 20:51:25,789:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:25,999:INFO:Initializing predict_model()
2023-04-28 20:51:26,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd8ca0>)
2023-04-28 20:51:26,000:INFO:Checking exceptions
2023-04-28 20:51:26,001:INFO:Preloading libraries
2023-04-28 20:51:26,001:INFO:Set up data.
2023-04-28 20:51:26,009:INFO:Set up index.
2023-04-28 20:51:27,144:INFO:Initializing load_model()
2023-04-28 20:51:27,146:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:27,362:INFO:Initializing predict_model()
2023-04-28 20:51:27,362:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b1dd1b0>)
2023-04-28 20:51:27,362:INFO:Checking exceptions
2023-04-28 20:51:27,362:INFO:Preloading libraries
2023-04-28 20:51:27,363:INFO:Set up data.
2023-04-28 20:51:27,369:INFO:Set up index.
2023-04-28 20:51:30,200:INFO:Initializing load_model()
2023-04-28 20:51:30,201:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:30,449:INFO:Initializing predict_model()
2023-04-28 20:51:30,449:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9a20>)
2023-04-28 20:51:30,449:INFO:Checking exceptions
2023-04-28 20:51:30,450:INFO:Preloading libraries
2023-04-28 20:51:30,450:INFO:Set up data.
2023-04-28 20:51:30,457:INFO:Set up index.
2023-04-28 20:51:33,738:INFO:Initializing load_model()
2023-04-28 20:51:33,738:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:33,931:INFO:Initializing predict_model()
2023-04-28 20:51:33,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:51:33,932:INFO:Checking exceptions
2023-04-28 20:51:33,933:INFO:Preloading libraries
2023-04-28 20:51:33,933:INFO:Set up data.
2023-04-28 20:51:33,940:INFO:Set up index.
2023-04-28 20:51:35,515:INFO:Initializing load_model()
2023-04-28 20:51:35,517:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:35,723:INFO:Initializing predict_model()
2023-04-28 20:51:35,723:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124b80>)
2023-04-28 20:51:35,723:INFO:Checking exceptions
2023-04-28 20:51:35,723:INFO:Preloading libraries
2023-04-28 20:51:35,723:INFO:Set up data.
2023-04-28 20:51:35,730:INFO:Set up index.
2023-04-28 20:51:39,270:INFO:Initializing load_model()
2023-04-28 20:51:39,271:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:39,508:INFO:Initializing predict_model()
2023-04-28 20:51:39,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0b27a0>)
2023-04-28 20:51:39,510:INFO:Checking exceptions
2023-04-28 20:51:39,511:INFO:Preloading libraries
2023-04-28 20:51:39,511:INFO:Set up data.
2023-04-28 20:51:39,518:INFO:Set up index.
2023-04-28 20:51:41,782:INFO:Initializing load_model()
2023-04-28 20:51:41,782:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:42,022:INFO:Initializing predict_model()
2023-04-28 20:51:42,023:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9ab0>)
2023-04-28 20:51:42,023:INFO:Checking exceptions
2023-04-28 20:51:42,023:INFO:Preloading libraries
2023-04-28 20:51:42,023:INFO:Set up data.
2023-04-28 20:51:42,030:INFO:Set up index.
2023-04-28 20:51:43,080:INFO:Initializing load_model()
2023-04-28 20:51:43,081:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:43,323:INFO:Initializing predict_model()
2023-04-28 20:51:43,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9b40>)
2023-04-28 20:51:43,324:INFO:Checking exceptions
2023-04-28 20:51:43,325:INFO:Preloading libraries
2023-04-28 20:51:43,325:INFO:Set up data.
2023-04-28 20:51:43,331:INFO:Set up index.
2023-04-28 20:51:43,969:INFO:Initializing load_model()
2023-04-28 20:51:43,970:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:51:44,203:INFO:Initializing predict_model()
2023-04-28 20:51:44,204:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afda440>)
2023-04-28 20:51:44,204:INFO:Checking exceptions
2023-04-28 20:51:44,204:INFO:Preloading libraries
2023-04-28 20:51:44,205:INFO:Set up data.
2023-04-28 20:51:44,212:INFO:Set up index.
2023-04-28 20:52:21,900:INFO:Initializing load_model()
2023-04-28 20:52:21,901:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:22,160:INFO:Initializing predict_model()
2023-04-28 20:52:22,161:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afdb5b0>)
2023-04-28 20:52:22,161:INFO:Checking exceptions
2023-04-28 20:52:22,162:INFO:Preloading libraries
2023-04-28 20:52:22,162:INFO:Set up data.
2023-04-28 20:52:22,172:INFO:Set up index.
2023-04-28 20:52:24,639:INFO:Initializing load_model()
2023-04-28 20:52:24,641:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:24,920:INFO:Initializing predict_model()
2023-04-28 20:52:24,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afdb5b0>)
2023-04-28 20:52:24,921:INFO:Checking exceptions
2023-04-28 20:52:24,922:INFO:Preloading libraries
2023-04-28 20:52:24,922:INFO:Set up data.
2023-04-28 20:52:24,928:INFO:Set up index.
2023-04-28 20:52:27,715:INFO:Initializing load_model()
2023-04-28 20:52:27,715:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:27,947:INFO:Initializing predict_model()
2023-04-28 20:52:27,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124c10>)
2023-04-28 20:52:27,948:INFO:Checking exceptions
2023-04-28 20:52:27,948:INFO:Preloading libraries
2023-04-28 20:52:27,949:INFO:Set up data.
2023-04-28 20:52:27,956:INFO:Set up index.
2023-04-28 20:52:29,245:INFO:Initializing load_model()
2023-04-28 20:52:29,245:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:29,513:INFO:Initializing predict_model()
2023-04-28 20:52:29,513:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124c10>)
2023-04-28 20:52:29,513:INFO:Checking exceptions
2023-04-28 20:52:29,514:INFO:Preloading libraries
2023-04-28 20:52:29,515:INFO:Set up data.
2023-04-28 20:52:29,523:INFO:Set up index.
2023-04-28 20:52:30,776:INFO:Initializing load_model()
2023-04-28 20:52:30,777:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:31,012:INFO:Initializing predict_model()
2023-04-28 20:52:31,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9120>)
2023-04-28 20:52:31,013:INFO:Checking exceptions
2023-04-28 20:52:31,014:INFO:Preloading libraries
2023-04-28 20:52:31,014:INFO:Set up data.
2023-04-28 20:52:31,024:INFO:Set up index.
2023-04-28 20:52:32,302:INFO:Initializing load_model()
2023-04-28 20:52:32,303:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:32,525:INFO:Initializing predict_model()
2023-04-28 20:52:32,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124310>)
2023-04-28 20:52:32,526:INFO:Checking exceptions
2023-04-28 20:52:32,526:INFO:Preloading libraries
2023-04-28 20:52:32,527:INFO:Set up data.
2023-04-28 20:52:32,533:INFO:Set up index.
2023-04-28 20:52:36,692:INFO:Initializing load_model()
2023-04-28 20:52:36,693:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:52:36,969:INFO:Initializing predict_model()
2023-04-28 20:52:36,970:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe5800f31c0>)
2023-04-28 20:52:36,970:INFO:Checking exceptions
2023-04-28 20:52:36,971:INFO:Preloading libraries
2023-04-28 20:52:36,972:INFO:Set up data.
2023-04-28 20:52:36,978:INFO:Set up index.
2023-04-28 20:53:22,219:INFO:Initializing load_model()
2023-04-28 20:53:22,219:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:53:22,488:INFO:Initializing predict_model()
2023-04-28 20:53:22,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124c10>)
2023-04-28 20:53:22,489:INFO:Checking exceptions
2023-04-28 20:53:22,489:INFO:Preloading libraries
2023-04-28 20:53:22,489:INFO:Set up data.
2023-04-28 20:53:22,496:INFO:Set up index.
2023-04-28 20:53:56,002:INFO:Initializing load_model()
2023-04-28 20:53:56,004:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:53:56,258:INFO:Initializing predict_model()
2023-04-28 20:53:56,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afdb5b0>)
2023-04-28 20:53:56,259:INFO:Checking exceptions
2023-04-28 20:53:56,259:INFO:Preloading libraries
2023-04-28 20:53:56,260:INFO:Set up data.
2023-04-28 20:53:56,266:INFO:Set up index.
2023-04-28 20:53:58,947:INFO:Initializing load_model()
2023-04-28 20:53:58,948:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:53:59,188:INFO:Initializing predict_model()
2023-04-28 20:53:59,189:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b124310>)
2023-04-28 20:53:59,189:INFO:Checking exceptions
2023-04-28 20:53:59,189:INFO:Preloading libraries
2023-04-28 20:53:59,189:INFO:Set up data.
2023-04-28 20:53:59,196:INFO:Set up index.
2023-04-28 20:55:44,794:INFO:Initializing load_model()
2023-04-28 20:55:44,795:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:55:45,027:INFO:Initializing predict_model()
2023-04-28 20:55:45,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe57b64ad40>)
2023-04-28 20:55:45,028:INFO:Checking exceptions
2023-04-28 20:55:45,028:INFO:Preloading libraries
2023-04-28 20:55:45,029:INFO:Set up data.
2023-04-28 20:55:45,036:INFO:Set up index.
2023-04-28 20:56:04,449:INFO:Initializing load_model()
2023-04-28 20:56:04,450:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:04,671:INFO:Initializing predict_model()
2023-04-28 20:56:04,671:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:56:04,671:INFO:Checking exceptions
2023-04-28 20:56:04,671:INFO:Preloading libraries
2023-04-28 20:56:04,672:INFO:Set up data.
2023-04-28 20:56:04,682:INFO:Set up index.
2023-04-28 20:56:23,714:INFO:Initializing load_model()
2023-04-28 20:56:23,714:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:23,930:INFO:Initializing predict_model()
2023-04-28 20:56:23,931:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b031510>)
2023-04-28 20:56:23,931:INFO:Checking exceptions
2023-04-28 20:56:23,931:INFO:Preloading libraries
2023-04-28 20:56:23,932:INFO:Set up data.
2023-04-28 20:56:23,938:INFO:Set up index.
2023-04-28 20:56:32,329:INFO:Initializing load_model()
2023-04-28 20:56:32,330:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:32,572:INFO:Initializing predict_model()
2023-04-28 20:56:32,572:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0303a0>)
2023-04-28 20:56:32,572:INFO:Checking exceptions
2023-04-28 20:56:32,573:INFO:Preloading libraries
2023-04-28 20:56:32,574:INFO:Set up data.
2023-04-28 20:56:32,580:INFO:Set up index.
2023-04-28 20:56:33,671:INFO:Initializing load_model()
2023-04-28 20:56:33,672:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:33,911:INFO:Initializing predict_model()
2023-04-28 20:56:33,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b0b2a70>)
2023-04-28 20:56:33,911:INFO:Checking exceptions
2023-04-28 20:56:33,911:INFO:Preloading libraries
2023-04-28 20:56:33,912:INFO:Set up data.
2023-04-28 20:56:33,919:INFO:Set up index.
2023-04-28 20:56:35,613:INFO:Initializing load_model()
2023-04-28 20:56:35,614:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:35,852:INFO:Initializing predict_model()
2023-04-28 20:56:35,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9120>)
2023-04-28 20:56:35,853:INFO:Checking exceptions
2023-04-28 20:56:35,853:INFO:Preloading libraries
2023-04-28 20:56:35,854:INFO:Set up data.
2023-04-28 20:56:35,860:INFO:Set up index.
2023-04-28 20:56:36,767:INFO:Initializing load_model()
2023-04-28 20:56:36,768:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:36,983:INFO:Initializing predict_model()
2023-04-28 20:56:36,983:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:56:36,984:INFO:Checking exceptions
2023-04-28 20:56:36,984:INFO:Preloading libraries
2023-04-28 20:56:36,984:INFO:Set up data.
2023-04-28 20:56:36,991:INFO:Set up index.
2023-04-28 20:56:37,653:INFO:Initializing load_model()
2023-04-28 20:56:37,653:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:37,916:INFO:Initializing predict_model()
2023-04-28 20:56:37,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9b40>)
2023-04-28 20:56:37,916:INFO:Checking exceptions
2023-04-28 20:56:37,917:INFO:Preloading libraries
2023-04-28 20:56:37,917:INFO:Set up data.
2023-04-28 20:56:37,925:INFO:Set up index.
2023-04-28 20:56:40,407:INFO:Initializing load_model()
2023-04-28 20:56:40,407:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:40,662:INFO:Initializing predict_model()
2023-04-28 20:56:40,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd84c0>)
2023-04-28 20:56:40,662:INFO:Checking exceptions
2023-04-28 20:56:40,663:INFO:Preloading libraries
2023-04-28 20:56:40,663:INFO:Set up data.
2023-04-28 20:56:40,670:INFO:Set up index.
2023-04-28 20:56:42,830:INFO:Initializing load_model()
2023-04-28 20:56:42,831:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:43,053:INFO:Initializing predict_model()
2023-04-28 20:56:43,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afda440>)
2023-04-28 20:56:43,054:INFO:Checking exceptions
2023-04-28 20:56:43,054:INFO:Preloading libraries
2023-04-28 20:56:43,055:INFO:Set up data.
2023-04-28 20:56:43,061:INFO:Set up index.
2023-04-28 20:56:45,655:INFO:Initializing load_model()
2023-04-28 20:56:45,655:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:45,890:INFO:Initializing predict_model()
2023-04-28 20:56:45,891:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afdb5b0>)
2023-04-28 20:56:45,891:INFO:Checking exceptions
2023-04-28 20:56:45,891:INFO:Preloading libraries
2023-04-28 20:56:45,892:INFO:Set up data.
2023-04-28 20:56:45,898:INFO:Set up index.
2023-04-28 20:56:47,965:INFO:Initializing load_model()
2023-04-28 20:56:47,967:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:48,211:INFO:Initializing predict_model()
2023-04-28 20:56:48,211:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd8ca0>)
2023-04-28 20:56:48,212:INFO:Checking exceptions
2023-04-28 20:56:48,212:INFO:Preloading libraries
2023-04-28 20:56:48,213:INFO:Set up data.
2023-04-28 20:56:48,219:INFO:Set up index.
2023-04-28 20:56:51,590:INFO:Initializing load_model()
2023-04-28 20:56:51,591:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:51,821:INFO:Initializing predict_model()
2023-04-28 20:56:51,822:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe57b64ad40>)
2023-04-28 20:56:51,822:INFO:Checking exceptions
2023-04-28 20:56:51,822:INFO:Preloading libraries
2023-04-28 20:56:51,822:INFO:Set up data.
2023-04-28 20:56:51,829:INFO:Set up index.
2023-04-28 20:56:53,134:INFO:Initializing load_model()
2023-04-28 20:56:53,134:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:53,361:INFO:Initializing predict_model()
2023-04-28 20:56:53,362:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9a20>)
2023-04-28 20:56:53,362:INFO:Checking exceptions
2023-04-28 20:56:53,362:INFO:Preloading libraries
2023-04-28 20:56:53,363:INFO:Set up data.
2023-04-28 20:56:53,369:INFO:Set up index.
2023-04-28 20:56:55,527:INFO:Initializing load_model()
2023-04-28 20:56:55,528:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:55,737:INFO:Initializing predict_model()
2023-04-28 20:56:55,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd8ca0>)
2023-04-28 20:56:55,737:INFO:Checking exceptions
2023-04-28 20:56:55,737:INFO:Preloading libraries
2023-04-28 20:56:55,738:INFO:Set up data.
2023-04-28 20:56:55,744:INFO:Set up index.
2023-04-28 20:56:56,638:INFO:Initializing load_model()
2023-04-28 20:56:56,639:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:56,867:INFO:Initializing predict_model()
2023-04-28 20:56:56,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9a20>)
2023-04-28 20:56:56,867:INFO:Checking exceptions
2023-04-28 20:56:56,868:INFO:Preloading libraries
2023-04-28 20:56:56,868:INFO:Set up data.
2023-04-28 20:56:56,874:INFO:Set up index.
2023-04-28 20:56:57,886:INFO:Initializing load_model()
2023-04-28 20:56:57,887:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:58,118:INFO:Initializing predict_model()
2023-04-28 20:56:58,118:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9bd0>)
2023-04-28 20:56:58,118:INFO:Checking exceptions
2023-04-28 20:56:58,119:INFO:Preloading libraries
2023-04-28 20:56:58,119:INFO:Set up data.
2023-04-28 20:56:58,126:INFO:Set up index.
2023-04-28 20:56:58,811:INFO:Initializing load_model()
2023-04-28 20:56:58,812:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:56:59,026:INFO:Initializing predict_model()
2023-04-28 20:56:59,026:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53b033eb0>)
2023-04-28 20:56:59,027:INFO:Checking exceptions
2023-04-28 20:56:59,027:INFO:Preloading libraries
2023-04-28 20:56:59,027:INFO:Set up data.
2023-04-28 20:56:59,033:INFO:Set up index.
2023-04-28 20:57:05,816:INFO:Initializing load_model()
2023-04-28 20:57:05,817:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:57:06,052:INFO:Initializing predict_model()
2023-04-28 20:57:06,052:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:57:06,053:INFO:Checking exceptions
2023-04-28 20:57:06,053:INFO:Preloading libraries
2023-04-28 20:57:06,053:INFO:Set up data.
2023-04-28 20:57:06,060:INFO:Set up index.
2023-04-28 20:57:07,758:INFO:Initializing load_model()
2023-04-28 20:57:07,759:INFO:load_model(model_name=saved_dt_model, platform=None, authentication=None, verbose=True)
2023-04-28 20:57:07,981:INFO:Initializing predict_model()
2023-04-28 20:57:07,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fe53b3618d0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Age at enrollment',
                                             'Curricular units 1st sem '
                                             '(approved)',
                                             'Curricular units 2nd sem '
                                             '(approved)',
                                             'Unemployment rate',
                                             'Inflation rate', 'GDP'],
                                    transformer=SimpleImputer())),
                ('cate...
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Marital status', 'Course',
                                             'Nacionality'],
                                    transformer=OneHotEncoder(cols=['Marital '
                                                                    'status',
                                                                    'Course',
                                                                    'Nacionality'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', DecisionTreeClassifier(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7fe53afd9360>)
2023-04-28 20:57:07,981:INFO:Checking exceptions
2023-04-28 20:57:07,982:INFO:Preloading libraries
2023-04-28 20:57:07,982:INFO:Set up data.
2023-04-28 20:57:07,988:INFO:Set up index.
